(function(Mobi2Go, _, navigator, page) {
    'use strict';
    var slice = Array.prototype.slice;
    _.extend(Mobi2Go.app, {
        ready: false,
        setReady: function() {
            Mobi2Go.app.ready = true;
            Mobi2Go.trigger('app', 'ready', Mobi2Go.app.state);
        },
        preloadImages: function() {
            var url,
                images = {};
            if (Mobi2Go.config.preload_images !== undefined && Mobi2Go.config.preload_images.length) {
                for (url in Mobi2Go.config.preload_images)
                    if (Mobi2Go.config.preload_images.hasOwnProperty(url)) {
                        images[url] = new Image();
                        images[url].src = Mobi2Go.app.base_url +
                            Mobi2Go.config.preload_images[url];
                    }
            }
        },
        position: {
            latitude: null,
            longitude: null
        },
        setPosition: function(lat, lon) {
            Mobi2Go.app.position = {
                latitude: lat,
                longitude: lon
            };
            Mobi2Go.trigger('app', 'setPosition', Mobi2Go.app.position);
        },
        findPosition: function(callback) {
            return;
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(setPosition);
            }

            function setPosition(position) {
                var coords = position.coords;
                Mobi2Go.app.setPosition(coords.latitude, coords.longitude);
                if (typeof(callback) === 'function') {
                    callback();
                }
                return true;
            }
        },
        isMobileUI: function() {
            return /mobile/.test(Mobi2Go.app.ui_name);
        },
        platform: null,
        setPlatform: function(platform) {
            var platforms = [
                'web',
                'mobile',
                'facebook',
                'ios',
                'android'
            ];
            if (_.contains(platforms, platform.toLowerCase())) {
                return this.platform = platform.toLowerCase();
            }
        },
        getPlatform: function() {
            if (this.platform) {
                return this.platform;
            }
            var platforms = [
                    'web',
                    'mobile',
                    'facebook',
                    'ios',
                    'android'
                ],
                qs_platform = Mobi2Go.helpers.getQueryStringAsObject().platform;
            if (qs_platform && _.contains(platforms, qs_platform.toLowerCase())) {
                return this.platform = qs_platform.toLowerCase();
            }
            return this.platform = this.isMobileUI() ? 'mobile' : 'web';
        },
        switchUI: function() {
            var query_string = page.search,
                current_ui = Mobi2Go.app.ui_name;
            if (query_string) {
                var re = /(&|)ui=(mobile|web)(-embed|)(&no_redirect|)/g;
                query_string = query_string.replace(re, '');
                query_string += '&';
            }
            var map = {
                'web': 'mobile',
                'web-embed': 'mobile-embed',
                'mobile': 'web',
                'mobile-embed': 'web-embed'
            };
            if (map[current_ui]) {
                page.search = query_string + 'ui=' + map[current_ui] + '&no_redirect';
            }
        },
        mixinEvents: function(channel, object) {
            var events = {
                bind: function(event_name, fn) {
                    Mobi2Go.bind(channel, event_name, fn);
                    return object;
                },
                unbind: function(event_name, fn) {
                    Mobi2Go.unbind(channel, event_name, fn);
                    return object;
                },
                trigger: function() {
                    if (object && object.mute !== undefined && object.mute)
                        return object;
                    var args = [
                        channel
                    ].concat(slice.call(arguments));
                    Mobi2Go.trigger.apply(Mobi2Go, args);
                    return object;
                },
                once: function(event_name, fn) {
                    Mobi2Go.once(channel, event_name, fn);
                    return object;
                }
            };
            if (typeof object === 'object') {
                _.extend(object, events);
            }
            return events;
        },
        DATE_FORMAT: 'YYYY-MM-DD',
        DAYS: [
            'monday',
            'tuesday',
            'wednesday',
            'thursday',
            'friday',
            'saturday',
            'sunday'
        ]
    });
}(Mobi2Go, this._ || exports._, navigator, this.location));


(function(doc, window, Mobi2Go, $, _) {
    var FORCE_IFRAME_XDR = false;
    Mobi2Go.app.serverRequest = function(settings) {
        settings = prepareSettings(settings);
        $.ajax(settings);
    };
    if ($.support.cors && !FORCE_IFRAME_XDR) return;
    Mobi2Go.app.serverRequest = iframeServerRequest;
    var iframe = createIframe(),
        iframe_loaded = false,
        request_callbacks = {
            complete: {},
            success: {},
            error: {}
        };
    if (window.addEventListener)
        window.addEventListener('message', iframeResponseHandler, false);
    else if (window.attachEvent)
        window.attachEvent('onmessage', iframeResponseHandler);
    iframe.onload = function() {
        iframe_loaded = true;
    };
    iframe.onreadystatechange = function() {
        if (iframe.readyState === 'complete' || iframe.readyState === 'loaded') {
            iframe_loaded = true;
        }
    };

    function iframeServerRequest(settings) {
        var request_id = (+new Date()) + (~(Math.random() * 100000));
        settings = prepareSettings(settings);
        if (settings.jsonp && settings.type === 'GET') {
            if (!Mobi2Go.app.jsonp_callback) Mobi2Go.app.jsonp_callback = {};
            Mobi2Go.app.jsonp_callback[request_id] = function(response) {
                settings.success(response);
                delete Mobi2Go.app.jsonp_callback[request_id];
            }
            settings.url += '&callback=' + 'Mobi2Go.app.jsonp_callback[' + request_id + ']';
            if (settings.data) {
                settings.url += '&' + $.param(settings.data);
            }
            Mobi2Go.helpers.loadScripts([settings.url]);
            return;
        }
        if (!iframe_loaded) {
            var retry = function() {
                iframeServerRequest(settings);
            };
            setTimeout(retry, 20);
            return;
        }
        var data = {
            request_id: request_id,
            data: settings.data,
            contentType: settings.contentType,
            type: settings.type,
            url: settings.url
        };
        request_callbacks.complete[request_id] = _.isFunction(settings.complete) ? settings.complete : function() {};
        request_callbacks.success[request_id] = _.isFunction(settings.success) ? settings.success : function() {};
        request_callbacks.error[request_id] = _.isFunction(settings.error) ? settings.error : function() {};
        iframe.contentWindow.postMessage(JSON.stringify(data), Mobi2Go.app.base_url);
    }

    function iframeResponseHandler(message) {
        if (!message) return;
        var response = JSON.parse(message.data),
            request_id = response.request_id,
            status = response.status,
            payload;
        if (!request_id) return;
        payload = _.toArray(response.payload);
        request_callbacks[status][request_id].apply(null, payload);
    }

    function createIframe() {
        var iframe = doc.createElement('iframe');
        iframe.src = Mobi2Go.app.base_url + '/store/application/xdr-iframe.php?ho=' + Mobi2Go.headoffice.id;
        iframe.id = 'm2g-xdr-iframe';
        iframe.style.display = 'none';
        doc.getElementsByTagName('head')[0].appendChild(iframe);
        return iframe;
    }

    function prepareSettings(settings) {
        if (_.isArray(settings.endpoint)) {
            settings.endpoint = settings.endpoint.join('/');
        }
        settings.api_version = settings.api_version || 1.3;
        settings.url = Mobi2Go.app.base_url + '/api/' + settings.api_version + '/headoffice/' + Mobi2Go.headoffice.domain_name + '/' + settings.endpoint + '?s=' + Mobi2Go.app.session_id;
        if (window.M2G_XDEBUG) {
            settings.url += '&XDEBUG_PROFILE';
        }
        if (settings.query_string) {
            settings.url += '&' + settings.query_string;
        }
        settings.type = settings.type || 'GET';
        settings.dataType = 'json';
        settings.xhrFields = {
            withCredentials: true
        };
        settings.contentType = 'application/x-www-form-urlencoded; charset=UTF-8';
        settings.processData = true;
        if (settings.api_version === 1 && settings.type !== 'GET') {
            settings.contentType = 'application/json';
            settings.processData = false;
            try {
                settings.data = JSON.stringify(settings.data);
            } catch (e) {
                throw new Error('Unable to JSON stringify provided data');
            }
        }
        var error_callback = _.isFunction(settings.error) ? settings.error : function() {
            return false
        };
        settings.error = function(xhr, message) {
            var request_error_handler = error_callback.apply(null, arguments);
            if (!request_error_handler)
                Mobi2Go.trigger('app', 'serverRequestError', xhr, message, settings.endpoint);
        };
        settings.timeout = settings.timeout || 45000;
        return settings;
    }
}(this.document, this, Mobi2Go, jQuery, this._ || exports._));
if (!this.JSON) JSON = {};
if (this.JSON && (!JSON.stringify || !JSON.parse))
    eval(function(p, a, c, k, e, r) {
        e = function(c) {
            return (c < 62 ? '' : e(parseInt(c / 62))) + ((c = c % 62) < 36 ? c.toString(36) : String.fromCharCode(c + 29))
        };
        if ('0'.replace(0, e) == 0) {
            while (c--) r[e(c)] = k[c];
            k = [
                function(e) {
                    return r[e] || e
                }
            ];
            e = function() {
                return '\\w{1,2}'
            };
            c = 1
        }
        while (c--)
            if (k[c]) p = p.replace(new RegExp('\\b' + e(c) + '\\b', 'g'), k[c]);
        return p
    }('(3(){3 f(n){6 n<10?"0"+n:n}2(5 1b.w.7!=="3"){1b.w.7=3(a){6 8.getUTCFullYear()+"-"+f(8.getUTCMonth()+1)+"-"+f(8.getUTCDate())+"T"+f(8.getUTCHours())+":"+f(8.getUTCMinutes())+":"+f(8.getUTCSeconds())+"Z"};O.w.7=Number.w.7=Boolean.w.7=3(a){6 8.valueOf()}}y g=/[\\u0000\\R\\Q-\\1i\\1f\\1e\\1c\\1a-\\19\\18-\\17\\15-\\14\\13\\12-\\11]/g,h=/[\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\R\\Q-\\1i\\1f\\1e\\1c\\1a-\\19\\18-\\17\\15-\\14\\13\\12-\\11]/g,l,m,o={"\\b":"\\\\b","\\t":"\\\\t","\\n":"\\\\n","\\f":"\\\\f","\\r":"\\\\r",\'"\':\'\\\\"\',"\\\\":"\\\\\\\\"},p;3 q(b){h.S=0;6 h.I(b)?\'"\'+b.z(h,3(a){y c=o[a];6 5 c==="G"?c:"\\\\u"+("1h"+a.1g(0).P(16)).1d(-4)})+\'"\':\'"\'+b+\'"\'}3 r(a,b){y i,k,v,c,d=l,e,f=b[a];2(f&&5 f==="x"&&5 f.7==="3"){f=f.7(a)}2(5 p==="3"){f=p.H(b,a,f)}switch(5 f){D"G":6 q(f);D"N":6 isFinite(f)?O(f):"C";D"boolean":D"C":6 O(f);D"x":2(!f){6"C"}l+=m;e=[];2(M.w.P.apply(f)==="[x Array]"){c=f.B;A(i=0;i<c;i+=1){e[i]=r(i,f)||"C"}v=e.B===0?"[]":l?"[\\n"+l+e.E(",\\n"+l)+"\\n"+d+"]":"["+e.E(",")+"]";l=d;6 v}2(p&&5 p==="x"){c=p.B;A(i=0;i<c;i+=1){k=p[i];2(5 k==="G"){v=r(k,f);2(v){e.Y(q(k)+(l?": ":":")+v)}}}}J{A(k X f){2(M.W.H(f,k)){v=r(k,f);2(v){e.Y(q(k)+(l?": ":":")+v)}}}}v=e.B===0?"{}":l?"{\\n"+l+e.E(",\\n"+l)+"\\n"+d+"}":"{"+e.E(",")+"}";l=d;6 v}}2(5 9.K!=="3"){9.K=3(a,b,c){y i;l="";m="";2(5 c==="N"){A(i=0;i<c;i+=1){m+=" "}}J{2(5 c==="G"){m=c}}p=b;2(b&&5 b!=="3"&&(5 b!=="x"||5 b.B!=="N")){V U Error("9.K")}6 r("",{"":a})}}2(5 9.L!=="3"){9.L=3(d,e){y j;3 f(a,b){y k,v,c=a[b];2(c&&5 c==="x"){A(k X c){2(M.W.H(c,k)){v=f(c,k);2(v!==undefined){c[k]=v}J{delete c[k]}}}}6 e.H(a,b,c)}g.S=0;2(g.I(d)){d=d.z(g,3(a){6"\\\\u"+("1h"+a.1g(0).P(16)).1d(-4)})}2(/^[\\],:{}\\s]*$/.I(d.z(/\\\\(?:["\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").z(/"[^"\\\\\\n\\r]*"|true|false|C|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g,"]").z(/(?:^|:|,)(?:\\s*\\[)+/g,""))){j=eval("("+d+")");6 5 e==="3"?f({"":j},""):j}V U SyntaxError("9.L")}}})();', [], 81, '||if|function||typeof|return|toJSON|this|JSON|||||||||||||||||||||||prototype|object|var|replace|for|length|null|case|join||string|call|test|else|stringify|parse|Object|number|String|toString|u0600|u00ad|lastIndex||new|throw|hasOwnProperty|in|push|||uffff|ufff0|ufeff|u206f|u2060||u202f|u2028|u200f|u200c|Date|u17b5|slice|u17b4|u070f|charCodeAt|0000|u0604'.split('|'), 0, {}));
jQuery(Mobi2Go.app.root_element).html('<!--[if IE 6]><div id="m2g-view" class="m2g-view--desktop m2g-view--ie m2g-view--ie6 m2g-menu-layout--default m2g-menu-products--default m2g-menu-product-images--default"><![endif]--><!--[if IE 7]><div id="m2g-view" class="m2g-view--desktop m2g-view--ie m2g-view--ie7 m2g-menu-layout--default m2g-menu-products--default m2g-menu-product-images--default"><![endif]--><!--[if IE 8]><div id="m2g-view" class="m2g-view--desktop m2g-view--ie m2g-view--ie8 m2g-menu-layout--default m2g-menu-products--default m2g-menu-product-images--default"><![endif]--><!--[if IE 9]><div id="m2g-view" class="m2g-view--desktop m2g-view--ie m2g-view--ie9 m2g-menu-layout--default m2g-menu-products--default m2g-menu-product-images--default"><![endif]--><!--[if !IE]><!--><div id="m2g-view" class="m2g-view--desktop m2g-menu-layout--default m2g-menu-products--default m2g-menu-product-images--default"><!--<![endif]--><!-- Compatibility warning --><section class="m2g-compatibility-section m2g-section"><div class="m2g-section-container"><div class="m2g-compatibility-warning m2g-compatibility-warning--ie7">Warning:&nbsp;Mobi2Go is not compatible with Internet Explorer 7.</div><div class="m2g-compatibility-warning m2g-compatibility-warning--ie6">Warning:&nbsp;Mobi2Go is not compatible with Internet Explorer 6.</div></div></section><div data-view="customer-message"><script type="text/template" data-template="customer-message"><%if(customer_message_html){%><div class="m2g-container"><section data-view="customer-message" class="m2g-section m2g-customer-message"><div class="m2g-section-container m2g-customer-message-container"><div class="m2g-customer-message-icon m2g-icon m2g-icon--large m2g-icon--bell"></div><div class="m2g-customer-message-content m2g-custom-markdown-html"><%=customer_message_html%></div></div></section></div><%}%></script></div><div class="m2g-order m2g-container"><!-- MENU HTML MODULE --><section id="Menu" class="m2g-menu m2g-section" data-sticky-content><div class="m2g-section-container"><h2 class="m2g-menu-heading m2g-h2">Menu</h2><div data-menu-loader class="m2g-loading"><span class="m2g-icon m2g-icon--spinner"></span></div><!-- Category list --><div data-view="menu-categories"\nclass="m2g-menu-categories m2g-nav-list m2g-nav-list--horizontal"><script type="text/template" data-template="menu-categories"><%getActiveMenuCategories().each(function(category,i){%><a data-category="<%= category.id %>"\ndata-category-name="<%= category.backend_name %>"\ndata-tags="<%= category.tags.join(\' \') %>"\nclass="m2g-menu-category-item m2g-nav-list-item m2g-nav-list-item--hoverable <%= i === 0 ? \'m2g-nav-list-item--active\' : \'\'%>"><%=category.name%></a><%});%></script></div><!-- Products list --><div data-view="menu-products"\nclass="m2g-menu-products"><!-- Template --><script type="text/template" data-template="menu-products"><div data-product-equalise-size class="m2g-hidden"></div><%categories.each(function(category){%><div data-category="<%= category.id %>"\ndata-category-name="<%= category.backend_name %>"\ndata-tags="<%= category.tags.join(\' \') %>"\nclass="m2g-menu-category<%= category.id === selected_category_id ? \' m2g-menu-category--selected\' : \'\'%>"><div class="m2g-menu-category-info"><div class="m2g-menu-category-title"><h3 class="m2g-h3 m2g-menu-category-name m2g-title-text"><%=category.name%></h3><%if(category.description){%><span class="m2g-menu-category-description m2g-text--offset"><%=category.description%></span><%}%></div><%if(category.image_src){%><img class="m2g-menu-category-image m2g-image" src="<%= category.image_src %>"><%}%></div><div class="m2g-menu-products-list"><%category.getProducts().each(function(product){var in_stock=inStock(product);%><div class="m2g-menu-product-container"\ndata-product="<%= product.id %>"\ndata-product-name="<%= product.backend_name %>"\ndata-in-stock="<%= in_stock %>"\ndata-tags="<%= product.tags.join(\' \') %>"><div data-in-stock="<%= in_stock %>"\nclass="m2g-menu-product <%= product.image_src ? \' m2g-menu-product--with-image\' : \'\' %><%= !in_stock ? \' m2g-menu-product--out-of-stock\' : \'\' %> " tabindex="0" role="button"><%if(product.image_src){%><div class="m2g-menu-product-image-container"><img class="m2g-menu-product-image m2g-image" src="<%= product.image_src %>"></div><%}else{%><div class="m2g-menu-product-image-container"><div class="m2g-menu-product-image m2g-image m2g-image--placeholder"></div></div><%}%><%if(product.image_src_large){%><div class="m2g-menu-product-image-container--large"><img class="m2g-menu-product-image m2g-image" src="<%= product.image_src_large %>"></div><%}%><div class="m2g-menu-product-info"><span class="m2g-menu-product-name"><%=product.name%></span><%if(product.display_price){if(product.display_price.split(\',\').length>1){print(\'<div class="m2g-menu-product-price m2g-menu-product-price--display-price m2g-menu-product-price--multiple-parts">\');_.each(product.display_price.split(\',\'),function(price){print(\'<div class="m2g-menu-product-price-part">\'+price+\'</div>\')});print(\'</div>\')}else{print(\'<span class="m2g-menu-product-price m2g-menu-product-price--display-price">\'+product.display_price+\'</span>\')}}else{%><span class="m2g-menu-product-price"><%=product.getPrice()%></span><%}%><%if(!in_stock){%><div class="m2g-menu-product-out-of-stock-badge m2g-badge">Sold out</div><%}%><span class="m2g-menu-product-description m2g-text--offset"><%=product.description%></span></div><button class="m2g-menu-product-add-button m2g-button <%= in_stock ? \'m2g-button--primary m2g-button--add-button\' : \'m2g-button--disabled\' %>"\ntabindex="-1"><%if(!in_stock){%><span class="m2g-menu-product-add-button-text m2g-menu-product-add-button-text--sold-out">Sold out</span><%}else{%><span class="m2g-menu-product-add-button-text m2g-menu-product-add-button-text--long">Add to order</span><span class="m2g-menu-product-add-button-text m2g-menu-product-add-button-text--short m2g-hidden">Add</span><%}%></button><%_.each(product.tags,function(tag){%><div class="m2g-menu-product-tag" data-tag="<%= tag %>" title="<%= tag %>"></div><%});%></div></div><%});%></div><div class="m2g-clearfix"></div></div><%});%><div class="m2g-clearfix"></div></script></div><div class="m2g-clearfix"></div></div></section><section data-view="order-sections" data-sticky-aside class="m2g-section m2g-order-sections"><div class="m2g-section-container"><h2 class="m2g-order-sections-heading m2g-h2">Order</h2><div data-order-section="location"\nclass="m2g-order-location m2g-order-section"><!-- Order location --><div data-view="order-location"><!-- Template --><script type="text/template" data-template="order-location"><%if(locations.length>1){%><div class="m2g-order-section-header"><span class="m2g-order-section-title">Store</span><span class="m2g-order-section-status" data-order-section-status><%if(current_location){%><span data-show-locations-finder class="m2g-order-location-change m2g-text--link m2g-text--touchable m2g-text--offset">Change</span><%}%></span></div><%}%><%if(current_location){%><button data-icon-before data-order-location\nclass="m2g-order-location-button m2g-button<%=!current_location?\' m2g-button--primary\' : \'\'%> m2g-button--left-align m2g-form-element--full-width"><span class="m2g-icon m2g-icon--location"></span><span class="m2g-truncate"><%=current_location.name%></span></button><%if(current_location.customer_message_html){%><div class="m2g-order-location-customer-message m2g-custom-markdown-html"><%=current_location.customer_message_html%></div><%}%><%}else{%><button data-show-locations-finder\nclass="m2g-order-location-button m2g-button<%=!current_location?\' m2g-button--primary\' : \'\'%> m2g-form-element--full-width">View store list</button><%}%></script></div><div class="m2g-order-minutes-to-closing" data-view="order-minutes-to-closing"><script type="text/template" data-template="order-minutes-to-closing"><%if(minutes_to_closing&&minutes_to_closing<20){%><div class="m2g-alert"><span class="m2g-alert-icon m2g-alert-icon--large m2g-icon m2g-icon--alert"></span><div class="m2g-alert-content"><%if(minutes_to_closing<=1){%><strong>Store is now closed</strong><%}else{%><strong>Store is closing soon</strong><%}%><br><span class="m2g-text--small"><%if(minutes_to_closing<=1){%>Sorry,&nbsp;the store is no longer taking orders<%=Order.getExpectedAt().format(\'H\')>=17?\' tonight\':\' today\'%><%}else{%>You have<strong><%=\' \'+minutes_to_closing+\' \'%>minutes</strong>&nbsp;to confirm your order<%}%></span></div></div><%}%></script></div></div><!-- Order method --><div data-order-section="method" data-view="order-method" class="m2g-order-method m2g-order-section"><!-- Template --><script type="text/template" data-template="order-method"><%if(available_methods.length>1){%><div class="m2g-input-container m2g-form-element-group" data-icon-after="select"><select data-order-method\nclass="m2g-order-method-select m2g-select<%= !order_method ? \' m2g-select--primary\' : \'\'%> m2g-form-element--full-width"><%if(!order_method){%><%if(available_methods.length>1){%><option value="null"><%=methods_string%>?</option><%}%><%_.each(available_methods,function(method){%><option value="<%= method %>"<%=order_method==method?\' selected\':\'\'%>><%=method_titles[method]%></option><%});%><%}else{%><%if(available_methods.length>1){%><optgroup label="<%= methods_string %>?"><%}%><%_.each(available_methods,function(method){%><option value="<%= method %>"<%=order_method==method?\' selected\':\'\'%>><%=method_titles[method]%></option><%});%><%if(available_methods.length>1){%></optgroup><%}%><%}%></select></div><%}%></script></div><!-- Order customer address --><div data-order-section="address" data-view="order-address"><script type="text/template" data-template="order-address"><%if(getMethod()===\'delivery\'&&getCustomer()){%><div data-order-section="address" class="m2g-order-address m2g-order-section"><div class="m2g-order-section-header"><span class="m2g-order-section-title">Deliver to</span><span class="m2g-order-section-status" data-order-section-status><%if(getAddress()){%><span data-order-delivery-address\nclass="m2g-text--link m2g-text--offset m2g-text--touchable">Change</span><%}%></span></div><button data-order-delivery-address<%=getAddress()?\' data-icon-before \':\' \'%>class="m2g-customer-address-button m2g-button<%= !getAddress() ? \' m2g-button--primary\' : \' m2g-button--left-align\' %> m2g-form-element--full-width"><%if(getAddress()){%><span class="m2g-icon m2g-icon--location"></span><span class="m2g-truncate"><%=getAddress().toString()%></span><%}else{%>Choose delivery address<%}%></button></div><%}%></script></div><!-- Expected Date --><div data-order-section="expected-at" data-view="order-datetime"\nclass="m2g-order-expected-at m2g-order-section m2g-form-element-group m2g-hidden"><div class="m2g-order-date m2g-input-container" data-icon-after="select" data-view="order-dates"><script type="text/template" data-template="order-dates"><%if(available_dates.length){%><select data-order-dates class="m2g-order-date-select m2g-select"><%_.each(available_dates,function(date){%><option value="<%= date.date_value %>" data-display-value="<%= date.display_value %>"<%=order_datetime&&date.date_value===order_datetime.date_value?" selected":""%>><%=date.display_value%></option><%});%></select><%}%></script></div><div class="m2g-order-time m2g-input-container" data-icon-after="select" data-view="order-times"><script type="text/template" data-template="order-times"><%if(available_times.length){%><select data-order-times class="m2g-order-time-select m2g-select"><%_.each(available_times,function(time){%><option value="<%=time.datetime_value%>"<%=order_datetime&&time.datetime_value===order_datetime.datetime_value?" selected":""%>><%=time.display_value%></option><%});%></select><%}else{%><select data-order-times class="m2g-order-time-select m2g-select m2g-text--offset"><option value="">Closed</option></select><%}%></script></div><div data-order-date-alternate-display\nclass="m2g-order-date-alternate-display m2g-text--small m2g-text--offset m2g-hidden"></div><div data-expected-in-string\nclass="m2g-order-expected-in-string m2g-text--small m2g-text--offset m2g-hidden"></div></div><div data-view="customer" data-order-section="customer"\nclass="m2g-customer m2g-customer--logged-out m2g-order-section m2g-order-section--incomplete"><div class="m2g-order-section-header"><span class="m2g-order-section-icon m2g-icon m2g-icon--user m2g-hidden"></span><span class="m2g-order-section-title m2g-customer-logged-in-title">Account</span><span data-login-label class="m2g-order-section-title m2g-customer-login-title">Log in</span><span data-signup-label class="m2g-order-section-title m2g-customer-register-title">Sign up</span><span data-order-section-status-icon class="m2g-order-section-status-icon m2g-icon"></span><span data-order-section-status class="m2g-order-section-status"></span></div><!-- Email input--><div data-email-input class="m2g-input-container m2g-form-element--full-width" data-icon-before><input type="email"\nclass="m2g-customer-email-input m2g-input m2g-form-element--full-width"\nplaceholder="Email address"/><span class="m2g-icon m2g-icon--mail"></span></div><!-- Login password --><div data-login-password\ndata-icon-before\nclass="m2g-input-container m2g-hidden"\ntitle="Password required"><input type="password"\nclass="m2g-customer-password-input m2g-input m2g-form-element--full-width"\nplaceholder="Password"/><span class="m2g-icon m2g-icon--padlock"></span></div><div data-login-password class="m2g-form-element-group m2g-hidden"><button data-login\nclass="m2g-customer-login-button m2g-button m2g-button--primary m2g-form-element--full-width">Log in</button></div><!-- Name --><div data-name class="m2g-input-container m2g-form-element--full-width" data-icon-before><input type="text"\nclass="m2g-customer-name-input m2g-input m2g-form-element--full-width"\nplaceholder="Full name"/><span class="m2g-icon m2g-icon--user"></span></div><!-- Phone number --><div data-phone-number class="m2g-input-container m2g-form-element--full-width" data-icon-before><input type="tel"\nclass="m2g-customer-phone-input m2g-input m2g-form-element--full-width"\nplaceholder="Phone"/><span class="m2g-icon m2g-icon--phone"></span></div><!-- Loyalty ID --><div data-loyalty-id class="m2g-input-container m2g-form-element--full-width" data-icon-before style="display: none"><input type="tel"\nclass="m2g-customer-loyalty-input m2g-input m2g-form-element--full-width"\nplaceholder="Loyalty ID (optional)"/><span class="m2g-icon" style="font-weight: bold">#</span></div><!-- Register password --><div data-register-password class="m2g-input-container m2g-hidden" data-icon-before><input type="password"\nclass="m2g-customer-register-password-input m2g-input m2g-form-element--full-width"\nplaceholder="Password"/><span class="m2g-icon m2g-icon--padlock"></span></div><div data-register-password class="m2g-form-element-group m2g-hidden"><span class="m2g-customer-terms-and-conditions-message"><input data-terms-and-conditions-checkbox type="checkbox" class="m2g-input" checked><label data-terms-and-conditions-message-label class="m2g-customer-terms-and-conditions-label">I agree to the&nbsp;<span data-terms-and-conditions-link class="m2g-customer-terms-and-conditions-link m2g-text--link">terms and conditions</span></label></span><span class="m2g-customer-subscriber m2g-hidden"><input data-subscriber-checkbox type="checkbox" class="m2g-input"><label data-subscriber-label class="m2g-customer-subscriber-label">I would like to receive email promotions</label></span><button data-register class="m2g-customer-save-button m2g-button m2g-button--primary m2g-form-element--full-width">Sign up</button></div><!-- Forgot password button --><div data-forgot-password class="m2g-form-element-group m2g-hidden"><button class="m2g-customer-forgot-password-button m2g-button m2g-form-element--full-width">Forgot password?</button></div><!-- Create account button --><div data-create-account class="m2g-form-element-group m2g-hidden m2g-hidden"><button class="m2g-customer-create-account-button m2g-button m2g-form-element--full-width">Create new account</button></div><div data-change-password class="m2g-customer-change-password m2g-hidden"><span class="m2g-text--offset m2g-text--link m2g-text--small m2g-text--touchable">Change password</span></div></div><div data-view="basket" data-order-section="basket"\nclass="m2g-order-basket-section m2g-order-section"><div class="m2g-order-section-header"><span class="m2g-order-section-title">Order</span><span class="m2g-order-section-status" data-order-section-status></span></div><div data-basket class="m2g-hidden"><!-- Order products --><div data-basket-products class="m2g-order-products"><script type="text/template" data-template="order-product"><div class="m2g-order-item m2g-order-product" title="Edit"\ndata-basket-product="<%= cid %>" data-product-name="<%= menu_product.backend_name %>"\ntabindex="0" role="button" data-quantity="<%= quantity %>"><div class="m2g-order-product-thumbnail"><%if(menu_product.image_src){%><img class="m2g-order-product-image m2g-image" src="<%= menu_product.image_src %>"/><%}%></div><div class="m2g-order-product-summary"><span data-quantity-display class="m2g-order-product-quantity"><%=quantity%></span><span class="m2g-times">&nbsp;&times;&nbsp;</span><span class="m2g-order-product-name"><%=menu_product.name%></span><span data-size class="m2g-order-product-size"><%=size?\' (\'+size+\')\':\'\'%></span><div class="m2g-order-product-modifiers<%= !display_modifiers.added.length && !display_modifiers.removed.length ? \' m2g-hidden\' : \'\'%>" data-modifiers><span data-added-modifiers data-modifiers-list\nclass="m2g-text--offset m2g-text--small m2g-order-product-added-modifiers<%= !display_modifiers.added.length ? \' m2g-hidden\' : \'\'%>"><%_.each(display_modifiers.added,function(modifier,isnt_first){%><%=isnt_first?", ":" "%><span class="m2g-order-product-modifier m2g-order-product-modifier--added"><%=modifier%></span><%});%></span><span data-removed-modifiers data-modifiers-list\nclass="m2g-text--offset m2g-text--small m2g-order-product-removed-modifiers<%= !display_modifiers.removed.length ? \' m2g-hidden\': \'\'%>"><%_.each(display_modifiers.removed,function(modifier,isnt_first){%><%=isnt_first?", ":" "%><span class="m2g-text--removed m2g-order-product-modifier m2g-order-product-modifier--removed"><%=modifier%></span><%});%></span></div><%if(comment){%><div class="m2g-order-product-comment m2g-text--comment m2g-text--offset m2g-text--small"><%=_.escape(comment)%></div><%}%></div><span class="m2g-order-product-total" data-total><%=list_total%></span><div title="Remove" data-remove\nclass="m2g-order-product-remove-button m2g-icon m2g-icon--cross m2g-touchable"></div></div></script></div><!-- Delivery fee --><div data-view="order-delivery-fee"\nclass="m2g-order-item m2g-order-item--indented m2g-order-delivery-fee m2g-hidden">Delivery fee<span data-total class="m2g-order-item-price m2g-order-delivery-fee-amount"></span></div><!-- Voucher --><div data-view="order-voucher" class="m2g-order-item m2g-order-voucher m2g-hidden"><input data-code-input type="text"\nclass="m2g-input m2g-order-voucher-code-input m2g-input m2g-form-element--full-width"\nplaceholder="Enter voucher code"><!-- Error --><div data-error data-error-text\nclass="m2g-order-voucher-error m2g-hidden"></div><!-- Message --><div data-message data-message-text\nclass="m2g-order-voucher-message m2g-hidden"></div></div><!-- Discount --><div data-view="order-discounts-total"\nclass="m2g-order-item m2g-order-item--indented m2g-order-discounts-total m2g-hidden">Discount<span data-total class="m2g-order-item-price m2g-order-discounts-total-amount"></span></div><!-- Surcharge --><div data-view="order-surcharge"\nclass="m2g-order-item m2g-order-item--indented m2g-order-surcharge m2g-hidden">Surcharge<span data-total class="m2g-order-item-price m2g-order-surcharge-amount"></span></div><!-- Tip --><div data-view="order-tip"\nclass="m2g-order-item m2g-order-item--indented m2g-order-tip m2g-hidden">Tip<span data-total class="m2g-order-item-price m2g-order-tip-amount"></span></div></div><div data-empty-basket class="m2g-order-basket-empty m2g-text--small m2g-text--offset">Your order is empty.</div><!-- Order customer confirmed orders --><div data-view="customer-last-order"><script type="text/template" data-template="customer-last-order"><%if(order){%><button data-load-last-order class="m2g-order-basket-last-order-button m2g-button m2g-form-element--full-width"><span class="m2g-icon m2g-icon--ccw"></span>&nbsp;Load your last order</button><%}%></script></div><!-- Tax --><div data-view="order-tax"\nclass="m2g-order-item m2g-order-item--indented m2g-order-tax m2g-hidden"><span data-name></span><span data-total class="m2g-order-item-price m2g-order-tax-amount"></span></div><!-- Total --><div data-view="order-total"\nclass="m2g-order-item--indented m2g-order-item m2g-order-total">Total<span data-total class="m2g-order-item-price m2g-order-total-amount">0.00</span></div></div><button data-checkout class="m2g-order-payment-checkout-button m2g-button m2g-button--disabled m2g-button--primary m2g-button--fat m2g-form-element--full-width"\nstyle="margin-top: 24px;">Next step</button><div data-view="order-footer" class="m2g-order-footer m2g-order-section"><script type="text/template" data-template="order-footer"><div class="m2g-order-footer-ui-switch"><a data-ui-switch href="#"><span class="m2g-icon m2g-icon--mobile m2g-order-footer-ui-icon"></span>&nbsp;Mobile site</a></div><div class="m2g-order-footer-links"><a class="m2g-order-footer-links__terms-and-conditions" data-termsandconditions href="javascript:void(0)">Terms and Conditions</a><br/><a class="m2g-order-footer-links__refunds" data-refund href="javascript:void(0)">Refunds</a>&nbsp;<a class="m2g-order-footer-links__cancellations" data-cancellation href="javascript:void(0)">Cancellations</a>&nbsp;<a class="m2g-order-footer-links__deliveries" data-delivery href="javascript:void(0)">Deliveries</a></div><div class="m2g-order-footer-logo"><a href="http://www.mobi2go.com/?utm_campaign=store_front" target="_blank"><svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="100"\nviewBox="-67 -29.7 267.7 117.3" enable-background="new -67 -29.7 267.7 117.3" xml:space="preserve"><g id="Layer_x0020_5"><path fill="#333333" d="M2.2,2.9v-14.1h6.2c3.3,0,5,1.4,5,4.1c0,2.8-1.7,4.2-5,4.2H5V3L2.2,2.9L2.2,2.9z M5-5.6h4c1.2,0,1.7-0.5,1.7-1.6C10.6-8.1,10-8.6,9-8.6H5V-5.6z M21.7,2.9c-2,0-3.7-0.6-5-2s-2-3-2-5s0.6-3.7,2-5s3-2,5-2s3.7,0.6,5,2s2,3,2,5s-0.6,3.7-2,5S23.7,2.9,21.7,2.9z M21.7,0.3C23,0.3,24-0.1,24.8-1c0.8-0.8,1.2-1.9,1.2-3.2s-0.4-2.3-1.2-3.2C24-8.1,23-8.6,21.7-8.6s-2.3,0.4-3.1,1.3c-0.8,0.8-1.2,1.9-1.2,3.2s0.4,2.3,1.2,3.2C19.4-0.2,20.4,0.3,21.7,0.3z M42.3,2.9h2.8l3.8-14.1h-3l-2.4,9.6L41-11.2h-2.9l-2.5,9.6l-2.4-9.6h-3l3.8,14.1h2.8l2.8-10.4L42.3,2.9L42.3,2.9z M50.9,2.9v-14.1h10.4v2.6h-7.6v3h5.7V-3h-5.7v3.2h7.6v2.6L50.9,2.9L50.9,2.9z M67-5.6h4c1.2,0,1.7-0.5,1.7-1.6c-0.1-0.9-0.6-1.4-1.7-1.4h-4V-5.6z M72.7-3.3l3.5,6.2H73l-3.4-5.8H67v5.8h-2.8v-14.1h6.2c3.3,0,5,1.4,5,4.1C75.3-5.1,74.5-3.7,72.7-3.3L72.7-3.3z M77.6,2.9v-14.1H88v2.6h-7.6v3h5.7V-3h-5.7v3.2H88v2.6L77.6,2.9L77.6,2.9z M93.7,0.1v-8.5h2.6c2.5,0,3.7,1.4,3.8,4.2c0,2.8-1.3,4.2-3.8,4.2H93.7z M96.3,2.9c4.4,0,6.6-2.3,6.6-7.1c0-4.7-2.2-7.1-6.6-7.1h-5.5V2.7h5.5V2.9L96.3,2.9z M115.2-8.4h4c1.2,0.1,1.7,0.4,1.7,1.2c-0.1,1.2-0.6,1.7-1.7,1.7h-4V-8.4L115.2-8.4L115.2-8.4z M115.2-2.8h4.7c1.3,0.1,2,0.5,2,1.4c-0.1,1.4-0.7,2-2,2h-4.6L115.2-2.8L115.2-2.8z M123.6-7.1c-0.1-2.6-1.4-4-3.8-4.2h-7.5V2.8h8c2.7-0.1,4.1-1.6,4.2-4.2c-0.1-1.3-0.7-2.4-2-3.2C123.1-5.1,123.4-6,123.6-7.1L123.6-7.1L123.6-7.1z M126.5-11.3h3.3l3.2,4.6l3.4-4.6h3.2l-5.2,7.1V3h-2.8v-7.1L126.5-11.3L126.5-11.3L126.5-11.3z"/></g><g><g id="Layer_x0020_5_1_"><g id="_325485840"><path id="Letters" fill="#333333" d="M93.5,37.5c0-0.5,0.1-0.9,0.3-1.4c0.2-0.5,0.5-0.8,0.8-1.2c0.4-0.4,0.7-0.6,1.2-0.8c0.4-0.2,0.8-0.3,1.4-0.3c0.5,0,0.9,0.1,1.4,0.3c0.4,0.2,0.8,0.5,1.2,0.8c0.4,0.4,0.6,0.7,0.8,1.2s0.3,0.9,0.3,1.4c0,1-0.4,1.9-1,2.5c-0.4,0.4-0.8,0.6-1.2,0.8c-0.5,0.2-0.9,0.3-1.4,0.3s-0.9-0.1-1.4-0.3c-0.5-0.2-0.8-0.5-1.2-0.8c-0.4-0.3-0.6-0.7-0.8-1.2C93.7,38.5,93.6,38,93.5,37.5L93.5,37.5L93.5,37.5z M75.1,44.8c0.3-0.3,0.7-0.5,1.2-0.8c0.6-0.4,1.4-0.6,2.1-0.8c0.8-0.2,1.5-0.3,2.4-0.3c1.4,0,2.6,0.3,3.8,0.8l0,0c1.2,0.5,2.1,1.4,3,2.4c0.9,1,1.5,2.2,1.9,3.5c0.5,1.4,0.6,2.8,0.6,4.3c0,1.6-0.2,3.2-0.6,4.5c-0.4,1.4-1,2.5-1.9,3.6c-0.8,1-1.9,1.8-3.1,2.3c-1.3,0.5-2.5,0.8-3.9,0.8c-0.7,0-1.4-0.1-2.1-0.3c-0.6-0.2-1.3-0.4-1.9-0.7c-0.5-0.3-1-0.6-1.4-1v2H69c0-10.8,0-21.6,0-32.3h6.1V44.8L75.1,44.8L75.1,44.8z M74.9,53.9c0,0.9,0.1,1.7,0.4,2.4c0.2,0.7,0.5,1.3,1,1.8l0,0c0.4,0.5,0.8,0.8,1.4,1.1c0.5,0.3,1.2,0.4,1.8,0.4c1.4,0,2.4-0.5,3.2-1.4c0.4-0.5,0.6-1,0.8-1.6c0.2-0.7,0.3-1.4,0.3-2.4c0-0.9-0.1-1.7-0.3-2.4c-0.3-0.7-0.5-1.3-0.9-1.7c-0.4-0.5-0.8-0.8-1.4-1c-0.6-0.3-1.2-0.4-1.9-0.4c-1.4,0-2.4,0.5-3.2,1.4c-0.4,0.5-0.7,1-0.9,1.6C75.1,52.1,75,52.9,74.9,53.9L74.9,53.9z M7.7,65.1V32.8v-0.1h0.1h2h0.1l0.1,0.1l13.1,15.9l13.1-15.9l0.1-0.1h0.1h2h0.1v0.1v32.3v0.1h-0.1h-6.1h-0.1v-0.1V46.6l-9,10.6l-0.1,0.1l-0.1-0.1l-9-10.6v18.5v0.1H14H8H7.9v-0.1H7.7L7.7,65.1z M165.4,53.9c0-0.7,0.1-1.4,0.3-2.2c0.2-0.8,0.4-1.4,0.6-2.1c0.3-0.7,0.6-1.3,1-1.9s0.9-1.2,1.4-1.7c0.5-0.5,1.1-0.9,1.7-1.4c0.6-0.4,1.3-0.7,1.9-1c0.6-0.3,1.4-0.5,2.1-0.6c0.8-0.2,1.5-0.2,2.2-0.2c1.5,0,3,0.3,4.3,0.8c0.6,0.3,1.3,0.6,2,1c0.7,0.5,1.3,0.9,1.7,1.4c0.5,0.5,1,1.1,1.4,1.7c0.5,0.6,0.8,1.3,1,1.9c0.3,0.6,0.5,1.3,0.6,2.1c0.2,0.7,0.2,1.4,0.2,2.2c0,0.8-0.1,1.4-0.2,2.2c-0.2,0.6-0.4,1.4-0.6,2.1c-0.4,0.7-0.7,1.4-1,1.9c-0.5,0.6-0.9,1.2-1.4,1.6c-0.6,0.6-1.3,1.1-1.8,1.4c-0.6,0.5-1.3,0.8-2,1l0,0c-0.7,0.3-1.4,0.5-2.1,0.6c-0.8,0.2-1.5,0.2-2.2,0.2c-0.6,0-1.4-0.1-2.2-0.2c-0.6-0.2-1.3-0.4-2.1-0.6l0,0c-0.7-0.3-1.4-0.6-2-1c-0.7-0.5-1.3-0.9-1.7-1.4c-0.6-0.5-1-1.2-1.4-1.7c-0.5-0.6-0.8-1.3-1-1.9c-0.3-0.6-0.5-1.4-0.7-2.1C165.3,55.3,165.3,54.6,165.4,53.9L165.4,53.9L165.4,53.9z M181.9,54c0-1.5-0.5-2.9-1.4-3.9c-0.5-0.5-1-0.9-1.6-1.2c-0.6-0.3-1.3-0.4-1.9-0.4c-0.7,0-1.4,0.2-1.9,0.4c-0.6,0.3-1.2,0.7-1.6,1.2c-0.5,0.5-0.9,1.2-1.2,1.8c-0.3,0.7-0.4,1.4-0.4,2.2c0,0.8,0.2,1.5,0.4,2.2c0.3,0.7,0.6,1.3,1.2,1.8c0.5,0.5,1,0.9,1.6,1.2c0.5,0.3,1.2,0.4,1.9,0.4c0.7,0,1.4-0.2,1.9-0.4c0.6-0.3,1.2-0.6,1.6-1.2c0.5-0.5,0.9-1.1,1.1-1.8C181.8,55.7,181.9,54.9,181.9,54L181.9,54z M42.2,53.9c0-0.7,0.1-1.4,0.3-2.2c0.2-0.8,0.4-1.4,0.6-2.1c0.3-0.7,0.6-1.3,1-1.9c0.4-0.6,0.9-1.2,1.4-1.7c0.5-0.5,1.1-0.9,1.7-1.4c0.6-0.4,1.3-0.7,1.9-1s1.4-0.5,2.1-0.6c0.8-0.2,1.5-0.2,2.2-0.2c1.5,0,3,0.3,4.3,0.8c0.6,0.3,1.3,0.6,2,1c0.7,0.5,1.3,0.9,1.7,1.4c0.5,0.5,1,1.1,1.4,1.7c0.5,0.6,0.8,1.3,1,1.9c0.3,0.6,0.5,1.3,0.6,2.1c0.2,0.7,0.2,1.4,0.2,2.2c0,0.8-0.1,1.4-0.2,2.2c-0.2,0.6-0.4,1.4-0.6,2.1c-0.4,0.7-0.7,1.4-1,1.9c-0.5,0.6-0.9,1.2-1.4,1.6c-0.6,0.6-1.2,1.1-1.8,1.4c-0.6,0.5-1.3,0.8-2,1l0,0c-0.7,0.3-1.4,0.5-2.1,0.6c-0.8,0.2-1.5,0.2-2.2,0.2c-0.6,0-1.4-0.1-2.2-0.2c-0.6-0.2-1.3-0.4-2.1-0.6l0,0c-0.7-0.3-1.4-0.6-2-1c-0.7-0.5-1.3-0.9-1.7-1.4c-0.6-0.5-1-1.2-1.4-1.7c-0.5-0.6-0.8-1.3-1-1.9c-0.3-0.6-0.5-1.4-0.7-2.1C42.1,55.3,42.1,54.6,42.2,53.9L42.2,53.9L42.2,53.9z M58.7,54c0-1.5-0.5-2.9-1.4-3.9c-0.5-0.5-1-0.9-1.6-1.2s-1.3-0.4-1.9-0.4c-0.7,0-1.4,0.2-1.9,0.4c-0.6,0.3-1.2,0.7-1.6,1.2c-0.5,0.5-0.9,1.2-1.2,1.8c-0.3,0.7-0.4,1.4-0.4,2.2c0,0.8,0.2,1.5,0.4,2.2c0.3,0.7,0.6,1.3,1.2,1.8c0.5,0.5,1,0.9,1.6,1.2c0.5,0.3,1.2,0.4,1.9,0.4s1.4-0.2,1.9-0.4c0.6-0.3,1.2-0.6,1.6-1.2c0.5-0.5,0.9-1.1,1.1-1.8C58.6,55.7,58.7,54.9,58.7,54L58.7,54z M161.6,47.8v4.7c0,1.5-0.3,3.1-0.8,4.6c-1.4,3.5-3.8,5.9-7.4,7.2c-1.4,0.5-3,0.7-4.6,0.8c-0.5,0-0.9,0.1-1.4,0.1c-1.3,0-2.4-0.1-3.5-0.3c-5.8-0.9-9.7-4.1-11.7-9.4c-0.8-2-1.2-4.1-1.2-6.4V49c0-2.3,0.4-4.3,1.3-6.3c0.8-2,2-3.7,3.5-5.3c1.4-1.4,3.3-2.5,5.3-3.4c2-0.7,4.2-1.2,6.5-1.2h0.1c2.4,0,4.4,0.5,6.3,1.4c1,0.5,1.9,1.1,2.7,1.6c0.6,0.5,1.2,1,1.5,1.4c0.5,0.5,0.9,1,1.4,1.5l-4.8,3.6c-0.4-0.4-0.6-0.7-0.9-1s-0.6-0.6-1-0.9c-1.4-1.2-3.3-1.7-5.3-1.7c-2.9,0-5.3,0.9-7.1,2.8c-1.8,1.8-2.7,4.3-2.7,7.2c0,3.1,0.9,5.5,2.7,7.4c1.8,1.9,4.3,2.8,7.2,2.8c1.1,0,2.1-0.1,3.1-0.4c1-0.3,1.9-0.7,2.7-1.4c1.3-1,1.9-2.4,2-4.1h-7v-5.7h13.2l0.1-0.1L161.6,47.8z M127,65.1h-23l1.3-1.4l11.3-13.5c0.7-0.9,1.4-1.6,1.8-2.4s0.9-1.4,1.3-2c0.3-0.5,0.5-1.1,0.6-1.6c0.2-0.5,0.2-0.9,0.2-1.4c0-1.3-0.4-2.2-1.1-2.9c-0.4-0.4-0.8-0.6-1.3-0.7c-0.5-0.2-1.1-0.3-1.8-0.3c-0.6,0-1.2,0.1-1.5,0.3c-0.5,0.2-0.8,0.5-1.2,0.7c-0.4,0.4-0.7,0.7-0.8,1.3c-0.2,0.5-0.4,1-0.4,1.6l-0.1,0.8h-6.4v-0.9c0-1.4,0.3-2.8,0.7-4c0.5-1.3,1.3-2.3,2.3-3.2c1-0.9,2.1-1.5,3.5-2c1.4-0.5,2.8-0.6,4.3-0.6s3,0.2,4.2,0.6c1.2,0.4,2.4,1,3.3,1.9c0.9,0.8,1.6,1.8,2.1,3c0.5,1.2,0.7,2.4,0.7,3.8c0,1-0.2,2-0.4,3c-0.3,0.9-0.6,1.9-1.2,3c-0.5,0.9-1.3,2.2-2.4,3.6c-1.2,1.5-2.5,3.2-3.9,4.8l-2.5,3h10.4v5.7v0.1L127,65.1z M93.9,42.8h6.1v22.3h-6.1V42.8z"/></g></g><path id="icon" fill="#333333" d="M-33,58.2l-11.9,13.8c-2.3,2.7-6.8-0.8-4.5-3.9l12.3-14.3c0.1-0.1,0.8-0.1,1.1,0l-12.5,14.4c-0.7,0.8-0.8,1.7-0.4,2.4c0.2,0.3,0.3,0.6,0.6,0.7c0.2,0.2,0.5,0.4,0.8,0.4c0.8,0.2,1.6,0,2.4-0.8L-33.1,57C-32.9,57.2-32.8,57.9-33,58.2L-33,58.2L-33,58.2z M-28.1,50.8l15.5,17.8c1.6,1.8-1,4.2-2.7,2.2l-15-17.5L-28.1,50.8L-28.1,50.8L-28.1,50.8z M-27.9,58.2L-16,72.1c2.3,2.7,6.8-0.8,4.5-3.9l-12.3-14.3c-0.1-0.1-0.8-0.1-1.1,0l12.5,14.4c0.7,0.8,0.8,1.7,0.4,2.4c-0.2,0.3-0.3,0.6-0.6,0.7c-0.2,0.2-0.5,0.4-0.8,0.4c-0.8,0.2-1.6,0-2.4-0.8L-27.8,57C-28,57.2-28.1,57.9-27.9,58.2L-27.9,58.2L-27.9,58.2z M-30.9,47.6l-22.8-26.5c-2.6,5.1,5.3,16.4,10.1,22.4c1.1,1.4,2.5,3.2,3.7,4.5c1.4,1.4,4.1,1.2,5.3,0.3l1.6,1.7l0.3,0.4l2.2-2.5L-30.9,47.6L-30.9,47.6L-30.9,47.6z M-26.4,43.6l-21.9,25.1c-1.6,1.8,1,4.2,2.7,2.2l21.6-25.2c2.8,2.3,6.3-0.2,7.1-1.1l12.9-15.1c0.8-1,1.1-2.2,0.7-3.4l-9.9,11.2l-1.2-0.8l10.4-11.7c-0.1-0.1-0.2-0.2-0.2-0.2l-1-0.8l-10.6,12l-1.2-0.9l10.7-12l-1-0.8c-0.1-0.1-0.2-0.2-0.3-0.2l-10.5,11.9l-0.7-1.3L-9,21.1c-1.2-0.2-2.4,0.2-3.2,1.1l-13.2,14.8C-26.2,38-28.4,41.4-26.4,43.6L-26.4,43.6L-26.4,43.6z"/></g></svg></a></div></script></div></div></section><div class="m2g-clearfix"></div></div><div class="m2g-modal-overlay m2g-modal-overlay--modal-closed"></div><div class="m2g-modals"><!-- Customer Email Updater --><div class="m2g-customer-email-updater m2g-modal m2g-modal--small m2g-modal--modal-closed"\ndata-view="customer-email-updater"><div class="m2g-modal-header"><button class="m2g-modal-close-button" data-dismiss="modal">×</button><h2 class="m2g-h2 m2g-modal-title">Change email address</h2></div><div class="m2g-modal-body"><div data-icon-before\nclass="m2g-input-container m2g-form-element--full-width"\ntitle="New Email Address"><input data-new-email-address\nclass="m2g-customer-email-updater-new-email-input m2g-input m2g-form-element--full-width"\ntype="email" placeholder="New email address"/><span class="m2g-customer-password-updater-new-password-icon m2g-icon m2g-icon--mail m2g-icon--with-asterisk"></span></div><div data-invalid-email-address-warning\nclass="m2g-alert m2g-alert--warning m2g-hidden"><span class="m2g-alert-icon m2g-icon m2g-icon--alert"></span><div data-content class="m2g-alert-content">Invalid email address</div></div><div data-icon-before\nclass="m2g-input-container m2g-form-element--full-width"\ntitle="Your Password"><input data-password\nclass="m2g-customer-email-updater-password-input m2g-input m2g-form-element--full-width"\ntype="password" placeholder="Your password"/><span class="m2g-icon m2g-icon--padlock"></span></div><div data-incorrect-password-warning\nclass="m2g-alert m2g-alert--warning m2g-hidden"><span class="m2g-alert-icon m2g-icon m2g-icon--alert"></span><div data-content class="m2g-alert-content">Incorrect password</div></div></div><div class="m2g-modal-footer"><div class="m2g-modal-footer-right"><button data-submit\nclass="m2g-button m2g-customer-email-updater-set-button">Change email address</button></div></div></div><!-- Customer Password Updater --><div class="m2g-customer-password-updater m2g-modal m2g-modal--small m2g-modal--modal-closed"\ndata-view="customer-password-updater"><div class="m2g-modal-header"><button class="m2g-modal-close-button" data-dismiss="modal">×</button><h2 class="m2g-h2 m2g-modal-title">Set password</h2></div><div class="m2g-modal-body"><div data-icon-before\nclass="m2g-input-container m2g-form-element--full-width"\ntitle="Current Password"><input data-current-password\nclass="m2g-customer-password-updater-current-password-input m2g-input m2g-form-element--full-width"\ntype="password" placeholder="Current password"/><span class="m2g-icon m2g-icon--padlock"></span></div><div data-incorrect-password-warning\nclass="m2g-alert m2g-alert--warning m2g-hidden"><span class="m2g-alert-icon m2g-icon m2g-icon--alert"></span><div class="m2g-alert-content">Incorrect password</div></div><div data-icon-before\nclass="m2g-input-container m2g-form-element--full-width"\ntitle="New Password"><input data-new-password\nclass="m2g-customer-password-updater-new-password-input m2g-input m2g-form-element--full-width"\ntype="password" placeholder="New password"/><span class="m2g-customer-password-updater-new-password-icon m2g-icon m2g-icon--padlock m2g-icon--with-asterisk"></span></div><div data-invalid-new-password-warning\nclass="m2g-alert m2g-alert--warning m2g-hidden"><span class="m2g-alert-icon m2g-icon m2g-icon--alert"></span><div class="m2g-alert-content">New password must be at least 6 characters</div></div></div><div class="m2g-modal-footer"><div class="m2g-modal-footer-right"><button data-set-password\nclass="m2g-button m2g-customer-password-updater-set-button">Set new password</button></div></div></div><!-- Customer Password Recovery --><div class="m2g-customer-password-recovery m2g-modal m2g-modal--small m2g-modal--modal-closed"\ndata-view="customer-password-recovery"><div class="m2g-modal-header"><button class="m2g-modal-close-button" data-dismiss="modal">×</button><h2 class="m2g-h2 m2g-modal-title">Account Recovery</h2></div><div class="m2g-modal-body"><div class="m2g-input-container m2g-form-element--full-width" data-icon-before><input data-reset-code\nclass="m2g-customer-password-recovery-reset-code-input m2g-input m2g-form-element--full-width"\ntype="text" placeholder="Reset code"><span class="m2g-icon m2g-icon--key"></span></div><div class="m2g-input-container m2g-form-element--full-width" data-icon-before><input data-new-password\nclass="m2g-customer-password-recovery-new-password-input m2g-input m2g-form-element--full-width"\ntype="password" placeholder="New password"><span class="m2g-icon m2g-icon--padlock"></span></div><div class="m2g-customer-password-recovery-reset-code-message m2g-text--offset m2g-text--center">You will receive a password reset code in your email inbox shortly.<br>Enter your reset code and set a new password.</div></div><div class="m2g-modal-footer"><div class="m2g-modal-footer-right"><button data-cancel\nclass="m2g-button m2g-button--fat m2g-customer-password-recovery-cancel-button">Cancel</button><button data-set-password\nclass="m2g-button m2g-button--primary m2g-button--fat m2g-customer-password-recovery-set-password-button">Set new password</button><button data-loader\nclass="m2g-button m2g-button--disabled m2g-button--primary m2g-button--fat m2g-customer-password-loader-button m2g-hidden">Setting new password<span class="m2g-dot-loader"><span>.</span><span>.</span><span>.</span></span></button></div></div></div><!-- Product Editor Modal --><div class="m2g-product-editor m2g-modal m2g-modal--modal-closed" data-view="product-editor"><script type="text/template" data-template="product-editor"><div class="m2g-modal-header"><button class="m2g-modal-close-button" data-close>×</button><h2 class="m2g-h2 m2g-modal-title m2g-product-editor-product-name"><%=menu_product.name%></h2></div><div class="m2g-modal-body<%= modifier_groups.length ? \' m2g-product-editor-body--with-modifiers\' : \'\'%>"><%if(menu_product.description){%><span class="m2g-product-editor-product-description--alternate m2g-product-editor-product-description--above"><%=menu_product.description%></span><%}%><%if(menu_product.image_src||menu_product.description){%><div class="m2g-product-editor-product-info"><%if(menu_product.image_src){%><div class="m2g-product-editor-product-image-container"><img class="m2g-product-editor-product-image m2g-image" src="<%= menu_product.image_src %>"/></div><%}%><span class="m2g-product-editor-product-description"><%=menu_product.description%></span></div><%}%><%if(menu_product.description){%><span class="m2g-product-editor-product-description--alternate m2g-product-editor-product-description--below"><%=menu_product.description%></span><%}%><div class="m2g-product-editor-settings m2g-well"><%if(!_.contains(menu_product.tags,\'hide-quantity\')){%><span class="m2g-product-editor-quantity-label m2g-product-editor-settings-label">Quantity</span><%if(!_.contains(menu_product.tags,\'text-input-quantity\')){%><div class="m2g-product-editor-quantity m2g-input-container" data-icon-after="select"><select class="m2g-product-editor-quantity-select m2g-select"\ndata-quantity title="Quantity" tabindex="0"><%for(var i=1;i<=20;i++){%><option value="<%= i %>"<%=quantity==i&&\' selected\'%>><%=i%></option><%}%></select></div><%}else{%><input data-quantity-text type="tel" class="m2g-product-editor-quantity m2g-product-editor-quantity-text m2g-input" value="<%= quantity %>"><%}%><%}%><%if(size_options.length>1){%><span class="m2g-product-editor-size-label m2g-product-editor-settings-label">Size</span><div class="m2g-product-editor-size m2g-input-container" data-icon-after="select"><select class="m2g-product-editor-size-select m2g-select" data-size><%_.each(size_options,function(size_option){%><option value="<%= size_option.menu_modifier.id %>"<%=size_option.menu_modifier.id===size.menu_modifier.id&&" selected"%>><%=size_option%><%if(size_option.getDisplayPrice().toFloat()!==0){%>&nbsp;-&nbsp;<%=size_option.getDisplayPrice()%><%}%></option><%});%></select></div><%}%></div><%if(modifier_groups.length){%><div class="m2g-product-editor-modifier-browser <%= modifier_groups.length < 5 ? \'m2g-product-editor-modifier-browser--onecol\' : \'m2g-product-editor-modifier-browser--twocol\' %>"><!-- Modifier group navigation --><div class="m2g-product-editor-modifier-group-list m2g-well m2g-well--scrolly"><div class="m2g-nav-list m2g-nav-list--vertical" data-modifier-group-nav><%_.each(modifier_groups,function(modifier_group,i){%><a data-modifier-group="<%= modifier_group.menu_modifier_group.id %>"\ndata-modifier-group-name="<%= modifier_group.menu_modifier_group.backend_name %>"\nclass="m2g-product-editor-modifier-group-list-name m2g-nav-list-item m2g-nav-list-item--hoverable <%= i === 0 ? \'m2g-nav-list-item--active\' : \'\' %>"><%=modifier_group%></a><%});%></div></div><!-- Modifiers list --><div class="m2g-product-editor-modifier-list m2g-well m2g-well--scrolly" data-modifier-groups><%_.each(modifier_groups,function(modifier_group){%><%var indicator_class_name=\'\';if(!modifier_group.selection_requirement_met)\nindicator_class_name+=\'m2g-product-editor-modifier-group--selection-requirement-unmet \';if(modifier_group.selection_limit_met)\nindicator_class_name+=\'m2g-product-editor-modifier-group--selection-limit-met\';%><!-- Modifier group --><div data-modifier-group="<%= modifier_group.menu_modifier_group.id %>"\ndata-modifier-group-name="<%= modifier_group.menu_modifier_group.backend_name %>"\ndata-tags="<%= modifier_group.menu_modifier_group.tags.join(\' \') %>"\ndata-selection-limit="<%= modifier_group.selection_limit %>"\ndata-selection-requirement="<%= modifier_group.selection_requirement %>"\ndata-scrollspy-target="<%= modifier_group.menu_modifier_group.id %>"\nclass="m2g-product-editor-modifier-group <%= indicator_class_name %>"><!-- Modifier group header --><div class="m2g-product-editor-modifier-group-header"><!-- Modifier group name --><span class="m2g-product-editor-modifier-group-title m2g-subtitle-text"><%=modifier_group%></span><%if(modifier_group.menu_modifier_group.selection_limit){%><!-- Modifier group limit badge --><span data-limit-badge\nclass="m2g-product-editor-modifier-group-limit-badge m2g-product-editor-modifier-group-badge m2g-badge"><span data-modifier-group-selection-count><%=modifier_group.selection_count%></span>&nbsp;of&nbsp;<%=modifier_group.menu_modifier_group.selection_limit%>&nbsp;max</span><%}%><%if(modifier_group.menu_modifier_group.selection_requirement){%><!-- Modifier group requirement badge --><span data-requirement-badge\nclass="m2g-product-editor-modifier-group-requirement-badge m2g-product-editor-modifier-group-badge m2g-badge"><%if(modifier_group.menu_modifier_group.selection_requirement===1){%>required<%}else{%><span data-modifier-group-selection-count><%=modifier_group.selection_count%></span>&nbsp;of&nbsp;<%=modifier_group.menu_modifier_group.selection_requirement%>&nbsp;required<%}%></span><%}%></div><%_.each(modifier_group.modifiers,function(modifier){%><!-- Modifier --><div class="m2g-product-editor-modifier m2g-touchable <%= modifier.is_default ? "m2g-product-editor-modifier--default":"" %>"\ndata-modifier="<%= modifier.menu_modifier.id %>"\ndata-modifier-name="<%= modifier.menu_modifier.backend_name %>"\ndata-tags="<%= modifier.menu_modifier.tags.join(\' \') %>"\ndata-selection-state="<%= modifier.selection_state %>"\ndata-type="<%= modifier.menu_modifier.type %>"<%=modifier.is_default?" data-is-default ":""%><%=modifier.selection_state!=="off"?" data-checked ":""%>tabindex="0" role="button"><%if(modifier.menu_modifier.type=="quantity"){%><%if(!modifier.menu_modifier.hasTag(\'text-input-quantity\')){%><div class="m2g-product-editor-modifier-quantity m2g-input-container" data-icon-after="select"><select class="m2g-product-editor-modifier-quantity-select m2g-select"\ntitle="Quantity"\ndata-modifier="<%= modifier.menu_modifier.id %>"><%for(var j=0;j<=10;j++){%><option value="<%= j %>"<%=modifier.quantity==j?\'selected\':\'\'%>>&times;<%=j%></option><%}%></select></div><%}else{%><input type="tel" class="m2g-product-editor-modifier-quantity-text m2g-input"\nvalue="<%= modifier.quantity %>"\ndata-modifier="<%= modifier.menu_modifier.id %>"><%}%><div class="m2g-product-editor-modifier-name"><%=modifier.menu_modifier.name%></div><div data-modifier-price class="m2g-product-editor-modifier-price"><%=modifier.price.isEqual(0)?\'\':modifier.price%></div><%}else{%><div class="m2g-product-editor-modifier-checkbox m2g-icon m2g-icon--tick m2g-icon--checkbox"></div><div class="m2g-product-editor-modifier-name"><%=modifier.menu_modifier.name%></div><div data-modifier-price class="m2g-product-editor-modifier-price"><%=modifier.price.isEqual(0)?\'\':modifier.price%></div><%}%></div><%});%><div class="m2g-clearfix"></div></div><%});%></div></div><%}%><%if(menu_product.allow_comment){%><div class="m2g-product-editor-comment m2g-input-container m2g-form-element--full-width" data-icon-before><input class="m2g-product-editor-comment-input m2g-input m2g-input-container m2g-form-element--full-width"\ndata-comment\ntype="text"\nplaceholder="Note/Instructions"\nvalue="<%= comment %>"/><span class="m2g-icon m2g-icon--comment"></span></div><%}%><div data-error class="m2g-modal-alert m2g-alert m2g-hidden"></div></div><div class="m2g-modal-footer"><div class="m2g-modal-footer-left"><span class="m2g-product-editor-price" data-price><%=list_total%></span></div><div class="m2g-modal-footer-right"><div class="m2g-product-editor-name m2g-input-container" data-icon-before><input class="m2g-product-editor-name-input m2g-input m2g-form-element--full-width"\ndata-for-name type="text"\nplaceholder="Name"\nvalue="<%= for_name %>"/><span class="m2g-icon m2g-icon--user"></span></div><%if(isInOrder()){%><button class="m2g-product-editor-remove-button m2g-button m2g-button--cancel" data-remove>Remove</button><button class="m2g-product-editor-save-button m2g-button m2g-button--primary" data-save>Done</button><%}else{%><button class="m2g-product-editor-add-button m2g-button m2g-button--primary" data-save>Add to order</button><%}%></div></div></script></div><!-- Location List Modal --><div class="m2g-location-browser m2g-modal m2g-modal--modal-closed" data-view="locations-browser"><div class="m2g-modal-header"><button class="m2g-modal-close-button" data-dismiss="modal">×</button><h2 class="m2g-h2 m2g-modal-title" data-title>Choose store</h2></div><div class="m2g-modal-body"><div data-nav class="m2g-location-list m2g-well m2g-well--scrolly"><div class="m2g-nav-list m2g-nav-list--vertical"><div data-locations><script type="text/template" data-template="locations-list"><%_.each(regions,function(locations,name){%><%var contains_visible=!!_.find(locations,function(location){return !location.isHidden()});%><%if(!contains_visible){return}%><span class="m2g-location-list-group m2g-subtitle-text m2g-nav-list-item m2g-nav-list-item--heading"><%=name%></span><%_.each(locations,function(location){%><%if(location.isHidden())return;%><a data-location="<%= location.id %>" tabindex="0" role="button" class="m2g-location-list-location m2g-nav-list-item m2g-nav-list-item--hoverable"><%=location.name%></a><%});%><%});%></script></div></div></div><div data-location-info class="m2g-location-info m2g-well m2g-well--scrolly"><script type="text/template" data-template="location-info"><div class="m2g-location-info-name m2g-title-text"><%=name%></div><div class="m2g-location-info-open-status"<%=isOpen()&&isActive()&&!isLockedOut()?\' data-open\':\'\'%>><div class="m2g-location-info-is-open"><%if(isLockedOut()){%>Disabled<%}else if(isInactive()){%>Temporarily Unavailable<%}else if(isOpen()){%>Open Now<%}else{%>Closed<%}%></div><%if(!isLockedOut()&&!isInactive()){%><div class="m2g-location-info-closing-time-sentence m2g-text--small"><%=getClosingTimeSentence()%></div><%}%></div><%if(isLockedOut()){%><div class="m2g-location-info-status-message m2g-alert m2g-alert--warning">This store has been disabled and cannot take online orders.&nbsp;<a class="m2g-link m2g-location-info-owner-login" href="https://mobi2go.com/admin/store/<%= id %>">Owner Login</a></div><%}else if(isInactive()){%><div class="m2g-location-info-status-message m2g-alert m2g-alert--warning"><%=offline_message?offline_message:\'Sorry, this store is temporarily unavailable and cannot take online orders.\'%></div><%}%><%if(!isLockedOut()){%><div class="m2g-location-info-address"><span class="m2g-location-info-address-icon m2g-icon m2g-icon--location"></span>&nbsp;<span class="m2g-location-info-address-street"><%=address.street_number%>&nbsp;<%=address.street_name%></span><br/><span class="m2g-location-info-address-suburb"><%=address.suburb%></span><br/><span class="m2g-location-info-address-city"><%=address.city%></span><br/><span class="m2g-location-info-address-country"><%=address.country%></span></div><%}%><div class="m2g-location-info-phone"><span class="m2g-location-info-phone-icon m2g-icon m2g-icon--phone"></span>&nbsp;<a class="m2g-text--phone-number" href="tel:<%= address.phone_number %>"><%=address.phone_number%></a></div><%if(!isLockedOut()){%><div class="m2g-location-info-opening-hours m2g-location-info-opening-hours--standard"><%_.each(opening_hours_abbr,function(opening_hours,type){%><div class="m2g-subtitle-text"><span class="m2g-location-info-opening-hours-icon m2g-icon m2g-icon--clock"></span>&nbsp;<%if(type==\'all\'){%>Opening hours<%}else{%><%switch(type){case \'pickup\':print(\'Pick up hours\');break;case \'delivery\':print(\'Delivery hours\');break;case \'eatin\':print(\'Eat in hours\');break}%><%}%></div><table class="m2g-table m2g-location-opening-hours"><tbody><%_.each(opening_hours,function(hours){%><tr class="m2g-location-opening-hours-range" data-range="<%= hours[0] %>"><td class="m2g-location-opening-hours-range-label"><%=hours[0]%></td><td class="m2g-location-opening-hours-range-value"><%=hours[1]%></td></tr><%});%></tbody></table><%});%></div><div class="m2g-location-info-opening-hours m2g-location-info-opening-hours--custom m2g-hidden"><div class="m2g-subtitle-text"><span class="m2g-location-info-opening-hours-icon m2g-icon m2g-icon--clock"></span>Opening Hours</div><table class="m2g-table m2g-location-opening-hours"><tbody><tr class="m2g-location-opening-hours-range" data-row="1"><td class="m2g-location-opening-hours-range-label"></td><td class="m2g-location-opening-hours-range-value"></td></tr><tr class="m2g-location-opening-hours-range" data-row="2"><td class="m2g-location-opening-hours-range-label"></td><td class="m2g-location-opening-hours-range-value"></td></tr><tr class="m2g-location-opening-hours-range" data-row="3"><td class="m2g-location-opening-hours-range-label"></td><td class="m2g-location-opening-hours-range-value"></td></tr><tr class="m2g-location-opening-hours-range" data-row="4"><td class="m2g-location-opening-hours-range-label"></td><td class="m2g-location-opening-hours-range-value"></td></tr><tr class="m2g-location-opening-hours-range" data-row="5"><td class="m2g-location-opening-hours-range-label"></td><td class="m2g-location-opening-hours-range-value"></td></tr><tr class="m2g-location-opening-hours-range" data-row="6"><td class="m2g-location-opening-hours-range-label"></td><td class="m2g-location-opening-hours-range-value"></td></tr><tr class="m2g-location-opening-hours-range" data-row="7"><td class="m2g-location-opening-hours-range-label"></td><td class="m2g-location-opening-hours-range-value"></td></tr></tbody></table></div><%if(order_methods.delivery&&delivery_areas.suburbs.length){%><div class="m2g-location-info-delivery-areas"><div class="m2g-subtitle-text">Delivery areas</div><%=_.pluck(delivery_areas.suburbs,\'suburb\').join(", ")%></div><%}%><div class="m2g-location-info-wait-times m2g-location-wait-times"><div class="m2g-subtitle-text">Wait times</div><table class="m2g-table"><tbody><%if(order_methods.pickup){%><tr><td>Pick up</td><td><%=wait_times.pickup%>&nbsp;minutes</td></tr><%}%><%if(order_methods.eatin){%><tr><td>Eat in</td><td><%=wait_times.eatin%>&nbsp;minutes</td></tr><%}%><%if(order_methods.delivery){%><tr><td>Delivery</td><td><%=wait_times.delivery%>&nbsp;minutes</td></tr><%}%></tbody></table></div><%}%></script></div></div><div class="m2g-modal-footer"><div class="m2g-modal-footer-right"><button data-set class="m2g-button m2g-button--primary m2g-button--disabled">Order from store</button></div></div></div><!-- Location Finder Modal --><div class="m2g-locations-finder-modal m2g-modal m2g-modal--modal-closed" data-view="locations-finder"></div><!-- Customer Addresses Modal --><div class="m2g-customer-address m2g-modal m2g-modal--modal-closed" data-view="customer-address"><div class="m2g-modal-header"><button class="m2g-modal-close-button" data-dismiss="modal">×</button><h2 class="m2g-h2 m2g-modal-title">Delivery address</h2></div><div data-form class="m2g-modal-body"><script type="text/template" data-template="customer-address"><div class="m2g-customer-address-form m2g-well"><!-- Address selector --><%if(addresses.length){%><div data-addresses-group class="m2g-customer-address-form-group"><div class="m2g-customer-address-form-group-label">Your addresses</div><div class="m2g-input-container m2g-customer-address-select-container m2g-customer-address-form-group-controls m2g-form-element-group" data-icon-after="select"><select data-addresses class="m2g-customer-address-select m2g-select"><%if(!address_id){%><option value="" selected="selected">New address</option><%}%><%_.each(addresses,function(address){%><option value="<%= address.id %>"<%=address_id==address.id?\'selected="selected"\':\'\'%>><%=address.toString()%></option><%});%></select></div><button data-new-address class="m2g-button m2g-customer-address-form-group-controls m2g-customer-address-new-button">New</button></div><%}%><!-- Address type --><div data-type-group class="m2g-customer-address-form-group"><div data-type-label class="m2g-customer-address-form-group-label">Type</div><div class="m2g-input-container m2g-customer-address-form-group-controls m2g-form-element-group" data-icon-after="select"><select data-type\nclass="m2g-customer-address-type-select m2g-select m2g-form-element--full-width"><option value="residential"<%=address.type=="residential"?\'selected\':\'\'%>>Residential</option><option value="business"<%=address.type=="business"?\'selected\':\'\'%>>Business</option><option value="apartment"<%=address.type=="apartment"?\'selected\':\'\'%>>Apartment</option><option value="hotel"<%=address.type=="hotel"?\'selected\':\'\'%>>Hotel</option></select></div></div><!-- Building --><%if(address.type=="business"||address.type=="hotel"||address.type=="apartment"){%><div data-name-group class="m2g-customer-address-form-group"><div data-name-label class="m2g-customer-address-form-group-label"><%=address.type=="business"?\'Business\':\'Building\'%></div><div class="m2g-customer-address-form-group-controls m2g-form-element-group"><input data-name\nclass="m2g-customer-address-name-input m2g-input m2g-form-element--three-quarter-width"\nvalue="<%= address.name || \'\'%>"\nplaceholder="<%= address.type == "business" ? \'Business name\' : \'Building name\' %>"/><input data-specific-number\nclass="m2g-customer-address-specific-number-input m2g-input m2g-form-element--one-quarter-width"\nvalue="<%= address.specific_number || \'\'%>"\nplaceholder="<%= address.type == "business" ? \'Level\' : address.type == "hotel" ? \'Room\' : \'Apt.\' %>"/></div></div><%}%><!-- Street --><div data-street-group class="m2g-customer-address-form-group"><div data-street-label class="m2g-customer-address-form-group-label">Street</div><%if(address.type=="residential"){%><div class="m2g-customer-address-form-group-controls m2g-form-element-group"><input data-specific-number\nclass="m2g-customer-address-specific-number-input m2g-input m2g-form-element--one-quarter-width m2g-form-element--right-join"\nvalue="<%= address.specific_number || \'\' %>"\nplaceholder="Unit"/><input data-street-number\nclass="m2g-customer-address-street-number-input m2g-input m2g-form-element--one-quarter-width m2g-form-element--center-join"\nvalue="<%= address.street_number || \'\' %>"\nplaceholder="Number"/><input data-street-name\nclass="m2g-customer-address-street-name-input m2g-input m2g-form-element--half-width m2g-form-element--left-join"\nvalue="<%= address.street_name || \'\' %>"\nplaceholder="Street name"/></div><%}else{%><div class="m2g-customer-address-form-group-controls m2g-form-element-group"><input data-street-number class="m2g-customer-address-street-number-input m2g-input m2g-form-element--one-quarter-width m2g-form-element--right-join"\nvalue="<%= address.street_number || \'\' %>"\nplaceholder="Number"/><input data-street-name class="m2g-customer-address-street-name-input m2g-input m2g-form-element--three-quarter-width m2g-form-element--left-join"\nvalue="<%= address.street_name || \'\' %>"\nplaceholder="Street name"/></div><%}%></div><!-- Suburb --><div data-suburb-group class="m2g-customer-address-form-group"><div data-suburb-label class="m2g-customer-address-form-group-label">Suburb</div><div class="m2g-input-container m2g-customer-address-suburb m2g-customer-address-form-group-controls" data-icon-after="select"><select data-suburb class="m2g-customer-address-suburb-select m2g-select"><%_.each(delivery_areas.suburbs,function(suburb,id){%><option value="<%= suburb.suburb_id %>"<%=suburb.suburb_id==address.suburb_id?\'selected\':\'\'%>><%=suburb.suburb%></option><%});%></select></div></div><!-- Postcode --><div data-postcode-group class="m2g-customer-address-form-group"><div data-postcode-label class="m2g-customer-address-form-group-label">Postcode</div><input data-post-code class="m2g-customer-address-suburb-post-code-input m2g-input"\nvalue="<%= address.post_code || \'\' %>"\nplaceholder="Post code"/></div><!-- Comment --><div data-comment-group class="m2g-customer-address-form-group"><div data-comment-label class="m2g-customer-address-form-group-label">Note</div><div class="m2g-customer-address-form-group-controls m2g-form-element-group"><textarea data-comment\nclass="m2g-customer-address-comment-textarea m2g-textarea m2g-form-element--full-width"\nplaceholder="Enter any special delivery instructions"><%=address.comment||\'\'%></textarea></div></div><!-- Warnings --><div data-error class="m2g-customer-address-form-alert m2g-modal-alert m2g-alert m2g-hidden"></div></div></script></div><div class="m2g-modal-footer"><div class="m2g-modal-footer-right"><span data-spinner\nclass="m2g-customer-address-confirm-spinner m2g-icon m2g-icon--spinner m2g-icon--medium m2g-hidden"></span><button data-confirm\nclass="m2g-customer-address-confirm-button m2g-button m2g-button--primary">Use this address</button></div></div></div><!-- Customer Addresses Modal --><div class="m2g-customer-address m2g-customer-address--map-polygons m2g-modal m2g-modal--modal-closed"\ndata-view="customer-address-map-polygons"></div><!-- Order Confirmation Modal --><div class="m2g-order-confirmation m2g-order-confirmation--v2 m2g-modal m2g-modal--modal-closed m2g-order-state"\ndata-view="confirmation" data-phase="unconfirmed" data-status="complete"><script type="text/template" data-template="confirmation"><div class="m2g-modal-header"><button class="m2g-modal-close-button" data-close data-status-done data-status-idle>×</button><h2 class="m2g-h2 m2g-modal-title"><%=order_method_titles[Order.getMethod()]%>&nbsp;Order</h2></div><div class="m2g-modal-body m2g-modal-body--scrolly"><!-- Customer --><div class="m2g-order-confirmation-customer"><label class="m2g-order-confirmation-label m2g-text--offset m2g-text--small">For&nbsp;</label><span class="m2g-order-confirmation-customer-name"><%=Customer.getName()%></span>&nbsp;<span class="m2g-order-confirmation-customer-phone-number m2g-text--offset"><%=Customer.getPhoneNumber()%></span></div><!-- Location --><%if(Locations.get().length>1){%><div class="m2g-order-confirmation-location" title="<%=Order.getLocation().name%>"><label class="m2g-order-confirmation-label m2g-text--offset m2g-text--small">From&nbsp;</label><%=Order.getLocation().name%></div><%}%><!-- Store closing soon warning --><div data-minutes-to-closing-container\nclass="m2g-order-confirmation-minutes-to-closing-container <%= Order.getMinutesToClosing() > 20 ? \'m2g-hidden\' : \'\' %>"><div class="m2g-alert"><span class="m2g-alert-icon m2g-alert-icon--large m2g-icon m2g-icon--alert"></span><div class="m2g-alert-content"><%if(Order.getMinutesToClosing()<=1){%><strong>Store is now closed</strong><%}else{%><strong>Store is closing soon</strong><%}%><br><span class="m2g-text--small"><%if(Order.getMinutesToClosing()<=1){%>Sorry,&nbsp;the store is no longer taking orders<%=Order.getExpectedAt().format(\'H\')>=17?\' tonight\':\' today\'%><%}else{%>You have&nbsp;<strong data-minutes-to-closing><%=Order.getMinutesToClosing()%>&nbsp;minutes</strong>&nbsp;to confirm your order<%}%></span></div></div></div><!-- Address --><%if(Order.getMethod()==="delivery"){%><div class="m2g-order-confirmation-address"><label class="m2g-order-confirmation-label m2g-text--offset m2g-text--small">Address&nbsp;</label><%=Order.getAddress()%></div><%}%><!-- Time --><div class="m2g-order-confirmation-datetime<%= Order.isExpectedToday() ? \' m2g-order-confirmation-datetime--today\' : \'\' %>"><label class="m2g-order-confirmation-label m2g-text--offset m2g-text--small">Expected at&nbsp;</label><span data-time class="m2g-order-confirmation-time"><%=Order.getExpectedAt().format("h:mma")%></span><span data-date class="m2g-order-confirmation-date">&nbsp;<%=Order.getExpectedAt().format("dddd, Do MMMM")%></span><span class="m2g-order-confirmation-expected-in m2g-text--offset">&nbsp;<span data-in-string>(<%=Order.getExpectedInString()%>)</span></span></div><!-- Products --><table class="m2g-order-confirmation-items m2g-table"><%_.each(Order.getProducts(),function(product){%><tr class="m2g-order-confirmation-item m2g-order-confirmation-product"\ndata-product-name="<%= product.menu_product.backend_name %>"><td class="m2g-order-confirmation-item-thumbnail"><%if(product.menu_product.image_src){%><img class="m2g-order-confirmation-product-image m2g-image"\nsrc="<%= product.menu_product.image_src %>"/><%}%></td><td class="m2g-order-confirmation-item-content"><span class="m2g-order-confirmation-product-quantity"><%=product.quantity%></span><span class="m2g-times m2g-text--offset m2g-text--small">&nbsp;&times;&nbsp;</span><span class="m2g-order-confirmation-product-name"><%=product.menu_product.name%></span><span class="m2g-order-confirmation-product-size"><%=product.size?\' (\'+product.size+\')\':\'\'%></span><div class="m2g-order-confirmation-product-modifiers"><span class="m2g-text--offset m2g-text--small m2g-order-confirmation-product-added-modifiers m2g-text--offset <%= !product.display_modifiers.added.length ? \'m2g-hidden\' : \'\'%>"><%_.each(product.display_modifiers.added,function(modifier,isnt_first){%><%=isnt_first?", ":" "%><span class="m2g-order-confirmation-modifier m2g-order-confirmation-modifier--added"><%=modifier%></span><%});%></span><span class="m2g-text--offset m2g-text--comment m2g-text--small m2g-order-confirmation-product-removed-modifiers m2g-text--offset <%= !product.display_modifiers.removed.length ? \'m2g-hidden\': \'\'%>"><%_.each(product.display_modifiers.removed,function(modifier,isnt_first){%><%=isnt_first?", ":" "%><span class="m2g-text--removed m2g-order-confirmation-modifier m2g-order-confirmation-modifier--removed"><%=modifier%></span><%});%></span></div><%if(product.comment){%><div class="m2g-order-confirmation-product-comment m2g-text--offset m2g-text--small"><%=_.escape(product.comment)%></div><%}%></td><td class="m2g-order-confirmation-item-total m2g-order-confirmation-product-total"><%=product.list_total%></td></tr><%});%><%if(Order.getDeliveryFee().toFloat()!==0.00){%><!-- Delivery fee --><tr class="m2g-order-confirmation-item m2g-order-confirmation-delivery-fee"><td class="m2g-order-confirmation-item-thumbnail"></td><td class="m2g-order-confirmation-item-content">Delivery fee</td><td data-delivery-fee class="m2g-order-confirmation-item-total"><%=Order.getDeliveryFee().getListPrice()%></td></tr><%}%><%if(Order.getDiscountsTotal().toFloat()!==0.00){%><tr class="m2g-order-confirmation-item m2g-order-confirmation-discount"><td class="m2g-order-confirmation-item-thumbnail"></td><td class="m2g-order-confirmation-item-content">Discount</td><td data-discounts-total class="m2g-order-confirmation-item-total">-<%=Order.getDiscountsTotal().getListPrice()%></td></tr><%}%><%if(Order.getSurcharge().toFloat()!==0.00){%><!-- Surcharge --><tr class="m2g-order-confirmation-item m2g-order-confirmation-surcharge"><td class="m2g-order-confirmation-item-thumbnail"></td><td class="m2g-order-confirmation-item-content">Surcharge</td><td data-surcharge class="m2g-order-confirmation-item-total"><%=Order.getSurcharge().getListPrice()%></td></tr><%}%><%if(Order.getTip().toFloat()!==0.00){%><!-- Tip --><tr class="m2g-order-confirmation-item m2g-order-confirmation-tip"><td class="m2g-order-confirmation-item-thumbnail"></td><td class="m2g-order-confirmation-item-content">Tip</td><td data-tip class="m2g-order-confirmation-item-total"><%=Order.getTip().getListPrice()%></td></tr><%}%><!-- Total --><tr class="m2g-order-confirmation-item m2g-order-confirmation-total"><td class="m2g-order-confirmation-item-thumbnail"></td><td class="m2g-order-confirmation-item-content"><span class="">Total&nbsp;(<%=Mobi2Go.headoffice.currency_abrv%>)</span><%if(Order.getSalesTaxTotal().toFloat()>0){%><span class="m2g-order-confirmation-tax m2g-text--offset m2g-text--vertical-align-middle">&nbsp;incl.&nbsp;<%=Order.getSalesTaxTotal()%>&nbsp;<%=Order.getTotal().getTax().name%></span><%}%></td><td class="m2g-order-confirmation-item-total"><%=Order.getTotal()%></td></tr></table><!-- Payment --><div data-view="confirmation-payment"></div><!-- SUBSCRIBER:MOVE THIS SOMEWHERE ELSE --><label class="m2g-order-confirmation-subscriber m2g-text--small"><input class="m2g-order-confirmation-subscriber-checkbox m2g-input--checkbox" type="checkbox"\ndata-subscriber<%=Customer.isSubscriber()?\' checked="checked"\':\'\'%>>I would like to receive email promotions</label></div><div class="m2g-modal-footer"><div class="m2g-modal-footer-left"></div><div class="m2g-modal-footer-right"><!-- Cancel --><button data-cancel data-show-on-phase="unconfirmed confirming"\nclass="m2g-order-confirmation-cancel-button m2g-button m2g-button--fat m2g-button--cancel">Cancel</button><!-- Confirm --><button data-confirm\nclass="m2g-order-confirmation-confirm-button m2g-button m2g-button--fat m2g-button--primary"><span data-confirm-icon class="m2g-order-confirmation-confirm-button-icon m2g-icon--tick m2g-icon m2g-icon--medium"></span><span data-show-on-phase="unconfirmed"\nclass="m2g-order-confirmation-confirm-button-text m2g-order-confirmation-confirm-button-text--unconfirmed"><span data-show-on-payment-method="offline">Confirm order</span><span data-show-on-payment-method="online">Pay now</span></span></span><span data-show-on-phase="confirming"\nclass="m2g-order-confirmation-confirm-button-text m2g-order-confirmation-confirm-button-text--confirming"><span data-hide-on-status="pending payment">Confirming order&nbsp;<span class="m2g-dot-loader"><span>.</span><span>.</span><span>.</span></span></span><span data-show-on-status="pending payment">Pending payment&nbsp;<span class="m2g-dot-loader"><span>.</span><span>.</span><span>.</span></span></span></span><span data-show-on-phase="confirmed"\nclass="m2g-order-confirmation-confirm-button-text m2g-order-confirmation-confirm-button-text--confirmed">Confirmed</span></button><!-- Done --><button data-done data-show-on-phase="confirmed"\nclass="m2g-order-confirmation-done-button m2g-button m2g-button--fat m2g-button--primary">Done</button></div></div></script><!-- Payment Template --><script type="text/template" data-template="confirmation-payment"><%var available_methods=getAvailablePaymentMethods();var offline_only=available_methods.length==1&&available_methods[0]==="offline";var online_only=available_methods.length==1&&available_methods[0]==="online";var card_tokens=getAvailablePaymentCardTokens();var selected_card_token=getPaymentCardToken();var is_password_required_for_tokens=!isPasswordProvided();%><%if(!offline_only){%><div class="m2g-well m2g-order-confirmation-payment"><!-- Unconfirmed --><div class="m2g-order-confirmation-payment-methods" data-show-on-phase="unconfirmed"><%if(!online_only){%><div class="m2g-title-text m2g-order-confirmation-payment-methods-title">How would you like to pay?</div><%}%><%if(isPaymentMethodAvailable("offline")){%><div data-method="offline"\nclass="m2g-order-confirmation-payment-method"<%=getPaymentMethod()===\'offline\'?\' checked\':\'\'%>><span class="m2g-order-confirmation-payment-method-text"><input type="checkbox" data-method="offline"\nclass="m2g-order-confirmation-payment-method-checkbox"<%=getPaymentMethod()===\'offline\'?\' checked\':\'\'%>>I will pay<%if(getMethod()==="pickup"){%><strong>&nbsp;on pick up</strong><%}else if(getMethod()==="delivery"){%><strong>&nbsp;on delivery</strong><%}else if(getMethod()==="eatin"){%><strong>&nbsp;instore</strong><%}%></span></div><%}%><%_.each(card_tokens,function(card_token){%><%var is_checked=(getPaymentMethod()===\'online\'&&selected_card_token&&selected_card_token.id===card_token.id);%><div class="m2g-order-confirmation-payment-method m2g-order-confirmation-payment-card-token"\ndata-method="online"\ndata-token\ndata-token-count="<%= card_tokens.length %>"\ndata-is-password-required="<%= is_password_required_for_tokens %>"\ndata-token-id="<%= card_token.id %>"<%=is_checked?\' checked\':\'\'%>><input type="checkbox" data-method="online"\nclass="m2g-order-confirmation-payment-method-checkbox m2g-order-confirmation-payment-card-token-checkbox"\ndata-token-id="<%= card_token.id %>"<%=is_checked?\' checked\':\'\'%>><%var image_url=Mobi2Go.app.base_url+\'/store/application/ui/components/img/card-logos/\'\nswitch(card_token.card_type){case \'visa\':print(\'<img class="m2g-order-confirmation-payment-card-token-icon-image" src="\'+image_url+\'visa.svg">\');break;case \'mastercard\':print(\'<img class="m2g-order-confirmation-payment-card-token-icon-image" src="\'+image_url+\'mastercard.svg">\');break;case \'amex\':print(\'<img class="m2g-order-confirmation-payment-card-token-icon-image" src="\'+image_url+\'amex.svg">\');break;default:print(\'<img class="m2g-order-confirmation-payment-card-token-icon-image" src="\'+image_url+\'card.svg">\')}%><div class="m2g-order-confirmation-payment-card-token-details"><div class="m2g-order-confirmation-payment-card-token-name"><%=card_token.card_name%></div><div class="m2g-order-confirmation-payment-card-token-number m2g-text--offset"><%=card_token.card_number%></div></div><div data-remove-token data-token-id="<%= card_token.id %>"\nclass="m2g-order-confirmation-payment-card-token-delete-button m2g-icon m2g-icon--cross"></div><div class="m2g-order-confirmation-payment-card-token-password"><div class="m2g-order-confirmation-payment-card-token-password-input m2g-input-container" data-icon-before><span class="m2g-icon m2g-icon--padlock"/><input class="m2g-input" placeholder="Password required" type="password" data-password-input></div><div data-forgot-password class="m2g-order-confirmation-payment-card-token-password-forgot-password m2g-text--link m2g-text--offset">Forgot password?</div></div></div><%});%><%if(isPaymentMethodAvailable("online")&&getPaymentProcessor()){%><%var is_checked=(getPaymentMethod()===\'online\'&&!getPaymentCardToken());%><div data-method="online" data-non-tokenised\nclass="m2g-order-confirmation-payment-method"<%=is_checked?\' checked\':\'\'%>><%if(isPaymentMethodAvailable("offline")){%><span class="m2g-order-confirmation-payment-method-text"><input type="checkbox" data-method="online" data-non-tokenised\nclass="m2g-order-confirmation-payment-method-checkbox"<%=is_checked?\' checked\':\'\'%>>I will pay<strong>&nbsp;now with<%=card_tokens.length?\' a new \':\' \'%>Credit or Debit card&nbsp;</strong></span><%}%><%if(getPaymentProcessor().getFormType()==="direct"&&getPaymentProcessor().getName()!=="AstonClub"){%><!-- Direct credit card form --><div class="m2g-order-confirmation-online-payment-direct-form"\ndata-view="order-online-payment-direct-form"></div><%}%><!-- Payment Processor Logo --><div class="m2g-order-confirmation-payment-processor-logo m2g-payment-processor-logo" data-processor-logo><img src="<%= getPaymentProcessor().getLogoUrl() %>" alt="<%= getPaymentProcessor().getName() %> Logo"></div><%if(getPaymentProcessor().getFormType()==="iframe"){%><div class="m2g-order-confirmation-payment-iframe-text"></div><%}%></div><%}%></div><!-- Payment Warning --><div class="m2g-order-confirmation-payment-processing-warning m2g-alert m2g-alert--warning" data-payment-processing-warning><span class="m2g-alert-icon m2g-alert-icon--large m2g-icon m2g-icon--alert m2g-order-confirmation-payment-processing-warning-icon"></span><div class="m2g-alert-content m2g-order-confirmation-payment-processing-warning-content"><strong>Please note:</strong>&nbsp;Payment may take up to&nbsp;<strong>5 minutes</strong>&nbsp;to process.&nbsp;Do not navigate away from this page or close your browser while completing your payment.</div></div><!-- Confirming --><%if(getPaymentProcessor()&&getPaymentProcessor().getFormType()==="iframe"){%><div class="m2g-order-confirmation-payment-processor-iframe"\ndata-view="order-online-payment-iframe" data-show-on-phase="confirming" inspectlet-sensitive><!-- Iframe goes here --><div class="m2g-order-confirmation-payment-processor-iframe-container" data-container></div><!-- Payment Processor Logo --><div class="m2g-order-confirmation-payment-processor-iframe-loader"><div class="m2g-order-confirmation-payment-processor-logo m2g-payment-processor-logo" data-processor-logo><img src="<%= getPaymentProcessor().getLogoUrl() %>" alt="<%= getPaymentProcessor().getName() %> Logo"></div><div class="m2g-icon m2g-icon--spinner"></div></div></div><div class="m2g-order-confirmation-payment-trading-name" style="display: none" data-show-on-phase="confirming"><%=getLocation().trading_name%><br><%=getLocation().sales_tax.number_prefix%>&nbsp;<%=getLocation().tax_number%></div><%}%><!-- Confirmed --><div class="m2g-order-confirmation-payment-success" data-show-on-phase="confirmed"><span class="m2g-order-confirmation-payment-success-text">Paid</span></div></div><%}%></script><!-- Direct Credit card form --><script type="text/template" data-template="direct-credit-card-form"><form class="m2g-order-confirmation-payment-cc-form"><%var available_methods=getAvailablePaymentMethods();%><%if(available_methods.length==1&&available_methods[0]==="online"){%><div class="m2g-order-confirmation-payment-cc-form-title m2g-title-text">Credit or Debit Card details</div><%}%><div class="m2g-order-confirmation-payment-cc-input-group"><input class="m2g-order-confirmation-payment-cc-number-input m2g-input m2g-form-element--three-quarter-width inspectletIgnore"\ntype="tel" data-credit-card-number placeholder="Card number" autocomplete="on" pattern="\\d*" autocompletetype="cc-number" novalidate><input class="m2g-order-confirmation-payment-cc-cvc-input m2g-input m2g-form-element--one-quarter-width inspectletIgnore"\ntype="tel" data-credit-card-cvc placeholder="CVC" autocomplete="off"><input class="m2g-order-confirmation-payment-cc-expiry-input m2g-input m2g-form-element--half-width inspectletIgnore"\ntype="tel" data-credit-card-expiry placeholder="MM / YY"><%if(getPaymentProcessor().shouldShowBillingDetails()){%><div class="m2g-order-confirmation-payment-cc-billing"><div class="m2g-order-confirmation-payment-cc-form-title m2g-title-text">Billing Details</div><div class="m2g-order-confirmation-payment-cc-billing-input-group"><input class="m2g-order-confirmation-payment-cc-billing-first-name-input m2g-input m2g-form-element--half-width inspectletIgnore"\ntype="text" data-credit-card-billing-first-name placeholder="First name"><input class="m2g-order-confirmation-payment-cc-billing-last-name-input m2g-input m2g-form-element--half-width inspectletIgnore"\ntype="text" data-credit-card-billing-last-name placeholder="Last name"><input class="m2g-order-confirmation-payment-cc-billing-address1-input m2g-input m2g-form-element--full-width inspectletIgnore"\ntype="text" data-credit-card-billing-address-1 placeholder="Address 1"><input class="m2g-order-confirmation-payment-cc-billing-address2-input m2g-input m2g-form-element--full-width inspectletIgnore"\ntype="text" data-credit-card-billing-address-2 placeholder="Address 2 (Optional)"><input class="m2g-order-confirmation-payment-cc-billing-country-input m2g-input m2g-form-element--full-width inspectletIgnore"\ntype="text" data-credit-card-billing-country placeholder="Country"><input class="m2g-order-confirmation-payment-cc-billing-city-input m2g-input m2g-form-element--half-width inspectletIgnore"\ntype="text" data-credit-card-billing-city placeholder="City"><input class="m2g-order-confirmation-payment-cc-billing-region-input m2g-input m2g-form-element--half-width inspectletIgnore"\ntype="text" data-credit-card-billing-region placeholder="State / Region"><input class="m2g-order-confirmation-payment-cc-billing-postcode-input m2g-input m2g-form-element--half-width inspectletIgnore"\ntype="text" data-credit-card-billing-postcode placeholder="Post Code"></div></div><%}%></div><div class="m2g-order-confirmation-payment-trading-name"><%=getLocation().trading_name%><br><%=getLocation().sales_tax.number_prefix%>&nbsp;<%=getLocation().tax_number%></div></form></script></div><!-- Policies Modal --><div class="m2g-terms-and-conditions m2g-modal m2g-modal--modal-closed" data-view="policies"><script type="text/template" data-template="policies"><div class="m2g-modal-header"><button class="m2g-modal-close-button" data-close>×</button><%if(name==\'Termsandconditions\')name=\'Terms and Conditions\';%><h2 class="m2g-h2 m2g-modal-title"><%=name%>&nbsp;Policy</h2></div><div class="m2g-modal-body m2g-modal-body--scrolly"><div class="m2g-terms-and-conditions-text"><%=text||\'<div class="m2g-icon m2g-icon--spinner"></div>\'%></div></div><div class="m2g-modal-footer"><div class="m2g-modal-footer-right"><button data-close class="m2g-terms-and-conditions-ok-button m2g-button">OK</button></div></div></script></div><!-- Alert Modal --><div data-view="alert" class="m2g-modal m2g-modal--small m2g-modal--alert m2g-modal--alert--closed"><script type="text/template" data-template="alert"><div class="m2g-modal-arrow"></div><%if(title){%><div data-header class="m2g-modal-header"><%if(close_button){%><button data-close class="m2g-modal-close-button">×</button><%}%><span data-title class="m2g-modal-title"><%=title%></span></div><%}%><%if(body){%><div data-body class="m2g-modal-body"><%=body%></div><%}%><%if(footer){%><div data-footer class="m2g-modal-footer"><%if(show_progress_bar){%><div data-progress-bar class="m2g-modal-footer-progress-bar"\nstyle="-webkit-transition-duration: <%= temp_duration %>ms; -moz-transition-duration: <%= temp_duration %>ms;-ms-transition-duration: <%= temp_duration %>ms; transition-duration: <%= temp_duration %>ms;"></div><%}%><%if(primary_button){%><div class="m2g-modal-footer-right"><%if(secondary_button){%><button data-secondary-button class="m2g-button m2g-button--secondary"><%=secondary_button%></button><%}%><button data-primary-button class="m2g-button m2g-button--primary"><%=primary_button%></button></div><%}%></div><%}%></script></div></div></div>');
(function(Mobi2Go, _, navigator, page) {
    Mobi2Go._class = Mobi2Go._class || {};
    Mobi2Go._class.Common = {
        Price: Price,
        Collection: Collection
    };

    function Price(amount, tax) {
        if (!(this instanceof Price)) {
            return new Price(amount);
        }
        this.set(amount);
        this.setTax(tax);
    };
    Price.prototype.set = function(amount) {
        if (amount instanceof Price) {
            this.setTax(amount.tax);
            amount = amount.toFloat();
        }
        amount = amount || 0;
        if (isNaN(amount - 0)) {
            throw new TypeError(amount + ' is invalid, number required for a new Price');
        }
        this[0] = (+amount);
        this[1] = Mobi2Go.headoffice.currency_symbol + this[0].toFixed(2);
        this[2] = '' + this[0].toFixed(2) + Mobi2Go.headoffice.currency_abrv;
        return this;
    };
    Price.prototype.toString = function() {
        return this[1];
    };
    Price.prototype.toInternational = function() {
        return this[2];
    };
    Price.prototype.add = function(amount) {
        if (amount instanceof Price) {
            amount = amount[0];
        }
        return this.set(this[0] + (+amount));
    };
    Price.prototype.subtract = function(amount) {
        if (amount instanceof Price) {
            amount = amount[0];
        }
        return this.set(this[0] - (+amount));
    };
    Price.prototype.multiply = function(amount) {
        return this.set(this[0] * (+amount));
    };
    Price.prototype.isEqual = function(comparator) {
        if (comparator instanceof Price) {
            comparator = comparator[0];
        }
        return this[0] === (+comparator);
    };
    Price.prototype.toFloat = function() {
        return this[0];
    };
    Price.prototype.clone = function() {
        return new Price(this[0], this.tax);
    };
    Price.prototype.getTax = function() {
        return this.tax;
    };
    Price.prototype.setTax = function(tax) {
        this.tax = tax;
        return this;
    };
    Price.prototype.getTaxExclusivePrice = function() {
        if (this.tax) {
            return this.clone().setTax(null).subtract(this.getTaxPrice());
        }
        return this;
    };
    Price.prototype.getTaxInclusivePrice = function() {
        return this;
    };
    Price.prototype.isTaxExclusivePrice = function() {
        if (this.tax && this.tax.has_tax_exclusive_prices) {
            return true;
        } else {
            return false;
        }
    };
    Price.prototype.getListPrice = function() {
            if (this.isTaxExclusivePrice()) {
                return this.getTaxExclusivePrice();
            } else {
                return this.getTaxInclusivePrice();
            }
        },
        Price.prototype.getTaxPrice = function() {
            if (this.tax && this.tax.rate) {
                var price = this.toFloat() / (100 / (this.tax.rate * 100) + 1);
                price = this.round(price);
                return new Price(price);
            }
            return new Price(0);
        };
    Price.prototype.applyTaxAmount = function() {
        if (this.isTaxExclusivePrice()) {
            var tax_amount = this.round(this.toFloat() * this.tax.rate);
            this.add(tax_amount);
        }
    };
    Price.prototype.round = function(amount) {
        return Math.round(amount * 10000) / 10000;
    };

    function Collection(items) {
        if (!(this instanceof Collection)) {
            return new Collection(items);
        }
        this.collection = [];
        this.set(items);
    }
    Collection.prototype.get = function() {
        return this.collection;
    };
    Collection.prototype.getLength = function() {
        return this.collection.length;
    };
    Collection.prototype.set = function(items) {
        this.collection = items;
    };
    Collection.prototype.getById = function(id) {
        return this.findWhere({
            id: +id
        });
    };
    Collection.prototype.getByName = function(name) {
        return this.findWhere({
            name: name
        });
    };
    Collection.prototype.push = function(item) {
        this.collection.push(item);
    };
    Collection.prototype.sort = function(fn) {
        return this.collection.sort(fn);
    };
    var us_functions = [
        'each',
        'filter',
        'map',
        'reduce',
        'reduceRight',
        'find',
        'where',
        'findWhere',
        'reject',
        'chain',
        'pluck',
        'sortBy',
        'groupBy',
        'sortBy',
        'size',
        'first',
        'last',
        'toArray',
        'invoke',
        'remove',
        'reject'
    ];
    _.each(us_functions, function(fn) {
        Collection.prototype[fn] = function() {
            var args = _.toArray(arguments);
            return _[fn].apply(this, [
                this.collection
            ].concat(args));
        };
    });
}(Mobi2Go, this._ || exports._, navigator, this.location));
(function(helpers, _) {
    'use strict';
    var email_regex = /^[-!#$%&'*+\/0-9=?A-Z^_a-z{|}~](\.?[-!#$%&'*+/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-?[a-zA-Z0-9])*(\.[a-zA-Z](-?[a-zA-Z0-9])*)+$/;
    _.extend(helpers, {
        getCurrentTimestamp: function() {
            return +new Date();
        },
        calculateDistance: function(lat1, lon1, lat2, lon2) {
            var pi = Math.PI,
                R = 6371,
                dLat = (lat1 - lat2) * pi / 180,
                dLon = (lon1 - lon2) * pi / 180,
                a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
                Math.cos(lat1 * pi / 180) * Math.cos(lat2 * pi / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2),
                c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)),
                d = Math.round(R * c * 10) / 10;
            return d;
        },
        AMPMise: function(time) {
            var split = time.split(':'),
                hour = +split[0],
                minute = split[1];
            if (hour <= 11) return time + 'am';
            if (hour === 12) return time + 'pm';
            return (hour - 12) + ':' + minute + 'pm';
        },
        validator: {
            email: function(string) {
                function isEmailValid(email) {
                    if (!email) {
                        return false;
                    }
                    if (email.length > 254) {
                        return false;
                    }
                    var valid = email_regex.test(email);
                    if (!valid) {
                        return false;
                    }
                    var parts = email.split('@');
                    if (parts[0].length > 64) {
                        return false;
                    }
                    var domainParts = parts[1].split('.');
                    if (domainParts.some(function(part) {
                            return part.length > 63;
                        })) {
                        return false;
                    }
                    return true;
                }
                return {
                    is_valid: isEmailValid(string)
                };
            },
            password: function(string) {
                var is_valid = true,
                    message = '';
                if (!string || string.length < 6) {
                    message = 'password must be at least 6 characters';
                    is_valid = false;
                }
                return {
                    is_valid: is_valid,
                    message: message
                };
            },
            phoneNumber: function(string) {
                var is_valid = true,
                    message = '';
                if (!string || string.length < 5 || string.length > 14) {
                    message = 'invalid phone number';
                    is_valid = false;
                }
                return {
                    is_valid: is_valid,
                    message: message
                };
            }
        },
        sanitiser: {
            email: function(email) {
                return email.replace(/,/g, '.').replace(/ /g, '').replace(/\.\./g, '.');
            },
            phoneNumber: function(phone_number) {
                return phone_number.replace(/[^0-9]/g, '').substr(0, 12);
            }
        },
        classNames: function() {
            var classes = [];
            for (var i = 0; i < arguments.length; i++) {
                var arg = arguments[i];
                if (!arg) continue;
                var argType = typeof arg;
                if (argType === 'string' || argType === 'number') {
                    classes.push(arg);
                } else if (Array.isArray(arg)) {
                    classes.push(Mobi2Go.helpers.classNames.apply(null, arg));
                } else if (argType === 'object') {
                    for (var key in arg) {
                        if ({}.hasOwnProperty.call(arg, key) && arg[key]) {
                            classes.push(key);
                        }
                    }
                }
            }
            return classes.join(' ');
        }
    });
})(Mobi2Go.helpers, this._ || exports._);
(function(Mobi2Go, _) {
    'use strict';
    Mobi2Go._class = Mobi2Go._class || {};
    var Price = Mobi2Go._class.Common.Price;
    var Modifier = Mobi2Go._class.OrderProductModifier = function(menu_modifier, parent_group) {
        if (!(this instanceof Modifier)) {
            return new Modifier(menu_modifier, parent_group);
        }
        this.init(menu_modifier, parent_group);
    };
    _.extend(Modifier.prototype, {
        init: function(menu_modifier, parent_group) {
            if (!(menu_modifier instanceof Mobi2Go._class.MenuItem.Modifier)) {
                throw new TypeError('menu_product must be an instance of Mobi2Go._class.MenuItem.Modifier');
            }
            if (!(parent_group instanceof Mobi2Go._class.OrderProductModifierGroup)) {
                throw new TypeError('menu_product must be an instance of Mobi2Go._class.MenuItem.OrderProductModifierGroup');
            }
            this.id = null;
            this.menu_modifier = menu_modifier;
            this.parent_group = parent_group;
            this.parent_product = parent_group.parent_product;
            this.is_default = _.contains(this.parent_product.menu_product.modifiers, menu_modifier.id);
            this.price = this.menu_modifier.getPrice();
            this.selection_state = this.is_default ? 'on' : 'off';
            this.quantity = this.is_default ? 1 : 0;
            this.total = new Price(0);
            this.has_size_prices = null;
            this._updatePrice = _.bind(this.updatePrice, this);
            if (this.hasSizePrices()) {
                this.parent_product.bind('updateSize', this._updatePrice);
            }
            if (this.parent_product.hasModifierCreditLimit()) {
                this.parent_product.bind({
                    updateModifierCredit: this._updatePrice,
                    updateModifierCreditLimit: this._updatePrice
                });
            }
            this.updatePrice();
        },
        unbindFromProduct: function() {
            if (this.hasSizePrices()) {
                this.parent_product.unbind('updateSize', this._updatePrice);
            }
            if (this.parent_product.hasModifierCreditLimit()) {
                this.parent_product.unbind({
                    updateModifierCredit: this._updatePrice,
                    updateModifierCreditLimit: this._updatePrice
                });
            }
        },
        set: function(properties) {
            if (properties.id !== undefined) {
                this.id = properties.id;
            }
            if (properties.selection_state !== undefined) {
                this.setSelectionState(properties.selection_state);
            }
            if (properties.quantity !== undefined) {
                this.setQuantity(properties.quantity);
            }
        },
        reset: function() {
            this.setSelectionState(this.is_default ? 'on' : 'off');
            this.setQuantity(this.is_default ? 1 : 0);
            this.updatePrice();
        },
        setPrice: function(amount) {
            var new_price = new Price(amount);
            if (!this.price.isEqual(new_price)) {
                this.price = new_price;
                this.parent_product._triggerUpdateModifierPrice(this);
            }
        },
        updatePrice: function() {
            var price,
                parent_product = this.parent_product;
            if (this.hasSizePrices() && this.getSizePrice()) {
                price = this.getSizePrice();
            } else {
                price = this.menu_modifier.getPrice().toFloat();
            }
            if (parent_product.hasModifierCreditLimit() && !this.hasCreditLimitOverride()) {
                var remaining_modifier_credit = parent_product.getRemainingModifierCredit();
                if (price > remaining_modifier_credit) {
                    price = remaining_modifier_credit;
                }
            }
            this.setPrice(price);
        },
        hasSizePrices: function() {
            if (this.has_size_prices === null) {
                this.has_size_prices = this.parent_product.size_options.length && this.menu_modifier.hasSizePrices();
            }
            return this.has_size_prices;
        },
        getSizePrice: function() {
            var size = this.parent_product.size;
            if (size) {
                return this.menu_modifier.getPriceBySize(size.menu_modifier);
            }
            return null;
        },
        setQuantity: function(new_quantity) {
            var group_selection_limit = this.parent_group.menu_modifier_group.selection_limit,
                that = this;
            new_quantity = +new_quantity;
            if (new_quantity < 0 || _.isNaN(new_quantity)) {
                new_quantity = 0;
            } else if (this.menu_modifier.type !== 'quantity' && new_quantity > 1) {
                new_quantity = 1;
            }
            if (new_quantity > 2500) {
                new_quantity = 2500;
            }
            if (this.quantity === new_quantity) {
                return;
            }
            var product_selection_limit = this.parent_product.menu_product.modifier_selection_limit,
                has_limit_override = this.parent_group.menu_modifier_group.product_modifier_selection_limit_override;
            if (product_selection_limit > 0 && !has_limit_override) {
                var product_count = this.parent_product.getModifierSelectionCount() - this.quantity;
                if (product_count + new_quantity > product_selection_limit) {
                    new_quantity = product_selection_limit - product_count;
                    this.parent_product._triggerSelectionLimitWarning(this);
                }
            }
            if (new_quantity && group_selection_limit === 1) {
                _.each(this.parent_group.modifiers, function(modifier) {
                    var menu_modifier = modifier.menu_modifier;
                    if (that.menu_modifier.id !== menu_modifier.id && menu_modifier.type === 'boolean' && modifier.quantity === 1) {
                        that.parent_product.toggleModifierById(menu_modifier.id);
                    }
                });
            }
            if (group_selection_limit > 0) {
                var group_count = this.parent_group.selection_count,
                    new_group_count = group_count - this.quantity + new_quantity;
                if (new_group_count > group_selection_limit) {
                    new_quantity = group_selection_limit - group_count;
                    this.parent_product._triggerGroupSelectionLimitWarning(this.parent_group, this);
                    if (new_quantity < 0) {
                        new_quantity = 0;
                    }
                    if (new_quantity === this.quantity) {
                        return;
                    }
                }
            }
            this.quantity = new_quantity;
            if (this.menu_modifier.type === 'quantity') {
                this.setSelectionState(this.quantity ? 'on' : 'off');
                this.parent_product._triggerUpdateModifierQuantity(this);
            }
            this.parent_group.updateSelectionCount();
        },
        setSelectionState: function(new_selection_state) {
            var type = this.menu_modifier.type;
            if (type === 'boolean' || type === 'style') {
                if (new_selection_state === 'off') {
                    this.setQuantity(0);
                } else if (new_selection_state === 'on') {
                    this.setQuantity(1);
                } else {
                    return;
                }
            } else if (type === 'fractional') {
                switch (new_selection_state) {
                    case 'off':
                        this.setQuantity(0);
                        break;
                    case 'on':
                    case 'left':
                    case 'right':
                        this.setQuantity(1);
                        break;
                    default:
                        return;
                }
            } else if (type === 'quantity' && new_selection_state === 'on' && !this.quantity) {
                this.setQuantity(1);
            }
            if (!this.quantity) {
                new_selection_state = 'off';
            }
            if (this.selection_state !== new_selection_state) {
                this.selection_state = new_selection_state;
                this.parent_product._triggerUpdateModifierSelection(this);
            }
        },
        toggle: function() {
            var type = this.menu_modifier.type;
            if (type === 'boolean' || type === 'style') {
                switch (this.selection_state) {
                    case 'on':
                        this.setSelectionState('off');
                        break;
                    case 'off':
                        this.setSelectionState('on');
                        break;
                }
            } else if (type === 'fractional') {
                switch (this.selection_state) {
                    case 'off':
                        this.setSelectionState('on');
                        break;
                    case 'on':
                        this.setSelectionState('left');
                        break;
                    case 'left':
                        this.setSelectionState('right');
                        break;
                    case 'right':
                        this.setSelectionState('off');
                        break;
                }
            }
        },
        isAdded: function() {
            return !this.is_default && this.quantity;
        },
        isRemoved: function() {
            return this.is_default && this.selection_state !== 'on';
        },
        hasCreditLimitOverride: function() {
            return this.menu_modifier.credit_limit_override;
        },
        toJson: function() {
            return {
                id: this.id,
                menu_modifier: _.pick(this.menu_modifier, [
                    'id',
                    'name'
                ]),
                selection_state: this.selection_state,
                quantity: this.quantity
            };
        }
    });
    Modifier.prototype.toString = function() {
        var name = this.menu_modifier.toString();
        if (this.isRemoved() || this.isAdded()) {
            if (this.selection_state === 'left') {
                name += ' (left side)';
            } else if (this.selection_state === 'right') {
                name += ' (right side)';
            }
            if (this.quantity > 1) {
                name = this.quantity + '× ' + name;
            }
        }
        return name;
    };
}(Mobi2Go, this._ || exports._));
(function(Mobi2Go, _) {
    'use strict';
    Mobi2Go._class = Mobi2Go._class || {};
    var Price = Mobi2Go._class.Common.Price;
    var OrderProductSizeModifier = Mobi2Go._class.OrderProductSizeModifier = function(menu_modifier, parent_product) {
        if (!(this instanceof OrderProductSizeModifier)) {
            return new OrderProductSizeModifier(menu_modifier, parent_product);
        }
        this.menu_modifier = menu_modifier;
        this.parent_product = parent_product;
        this.id = null;
        this.price = new Price(menu_modifier.price);
        this.display_price = new Price(menu_modifier.price + parent_product.menu_product.price);
    };
    OrderProductSizeModifier.prototype.toString = function() {
        return this.menu_modifier.name;
    };
    OrderProductSizeModifier.prototype.match = function(comparator) {
        return _.isObject(comparator) ? comparator.menu_modifier.id === this.menu_modifier.id : this.id === +comparator || this.name === comparator;
    };
    OrderProductSizeModifier.prototype.setId = function(id) {
        this.id = id;
    };
    OrderProductSizeModifier.prototype.toJson = function() {
        return {
            id: this.id,
            menu_modifier: _.pick(this.menu_modifier, [
                'id',
                'name'
            ])
        };
    };
    OrderProductSizeModifier.prototype.getPrice = function() {
        return this.menu_modifier.getPrice();
    };
    OrderProductSizeModifier.prototype.getTotal = function() {
        return this.menu_modifier.getPrice();
    };
    OrderProductSizeModifier.prototype.getDisplayPrice = function() {
        return this.parent_product.menu_product.getPrice().add(this.getPrice());
    };
}(Mobi2Go, this._ || exports._));
(function(Mobi2Go, _) {
    'use strict';
    Mobi2Go._class = Mobi2Go._class || {};
    var ModifierGroup = Mobi2Go._class.OrderProductModifierGroup = function(modifier_group, parent_product) {
        if (!(this instanceof ModifierGroup)) {
            return new ModifierGroup(modifier_group, parent_product);
        }
        this.init(modifier_group, parent_product);
    }
    _.extend(ModifierGroup.prototype, {
        init: function(modifier_group, parent_product) {
            if (!(modifier_group instanceof Mobi2Go._class.MenuItem.ModifierGroup)) {
                throw new TypeError('modifier_group must be an instance of Mobi2Go._class.MenuItem.ModifierGroup');
            }
            if (!(parent_product instanceof Mobi2Go._class.OrderProduct)) {
                throw new TypeError('product must be an instance of Mobi2Go._class.MenuItem.OrderProduct');
            }
            this.menu_modifier_group = modifier_group;
            this.parent_product = parent_product;
            this.modifiers = [];
            this.free_modifier_credit = modifier_group.free_modifier_credit;
            this.selection_requirement_met = true;
            this.selection_limit_met = false;
            this.selection_count = 0;
            loadModifiers.call(this);
            this.updateSelectionCount();
        },
        updateSelectionCount: function() {
            var count = 0;
            if (this.menu_modifier) return;
            count = _.reduce(this.modifiers, function(count, modifier) {
                return count += modifier.quantity;
            }, 0);
            if (count !== this.selection_count) {
                this.selection_count = count;
                this.parent_product._triggerUpdateGroupSelectionCount(this);
            }
            this.updateSelectionRequirementMet();
            this.updateSelectionLimitMet();
        },
        updateSelectionRequirementMet: function() {
            var new_status = this.selection_count >= this.menu_modifier_group.selection_requirement;
            if (new_status !== this.selection_requirement_met) {
                this.selection_requirement_met = new_status;
                this.parent_product._triggerUpdateGroupSelectionRequirementMet(this);
            }
        },
        updateSelectionLimitMet: function() {
            var new_status = this.selection_count >= this.menu_modifier_group.selection_limit;
            if (new_status !== this.selection_limit_met) {
                this.selection_limit_met = new_status;
                this.parent_product._triggerUpdateGroupSelectionLimitMet(this);
            }
        },
        resetFreeCredit: function() {
            this.free_modifier_credit = +this.menu_modifier_group.free_modifier_credit;
        },
        applyFreeCredit: function(amount) {
            var new_amount = +amount;
            if (!this.free_modifier_credit) return new_amount;
            new_amount -= this.free_modifier_credit;
            this.free_modifier_credit -= amount;
            if (this.free_modifier_credit < 0) this.free_modifier_credit = 0;
            if (new_amount < 0) new_amount = 0;
            return new_amount;
        }
    });
    ModifierGroup.prototype.toString = function() {
        return this.menu_modifier_group.name;
    };

    function loadModifiers() {
        var Modifier = Mobi2Go._class.OrderProductModifier;
        this.menu_modifier_group.getModifiers().each(function(menu_modifier) {
            if (this.parent_product.getModifierByMenuId(menu_modifier.id)) {
                return;
            }
            var modifier = Modifier(menu_modifier, this);
            this.parent_product.modifiers.push(modifier);
            this.modifiers.push(modifier);
        }, this);
    }
}(Mobi2Go, this._ || exports._));
(function(Mobi2Go, _) {
    'use strict';
    Mobi2Go._class = Mobi2Go._class || {};
    var cid = 0,
        mixinEvents = Mobi2Go.app.mixinEvents,
        Order = Mobi2Go.Order,
        Price = Mobi2Go._class.Common.Price;
    var Product = Mobi2Go._class.OrderProduct = function(properties) {
        if (!(this instanceof Product)) {
            return new Product(properties);
        }
        this.init(properties);
    };
    _.extend(Product.prototype, {
        init: function(properties) {
            this.id = null;
            if (!properties.menu_product) {
                throw new Error('\'menu_product\' required an order product');
            }
            this.cid = cid++;
            mixinEvents('OrderProduct#' + this.cid, this);
            this.category_name = '';
            this.menu_product = null;
            this.for_name = '';
            this.comment = '';
            this.size = null;
            this.size_options = [];
            this.modifier_groups = [];
            this.visible_modifier_groups = [];
            this.hidden_modifier_groups = [];
            this.modifiers = [];
            this.modifier_credit = 0;
            this.modifier_credit_limit = null;
            this.modifier_credit_limit_override_credit = 0;
            this.free_modifier_credit;
            this.display_modifiers = {
                added: [],
                removed: []
            };
            this.display_modifier_names = {
                added: [],
                removed: []
            };
            this.quantity = 1;
            this.price = new Price(0);
            this.list_price = new Price(0);
            this.total = new Price(0);
            this.list_total = new Price(0);
            this._is_setting = false;
            this.mute = true;
            this.set(properties);
            this.mute = false;
        },
        set: function(properties) {
            this._is_setting = true;
            if (properties.id !== undefined) {
                this.id = properties.id;
            }
            if (properties.menu_product !== undefined) {
                if (properties.menu_product.id !== undefined) {
                    this.setMenuProductById(properties.menu_product.id);
                } else if (properties.menu_product.name !== undefined) {
                    this.setMenuProductByName(properties.menu_product.name);
                }
            }
            if (properties.for_name !== undefined) {
                this.setForName(properties.for_name);
            }
            if (properties.quantity !== undefined) {
                this.setQuantity(properties.quantity);
            }
            if (properties.comment !== undefined) {
                this.setComment(properties.comment);
            }
            if (properties.modifiers !== undefined) {
                this.setModifiers(properties.modifiers);
            }
            this._is_setting = false;
            this.calculateTotal();
            if (properties.price !== undefined) {
                this.setPrice(properties.price);
            }
            if (properties.total !== undefined) {
                this.setTotal(properties.total);
            }
            return this;
        },
        setMenuProductById: function(id) {
            var menu_product = Mobi2Go.Menu.getProducts().find({
                id: id
            });
            if (!menu_product) {
                throw new Error('Unknown product #' + id);
            }
            return this.setMenuProduct(menu_product);
        },
        setMenuProductByName: function(name) {
            var menu_product = Mobi2Go.Menu.getProducts().find({
                backend_name: name
            });
            if (!menu_product) {
                throw new Error('Unknown product \'' + name + '\'');
            }
            return this.setMenuProduct(menu_product);
        },
        setMenuProduct: function(new_menu_product) {
            if (!(new_menu_product instanceof Mobi2Go._class.MenuItem.Product)) {
                throw new TypeError('menu_product must be an instance of Mobi2Go._class.MenuItem.Product');
            }
            if (this.menu_product && this.menu_product.id === new_menu_product.id) {
                return this;
            }
            this.menu_product = new_menu_product;
            this.resetFreeCredit();
            this.updateModifierCreditLimit();
            loadModifiers.call(this);
            this.trigger('updateMenuProduct', this);
            this.calculateTotal();
            return this;
        },
        setForName: function(new_for_name) {
            new_for_name = new_for_name ? ('' + new_for_name).substring(0, 35) : '';
            if (this.for_name === new_for_name)
                return this;
            this.for_name = new_for_name;
            this.trigger('updateForName', this.for_name);
            return this;
        },
        setComment: function(new_comment) {
            new_comment = new_comment ? ('' + new_comment).substring(0, 160) : '';
            if (this.comment === new_comment)
                return this;
            this.comment = new_comment;
            this.trigger('updateComment', this.comment);
            return this;
        },
        setQuantity: function(new_quantity) {
            new_quantity = +new_quantity;
            if (new_quantity < 1) {
                new_quantity = 1;
            }
            if (new_quantity > 2500) {
                new_quantity = 2500;
            }
            if (this.quantity === new_quantity) {
                return this;
            }
            this.quantity = new_quantity;
            this.trigger('updateQuantity', this.quantity);
            this.calculateTotal();
            return this;
        },
        setSize: function(size_option) {
            if ((!size_option && !this.size) || (this.size && size_option && this.size.menu_modifier.id === size_option.menu_modifier.id)) {
                return this;
            }
            this.size = size_option;
            this.trigger('updateSize', this.size);
            this.updateModifierCreditLimit();
            this.calculateTotal();
            return this;
        },
        setSizeByName: function(name) {
            _.find(this.size_options, function(size) {
                return size.menu_modifier.name === name && this.setSize(size);
            }, this);
            return this;
        },
        setSizeById: function(id) {
            _.find(this.size_options, function(size) {
                return size.menu_modifier.id === +id && this.setSize(size);
            }, this);
            return this;
        },
        setModifiers: function(modifiers_state) {
            var modifier_state;
            this.setSizeFromState(modifiers_state);
            _.each(this.modifiers, function(modifier) {
                modifier_state = findMatchingModifier(modifier);
                if (modifier_state) {
                    modifier.set(modifier_state);
                } else if (modifier.isAdded() || modifier.isRemoved()) {
                    modifier.reset();
                }
            });
            this.updateDisplayModifiers();
            this.calculateTotal();

            function findMatchingModifier(modifier) {
                return _.find(modifiers_state, function(modifier_state) {
                    var state_menu_modifier = modifier_state.menu_modifier;
                    if (state_menu_modifier && state_menu_modifier.id && state_menu_modifier.id === modifier.menu_modifier.id) {
                        return true;
                    }
                    if (state_menu_modifier && state_menu_modifier.backend_name && state_menu_modifier.backend_name === modifier.menu_modifier.backend_name) {
                        return true;
                    }
                    if (state_menu_modifier && state_menu_modifier.name && state_menu_modifier.name === modifier.menu_modifier.name) {
                        return true;
                    }
                    return false;
                });
            }
        },
        setSizeFromState: function(modifiers_state) {
            if (!this.size_options.length) {
                return;
            }
            _.find(modifiers_state, function(modifier) {
                var menu_modifier = modifier.menu_modifier;
                var size_option = _.find(this.size_options, function(size) {
                    return size.menu_modifier.id === +menu_modifier.id || size.menu_modifier.name === menu_modifier.name;
                }, this);
                if (size_option) {
                    size_option.setId(modifier.id);
                    this.setSize(size_option);
                    return true;
                }
                return false;
            }, this);
        },
        toggleModifier: function(modifier) {
            modifier.toggle();
            this.updateDisplayModifiers();
            this.calculateTotal();
            return this;
        },
        toggleModifierByName: function(name) {
            var modifier = this.getModifierByMenuName(name);
            if (!modifier) {
                throw new Error('cannot toggle unknown modifier "' + _.escape(name) + '"');
            }
            return this.toggleModifier(modifier);
        },
        toggleModifierById: function(id) {
            var modifier = this.getModifierByMenuId(id);
            if (modifier === undefined) {
                throw new Error('cannot toggle unknown modifier #' + _.escape(id));
            }
            return this.toggleModifier(modifier);
        },
        setModifierSelectionState: function(modifier, selection_state) {
            modifier.setSelectionState(selection_state);
            this.updateDisplayModifiers();
            this.calculateTotal();
            return this;
        },
        setModifierSelectionStateByName: function(name, selection_state) {
            var modifier = this.getModifierByMenuName(name);
            if (modifier === undefined) {
                throw new Error('cannot set selection state on unknown modifier #' + _.escape(name));
            }
            return this.setModifierSelectionState(modifier, selection_state);
        },
        setModifierSelectionStateById: function(id, selection_state) {
            var modifier = this.getModifierByMenuId(id);
            if (modifier === undefined) {
                throw new Error('cannot selection state unknown modifier #' + id);
            }
            return this.setModifierSelectionState(modifier, selection_state);
        },
        setModifierQuantity: function(modifier, quantity) {
            modifier.setQuantity(quantity);
            this.updateDisplayModifiers();
            this.calculateTotal();
            return this;
        },
        setModifierQuantityByName: function(name, quantity) {
            var modifier = this.getModifierByMenuName(name);
            if (modifier === undefined) {
                throw new Error('cannot set quantity on unknown modifier #' + _.escape(name));
            }
            return this.setModifierQuantity(modifier, quantity);
        },
        setModifierQuantityById: function(id, quantity) {
            var modifier = this.getModifierByMenuId(id);
            if (modifier === undefined) {
                throw new Error('cannot toggle unknown modifier #' + id);
            }
            return this.setModifierQuantity(modifier, quantity);
        },
        getUnmetSelectionRequirementModifierGroup: function() {
            return _.findWhere(this.modifier_groups, {
                selection_requirement_met: false
            });
        },
        isInOrder: function(order) {
            return (order || Mobi2Go.Order).containsProduct(this);
        },
        addToOrder: function(order) {
            return (order || Mobi2Go.Order).addProduct(this);
        },
        removeFromOrder: function(order) {
            return (order || Mobi2Go.Order).removeProduct(this);
        },
        shouldQuickAddToOrder: function() {
            return !this.size_options.length && !this.getUnmetSelectionRequirementModifierGroup() && !this.visible_modifier_groups.length && !this.menu_product.hasTag('show-dialog')
        },
        getCategoryName: function() {
            return this.menu_product.category ? this.menu_product.category.name : '';
        },
        setCategoryName: function(category_name) {
            this.category_name = category_name;
        }
    });
    _.extend(Product.prototype, {
        setId: function(new_id) {
            this.id = +new_id;
        },
        setPrice: function(new_price) {
            if (!this.price.isEqual(new_price)) {
                this.price.set(new_price);
                this.list_price = this.price.getListPrice();
                this.trigger('updatePrice', this.price, this.list_price);
            }
            return this;
        },
        setTotal: function(new_total) {
            if (!this.total.isEqual(new_total)) {
                this.total.setTax(this.getTax());
                this.total.set(new_total);
                this.list_total = this.total.getListPrice();
                this.trigger('updateTotal', this.total, this.list_total);
            }
            return this;
        },
        getTax: function() {
            var location = Mobi2Go.Order.getLocation();
            if (location) {
                return location.sales_tax;
            }
        },
        setTax: function(tax) {
            this.price.setTax(tax);
            this.total.setTax(tax);
        },
        hasTaxExclusivePrice: function() {
            var sales_tax = this.getTax();
            if (sales_tax) {
                return sales_tax.has_tax_exclusive_prices;
            }
            return false;
        },
        calculatePrice: function() {
            var price = this.menu_product.getPrice(),
                modifier_credit = 0,
                credit_limit = this.modifier_credit_limit,
                modifier_price;
            this.resetFreeCredit();
            this.addCreditFromRemovedModifiers();
            this.setModifierCredit(0);
            this.modifier_credit_limit_override_credit = 0;
            if (this.size) {
                price.add(this.size.getPrice());
            }
            _.each(this.modifier_groups, function(modifier_group) {
                modifier_group.resetFreeCredit();
                _.each(modifier_group.modifiers, function(modifier) {
                    if (!modifier.isAdded()) {
                        return;
                    }
                    modifier_price = modifier.price.toFloat() * modifier.quantity;
                    if (!modifier.menu_modifier.ignores_free_credit) {
                        modifier_price = modifier_group.applyFreeCredit(modifier_price);
                        modifier_price = this.applyFreeCredit(modifier_price);
                    }
                    if (modifier.hasCreditLimitOverride()) {
                        this.modifier_credit_limit_override_credit += modifier_price;
                    }
                    modifier_credit += modifier_price;
                }, this);
            }, this);
            if (credit_limit && (modifier_credit - this.modifier_credit_limit_override_credit) > credit_limit) {
                modifier_credit = (credit_limit + this.modifier_credit_limit_override_credit);
            }
            this.setModifierCredit(modifier_credit);
            price.add(modifier_credit);
            price.setTax(this.getTax());
            if (this.hasTaxExclusivePrice()) {
                price.applyTaxAmount();
            }
            if (price.toFloat() < 0) {
                price.set(0);
            }
            this.setPrice(price);
        },
        addCreditFromRemovedModifiers: function() {
            _.each(this.modifiers, function(modifier) {
                if (modifier.is_default && modifier.selection_state === 'off') {
                    this.free_modifier_credit += modifier.price.toFloat();
                }
            }, this);
        },
        calculateTotal: function() {
            if (this._is_setting) {
                return;
            }
            this.calculatePrice();
            var total = this.price.toFloat() * this.quantity;
            this.setTotal(total);
        },
        resetFreeCredit: function() {
            this.free_modifier_credit = this.menu_product.free_modifier_credit;
        },
        applyFreeCredit: function(amount) {
            var new_amount = +amount;
            if (!this.free_modifier_credit) {
                return new_amount;
            }
            new_amount -= this.free_modifier_credit;
            this.free_modifier_credit -= amount;
            if (this.free_modifier_credit < 0) {
                this.free_modifier_credit = 0;
            }
            if (new_amount < 0) {
                new_amount = 0;
            }
            return new_amount;
        },
        updateModifierCreditLimit: function() {
            var menu_product = this.menu_product,
                size_credit_limit = menu_product.size_modifier_credit_limit;
            if (this.size && size_credit_limit[this.size.menu_modifier.id] !== undefined) {
                this.setModifierCreditLimit(size_credit_limit[this.size.menu_modifier.id]);
            } else {
                this.setModifierCreditLimit(menu_product.modifier_credit_limit);
            }
        },
        setModifierCreditLimit: function(new_credit_limit) {
            if (new_credit_limit !== this.modifier_credit_limit) {
                this.modifier_credit_limit = new_credit_limit;
                this.trigger('updateModifierCreditLimit', this.modifier_credit_limit);
            }
        },
        getModifierCreditLimit: function() {
            return this.modifier_credit_limit;
        },
        hasModifierCreditLimit: function() {
            return this.modifier_credit_limit !== null;
        },
        getRemainingModifierCredit: function() {
            if (this.hasModifierCreditLimit()) {
                var remaining_credit = this.getModifierCreditLimit() +
                    this.modifier_credit_limit_override_credit -
                    this.getModifierCredit();
                return remaining_credit > 0 ? remaining_credit : 0;
            }
            return null;
        },
        getModifierById: function(id) {
            return _.findWhere(this.modifiers, {
                id: id
            });
        },
        getModifierByMenuId: function(id) {
            return _.find(this.modifiers, function(modifier) {
                return modifier.menu_modifier.id === id;
            });
        },
        getModifierByMenuName: function(name) {
            return _.find(this.modifiers, function(modifier) {
                return modifier.menu_modifier.name === name;
            });
        },
        getAddedModifiers: function() {
            return _.filter(this.modifiers, function(modifier) {
                return modifier.isAdded();
            });
        },
        getRemovedModifiers: function() {
            return _.filter(this.modifiers, function(modifier) {
                return modifier.isRemoved();
            });
        },
        getAlteredModifiers: function() {
            var modifiers = _.filter(this.modifiers, function(modifier) {
                return modifier.isRemoved() || modifier.isAdded();
            });
            return (this.size ? [
                this.size
            ] : []).concat(modifiers);
        },
        updateDisplayModifiers: function() {
            var display_modifier_names = {
                added: _.invoke(this.getAddedModifiers(), 'toString'),
                removed: _.invoke(this.getRemovedModifiers(), 'toString')
            };
            if (_.isEqual(this.display_modifier_names, display_modifier_names)) {
                return;
            }
            this.display_modifier_names = display_modifier_names;
            this.display_modifiers = {
                added: this.getAddedModifiers(),
                removed: this.getRemovedModifiers()
            };
            this.trigger('updateDisplayModifiers', this.display_modifiers);
        },
        setModifierCredit: function(modifier_credit) {
            modifier_credit = +modifier_credit;
            if (modifier_credit !== this.modifier_credit) {
                this.modifier_credit = modifier_credit;
                this.trigger('updateModifierCredit', modifier_credit);
            }
        },
        getModifierCredit: function() {
            return this.modifier_credit;
        },
        updateModifierPrices: function() {
            _.invoke(this.modifiers, 'updatePrice');
        },
        getModifierSelectionCount: function() {
            return _.reduce(this.modifier_groups, function(mem, group) {
                if (!group.menu_modifier_group.product_modifier_selection_limit_override) {
                    return mem + group.selection_count;
                }
                return mem;
            }, 0);
        },
        toJson: function() {
            return {
                id: this.id,
                menu_product: _.pick(this.menu_product, [
                    'id',
                    'name'
                ]),
                quantity: this.quantity,
                for_name: this.for_name,
                comment: this.comment,
                modifiers: _.invoke(this.getAlteredModifiers(), 'toJson')
            };
        },
        _triggerSelectionLimitWarning: function(modifier) {
            this.trigger('selectionLimitWarning', modifier);
        },
        _triggerUpdateModifierPrice: function(modifier) {
            this.trigger('updateModifierPrice', modifier);
        },
        _triggerUpdateModifierQuantity: function(modifier) {
            this.trigger('updateModifierQuantity', modifier);
        },
        _triggerUpdateModifierSelection: function(modifier) {
            this.trigger('updateModifierSelection', modifier);
        },
        _triggerShowModifier: function(modifier) {
            this.trigger('showModifier', modifier);
        },
        _triggerHideModifier: function(modifier) {
            this.trigger('hideModifier', modifier);
        },
        _triggerGroupSelectionLimitWarning: function(modifier_group, modifier) {
            this.trigger('groupSelectionLimitWarning', modifier_group, modifier);
        },
        _triggerUpdateGroupSelectionCount: function(modifier_group) {
            this.trigger('updateGroupSelectionCount', modifier_group);
        },
        _triggerUpdateGroupSelectionRequirementMet: function(modifier_group) {
            this.trigger('updateGroupSelectionRequirementMet', modifier_group);
        },
        _triggerUpdateGroupSelectionLimitMet: function(modifier_group) {
            this.trigger('updateGroupSelectionLimitMet', modifier_group);
        }
    });
    Product.prototype.toString = function() {
        var name = this.menu_product.name;
        if (this.quantity > 1) {
            name = this.quantity + '× ' + name;
        }
        return name;
    };

    function loadModifiers() {
        var menu_product = this.menu_product,
            modifier_groups = menu_product.getNonSizeModifierGroups(),
            OrderModifierGroup = Mobi2Go._class.OrderProductModifierGroup;
        if (this.modifiers.length) {
            _.invoke(this.modifiers, 'unbindFromProduct');
        }
        this.modifier_groups = [];
        this.visible_modifier_groups = [];
        this.hidden_modifier_groups = [];
        this.modifiers = [];
        loadSizeModifiers.call(this);
        modifier_groups.each(function(group) {
            var modifier_group = OrderModifierGroup(group, this);
            if (!modifier_group.modifiers) {
                return;
            }
            this.modifier_groups.push(modifier_group);
            if (group.type === 'hidden') {
                this.hidden_modifier_groups.push(modifier_group);
            } else {
                this.visible_modifier_groups.push(modifier_group);
            }
        }, this);
    }

    function loadSizeModifiers() {
        var menu_product = this.menu_product,
            size_modifier_group = menu_product.getSizeModifierGroup(),
            SizeModifier = Mobi2Go._class.OrderProductSizeModifier;
        this.size_options = [];
        if (size_modifier_group) {
            this.size_options = size_modifier_group.getModifiers().map(function(group) {
                return SizeModifier(group, this);
            }, this);
            this.size_options && this.setSize(this.size_options[0]);
        } else {
            this.setSize(null);
        }
    }
})(Mobi2Go, this._ || exports._);
(function(Mobi2Go, _) {
    'use strict';
    Mobi2Go._class = Mobi2Go._class || {};
    var Price = Mobi2Go._class.Common.Price;
    Mobi2Go._class.OrderProducts = function(order_events) {
        var bind = order_events.bind,
            trigger = order_events.trigger,
            unbind = order_events.trigger,
            once = order_events.once;
        var collection = [];
        var total = new Price(0),
            quantity = 0;
        bind('updateMenuTier', recalculateTotal);

        function recalculateTotal() {
            _.invoke(collection, 'updateModifierPrices');
            _.invoke(collection, 'calculateTotal');
            updateTotal();
        }

        function setTax(tax) {
            _.each(collection, function(product) {
                product.setTax(tax);
            });
        }

        function getSalesTaxTotal() {
            return _.reduce(collection, function(total, product) {
                return total.add(product.total.getTaxPrice());
            }, new Price(0));
        }

        function getTotal() {
            return _.reduce(collection, function(total, product) {
                return total.add(product.total);
            }, new Price(0));
        }

        function updateTotal() {
            var new_total = getTotal();
            if (new_total.isEqual(total)) {
                return;
            }
            total = new_total;
            trigger('updateProductsTotal', total);
        }

        function getQuantity() {
            return _.reduce(collection, function(quantity, product) {
                return quantity + product.quantity;
            }, 0);
        }

        function updateQuantity() {
            var new_quantity = getQuantity();
            if (new_quantity === quantity) {
                return;
            }
            quantity = new_quantity;
            trigger('updateProductsQuantity', quantity);
        }

        function set(products) {
            _.each(products, function(product, index) {
                if (collection[index]) {
                    collection[index].set(product);
                } else {
                    product = Mobi2Go._class.OrderProduct(product);
                    add(product, true);
                }
            });
            if (products.length < collection.length) {
                var products_to_remove = _.last(collection, collection.length - products.length);
                _.each(products_to_remove, function(product) {
                    remove(product, true);
                });
            }
            updateQuantity();
            updateTotal();
        }

        function add(product, skip_collection_update) {
            if (!(product instanceof Mobi2Go._class.OrderProduct)) {
                if (!(product instanceof Mobi2Go._class.MenuItem.Product)) {
                    throw new TypeError('Mobi2Go._class.OrderProduct or Mobi2Go._class.MenuItem.Product required');
                }
                product = product.createOrderProductInstance();
            }
            collection.push(product);
            trigger('addProduct', product);
            product.trigger('addToOrder');
            product.bind({
                updateTotal: updateTotal,
                updateQuantity: updateQuantity
            });
            if (!skip_collection_update) {
                updateQuantity();
                updateTotal();
            }
            return product;
        }

        function remove(product, skip_collection_update) {
            if (!product instanceof Mobi2Go._class.OrderProduct) {
                throw new TypeError('Mobi2Go._class.OrderProduct required');
            }
            var o_length = collection.length;
            collection = _.reject(collection, {
                cid: product.cid
            });
            if (o_length === collection.length) {
                return;
            }
            trigger('removeProduct', product);
            product.trigger('removeFromOrder');
            product.unbind({
                updateTotal: updateTotal,
                updateQuantity: updateQuantity
            });
            if (!skip_collection_update) {
                updateQuantity();
                updateTotal();
            }
        }
        return {
            get: function() {
                return collection;
            },
            getTotal: getTotal,
            getSalesTaxTotal: getSalesTaxTotal,
            setTax: setTax,
            getQuantity: getQuantity,
            set: set,
            add: add,
            remove: remove,
            contains: function(product) {
                return _.contains(_.pluck(collection, 'cid'), product.cid);
            },
            toJson: function() {
                return _.invoke(collection, 'toJson');
            },
            bind: bind,
            once: once,
            unbind: unbind
        };
    };
})(Mobi2Go, this._ || exports._);
(function(Mobi2Go, $, _, doc) {
    'use strict';
    Mobi2Go._class = Mobi2Go._class || {};
    var OrderPaymentProcessor = Mobi2Go._class.OrderPaymentProcessor = function(properties, order) {
        if (!OrderPaymentProcessor[properties.form_type]) {
            throw new Error('Unkown Payment Processor form type');
        }
        return OrderPaymentProcessor[properties.form_type](properties, order);
    };

    function BasePaymentProcessor(properties, order) {
        this.init(properties, order);
    }
    _.extend(BasePaymentProcessor.prototype, {
        init: function(properties, order) {
            this.status = 'unconfirmed';
            this.message = 'transaction uninitiated';
            this.last_error = '';
            this.last_transaction_id = null;
            this.should_show_billing_details = false;
            if (localStorage && localStorage.getItem('Mobi2GoLastPaymentError')) {
                this.last_error = localStorage.getItem('Mobi2GoLastPaymentError');
            }
            if (localStorage && localStorage.getItem('Mobi2GoLastPaymentTransactionId')) {
                this.last_transaction_id = localStorage.getItem('Mobi2GoLastPaymentTransactionId');
            }
            this.setProperties(properties);
            this.order = order || Mobi2Go.Order;
        },
        setProperties: function(properties) {
            this.name = properties.name;
            this.form_type = properties.form_type;
            this.is_card_tokenisation_available = properties.is_card_tokenisation_available;
        },
        getTransaction: function() {
            return {
                status: this.status,
                message: this.message
            };
        },
        setTransaction: function(transaction) {
            if (this.status !== transaction.status) {
                this.status = transaction.status;
                this.order.trigger('updatePaymentProcessorStatus', this.status);
            }
            var current_error_signiture = this.last_error + this.last_transaction_id;
            var new_error_signiture = transaction.last_error + transaction.last_transaction_id;
            if (this.last_error !== transaction.last_error) {
                this.last_error = transaction.last_error;
                if (localStorage) {
                    localStorage.setItem('Mobi2GoLastPaymentError', this.last_error);
                }
            }
            if (this.last_transaction_id !== transaction.last_transaction_id) {
                this.last_transaction_id = transaction.last_transaction_id;
                if (localStorage) {
                    localStorage.setItem('Mobi2GoLastPaymentTransactionId', this.last_transaction_id);
                }
            }
            if (current_error_signiture !== new_error_signiture && this.last_error) {
                this.order.trigger('updatePaymentProcessorError', this.last_error);
            }
            if (this.message !== transaction.message) {
                this.message = transaction.message;
                this.order.trigger('updatePaymentProcessorMessage', this.message);
                var error = this.getError();
                if (error && this.last_error) {
                    this.order.trigger('updatePaymentProcessorError', error);
                }
            }
        },
        getStatus: function() {
            return this.status;
        },
        isUnconfirmed: function() {
            return this.status === 'unconfirmed';
        },
        isConfirming: function() {
            return this.status === 'confirming';
        },
        isConfirmed: function() {
            return this.status === 'confirmed';
        },
        getMessage: function() {
            return this.message;
        },
        getError: function() {
            var label = 'error: ';
            if (this.message.substr(0, label.length) == label) {
                return this.message.substr(label.length);
            }
            return null;
        },
        getLastError: function() {
            return this.last_error;
        },
        getLogoUrl: function() {
            return Mobi2Go.app.base_url + '/store/application/ui/components/img/payment-processor-logos/' +
                this.name + '.png';
        },
        getFormType: function() {
            return this.form_type;
        },
        getName: function() {
            return this.name;
        },
        shouldShowBillingDetails: function() {
            return !!this.should_show_billing_details;
        }
    });
    _.extend(OrderPaymentProcessor, {
        direct: function(properties, order) {
            var DirectProcessor = new BasePaymentProcessor(properties, order);
            var credit_card = {
                number: null,
                card_name: null,
                expiry_month: null,
                expiry_year: null,
                cvv: null,
                billing_details: {
                    first_name: null,
                    last_name: null,
                    address_1: null,
                    address_2: null,
                    country: null,
                    city: null,
                    region: null,
                    post_code: null
                }
            };
            DirectProcessor.setCreditCard = function(new_credit_card) {
                credit_card = new_credit_card;
                order.trigger('updateCreditCard', credit_card);
                return DirectProcessor;
            };
            DirectProcessor.isCreditCardValid = function() {
                return DirectProcessor.isCreditCardNumberValid() && DirectProcessor.isCreditCardExpiryValid();
            };
            DirectProcessor.isCreditCardNumberValid = function() {
                return credit_card.number && ('' + credit_card.number).length > 10;
            };
            DirectProcessor.isCreditCardExpiryValid = function() {
                return !!credit_card.expiry_month && !!credit_card.expiry_year;
            };
            DirectProcessor.confirm = function(callback) {
                if (!DirectProcessor.isConfirming()) {
                    throw new Error('Cannot confirm payment, not confirming');
                }
                serverRequest(credit_card, callback);
                return DirectProcessor;
            };
            DirectProcessor.isBillingDetailsValid = function() {
                if (!this.shouldShowBillingDetails()) {
                    return true;
                }
                return !!credit_card.billing_details.first_name && !!credit_card.billing_details.last_name && !!credit_card.billing_details.address_1 && !!credit_card.billing_details.city && !!credit_card.billing_details.country && !!credit_card.billing_details.post_code && !!credit_card.billing_details.region;
            };
            if (properties.name === 'Braintree') {
                var encryption_client = null,
                    cse_key = null;
                if (DirectProcessor.shouldShowBillingDetails()) {
                    credit_card['billing_details'] = {
                        first_name: null,
                        last_name: null,
                        address_1: null,
                        address_2: null,
                        country: null,
                        city: null,
                        region: null,
                        post_code: null
                    };
                }
                var loadExternalLib = function(callback) {
                        if (window.Braintree) {
                            if (_.isFunction(callback)) {
                                _.defer(callback);
                            }
                            return;
                        }
                        var src = 'https://js.braintreegateway.com/v1/braintree.js';
                        Mobi2Go.helpers.loadScripts([src], callback);
                    },
                    initateEncryptionClient = function() {
                        if (!encryption_client || encryption_client.publicKey !== cse_key) {
                            encryption_client = window.Braintree.create(cse_key);
                        }
                    };
                loadExternalLib();
                DirectProcessor.setTransaction = function(transaction) {
                    BasePaymentProcessor.prototype.setTransaction.call(DirectProcessor, transaction);
                    cse_key = transaction.cse_key;
                    this.should_show_billing_details = transaction.should_show_billing_details;
                    return DirectProcessor;
                };
                DirectProcessor.confirm = function(callback) {
                    loadExternalLib(function() {
                        initateEncryptionClient();
                        var encrypted_data = null;
                        if (!DirectProcessor.shouldShowBillingDetails()) {
                            encrypted_data = {
                                number: encryption_client.encrypt(credit_card.number),
                                expiry_month: encryption_client.encrypt(credit_card.expiry_month),
                                expiry_year: encryption_client.encrypt(credit_card.expiry_year),
                                cvc: encryption_client.encrypt(credit_card.cvc)
                            };
                        } else {
                            encrypted_data = {};
                            _.forIn(credit_card, function(value, key) {
                                if (key !== 'billing_details') {
                                    encrypted_data[key] = encryption_client.encrypt(value);
                                } else {
                                    encrypted_data[key] = {};
                                    _.forIn(value, function(v, k) {
                                        encrypted_data[key][k] = v;
                                    });
                                }
                            });
                        }
                        serverRequest(encrypted_data, callback);
                    });
                    return DirectProcessor;
                };
            }
            if (properties.name === 'Stripe') {
                var publishable_key = null,
                    token = null;
                if (DirectProcessor.shouldShowBillingDetails()) {
                    credit_card['billing_details'] = {
                        first_name: null,
                        last_name: null,
                        address_1: null,
                        address_2: null,
                        country: null,
                        city: null,
                        region: null,
                        post_code: null
                    };
                }
                var loadExternalLib = function(callback) {
                        if (window.Stripe) {
                            if (_.isFunction(callback)) {
                                _.defer(callback);
                            }
                            return;
                        }
                        var src = 'https://js.stripe.com/v2/';
                        Mobi2Go.helpers.loadScripts([src], callback);
                    },
                    initateStripe = function(callback) {
                        Stripe.setPublishableKey(publishable_key);
                        var data = {};
                        if (!DirectProcessor.shouldShowBillingDetails()) {
                            data = {
                                number: credit_card.number,
                                cvc: credit_card.cvc,
                                exp_month: credit_card.expiry_month,
                                exp_year: credit_card.expiry_year
                            };
                        } else {
                            data = {
                                number: credit_card.number,
                                cvc: credit_card.cvc,
                                exp_month: credit_card.expiry_month,
                                exp_year: credit_card.expiry_year,
                                name: credit_card.billing_details.first_name + ' ' + credit_card.billing_details.last_name,
                                address_line1: credit_card.billing_details.address_1,
                                address_line2: credit_card.billing_details.address_2,
                                address_city: credit_card.billing_details.city,
                                address_state: credit_card.billing_details.region,
                                address_zip: credit_card.billing_details.post_code,
                                address_country: credit_card.billing_details.country
                            };
                        }
                        Stripe.card.createToken(data, function(status, response) {
                            if (!response.error) {
                                token = response.id;
                                if (_.isFunction(callback)) {
                                    callback();
                                }
                            }
                        });
                    };
                loadExternalLib();
                DirectProcessor.setTransaction = function(transaction) {
                    BasePaymentProcessor.prototype.setTransaction.call(DirectProcessor, transaction);
                    publishable_key = transaction.publishable_key;
                    this.should_show_billing_details = transaction.should_show_billing_details;
                    return DirectProcessor;
                };
                DirectProcessor.confirm = function(callback) {
                    loadExternalLib(function() {
                        initateStripe(function() {
                            var stripe_data = {
                                token: token
                            };
                            serverRequest(stripe_data, callback);
                        });
                    });
                    return DirectProcessor;
                };
            }
            if (properties.name === 'AstonClub') {
                var loadExternalLib = function(callback) {
                    if (window.Tidy) {
                        if (_.isFunction(callback)) {
                            _.defer(callback);
                        }
                        return;
                    }
                    var sandbox = 'https://static.mytidyapp.com/tidywebsdk/current/sandbox.js';
                    var src = 'https://static.mytidyapp.com/tidywebsdk/current/tidy.min.js';
                    Mobi2Go.helpers.loadScripts([sandbox,
                        src
                    ], callback);
                };
                loadExternalLib();
                DirectProcessor.isCreditCardValid = function() {
                    return true;
                };
                DirectProcessor.setTransaction = function(transaction) {
                    BasePaymentProcessor.prototype.setTransaction.call(DirectProcessor, transaction);
                    this.should_show_billing_details = transaction.should_show_billing_details;
                    this.client_id = transaction.client_id;
                    this.merchant_id = transaction.merchant_id;
                    return DirectProcessor;
                };
                DirectProcessor.confirm = function(callback) {
                    loadExternalLib(function() {
                        var tidy = new Tidy({
                            clientId: DirectProcessor.client_id
                        });
                        var items = _.map(DirectProcessor.order.getProducts(), function(item) {
                            return {
                                name: item.menu_product.name,
                                quantity: item.quantity,
                                amount: item.total[0] * 100
                            }
                        });
                        var order = {
                            merchantId: DirectProcessor.merchant_id,
                            orderRef: DirectProcessor.order.getId(),
                            total: DirectProcessor.order.getTotal()[0] * 100,
                            tax: DirectProcessor.order.getSalesTaxTotal()[0] * 100,
                            items: items
                        };
                        tidy.payment(order, function(err, native_data) {
                            if (err) {
                                DirectProcessor.order.trigger('updateProgressError', err.message);
                                DirectProcessor.order.trigger('updatePaymentProcessorError', err.message);
                                return false
                            }
                            var aston_data = {
                                nonce: native_data.nonce
                            };
                            serverRequest(aston_data, function(transaction) {
                                if (_.isFunction(callback)) {
                                    callback(transaction);
                                }
                                tidy.complete('Thank you for ordering');
                            });
                        })
                    });
                    return DirectProcessor;
                };
            }

            function serverRequest(data, callback) {
                order.trigger('paymentRequest');
                Mobi2Go.app.serverRequest({
                    api_version: 1,
                    endpoint: [
                        'orders',
                        order.getId(),
                        'direct_payment'
                    ],
                    data: data,
                    type: 'POST',
                    success: function(response) {
                        order.set(response).trigger('syncSuccessFromPayment', response);
                        var transaction = DirectProcessor.getTransaction();
                        order.trigger('paymentResponse', transaction);
                        if (_.isFunction(callback)) {
                            callback(transaction);
                        }
                    }
                });
            }

            function onConfirming(status) {
                if (status === 'confirming') {
                    if (DirectProcessor.isCreditCardValid()) {
                        DirectProcessor.confirm();
                    } else {
                        order.trigger('invalidCreditCardWarning');
                        order.cancelConfirmation();
                    }
                }
            }
            order.bind('updatePaymentProcessorStatus', onConfirming);

            function onError(error) {
                if (error) {
                    _.defer(order.cancelConfirmation);
                }
            }
            order.bind('updatePaymentProcessorError', onError);

            function onUpdatePaymentProcessor(processor) {
                if (!processor || processor.getName() !== DirectProcessor.getName()) {
                    order.unbind('updatePaymentProcessorStatus', onConfirming);
                    order.unbind('updatePaymentProcessor', onUpdatePaymentProcessor);
                    order.unbind('updatePaymentProcessorError', onError);
                }
            }
            order.bind('updatePaymentProcessor', onUpdatePaymentProcessor);
            return DirectProcessor;
        },
        iframe: function(properties, order) {
            var IframeProcessor = new BasePaymentProcessor(properties, order);
            var POLL_INTERVAL = 5000;
            var iframe_element = null;
            var iframe_url = null;
            IframeProcessor.setTransaction = function(transaction) {
                BasePaymentProcessor.prototype.setTransaction.call(IframeProcessor, transaction);
                setIframeUrl(transaction.url);
            };

            function setIframeUrl(url) {
                if (iframe_url !== url) {
                    iframe_url = url || null;
                    if (iframe_element) {
                        $(iframe_element).unbind('load', order.save);
                    }
                    if (url) {
                        iframe_element = doc.createElement('iframe');
                        iframe_url = iframe_element.src = url;
                        $(iframe_element).bind('load', order.save);
                    } else {
                        iframe_element = null;
                    }
                    order.trigger('updatePaymentProcessorIframe', iframe_element);
                }
            }
            IframeProcessor.getUrl = function() {
                return iframe_url;
            };
            IframeProcessor.getIframe = function() {
                return iframe_element;
            };
            var poll_method;
            if (properties.name === 'PaymentExpressPxPay' || properties.name === 'Eway' || properties.name === 'EwayGeneric' || properties.name === 'CybersourceGeneric' || properties.name === 'Mercury' || properties.name === 'PaySafe' || properties.name === 'Payeezy' || properties.name === 'Moneris' || properties.name === 'HyperPay' || properties.name === 'PaymentExpressPxPayGeneric' || properties.name === 'PayStation3PartyGeneric' || properties.name === 'Payfort') {
                poll_method = order.load;
            } else {
                poll_method = order.save;
            }
            var interval = null;

            function startLoadInterval() {
                if (order.getProgressStatus() === 'pending payment' && !interval) {
                    interval = setInterval(poll_method, POLL_INTERVAL);
                } else {
                    clearTimeout(interval);
                    interval = null;
                }
            }
            startLoadInterval();
            order.bind('updateProgressStatus', startLoadInterval);
            order.bind('updatePaymentCardToken', function(token) {
                if (token) {
                    setIframeUrl(null);
                }
            });
            return IframeProcessor;
        },
        redirect: function(properties, order) {
            var RedirectProcessor = new BasePaymentProcessor(properties, order);
            var url = null;
            RedirectProcessor.setTransaction = function(transaction) {
                BasePaymentProcessor.prototype.setTransaction.call(RedirectProcessor, transaction);
                setUrl(transaction.url);
            };
            RedirectProcessor.getUrl = function() {
                return url;
            };

            function setUrl(new_url) {
                if (new_url === url) {
                    return;
                }
                order.trigger('updatePaymentProcessorRedirectUrl', url = new_url);
            }
            var POLL_INTERVAL = 5000;
            var interval = null;

            function startLoadInterval() {
                if (order.getProgressStatus() === 'pending payment' && !interval) {
                    interval = setInterval(order.load, POLL_INTERVAL);
                } else {
                    clearTimeout(interval);
                    interval = null;
                }
            }
            startLoadInterval();
            order.bind('updateProgressStatus', startLoadInterval);
            return RedirectProcessor;
        }
    });
}(Mobi2Go, jQuery, this._ || exports._, window.document));
(function(Mobi2Go, _, window) {
    'use strict';
    Mobi2Go._class = Mobi2Go._class || {};
    var Price = Mobi2Go._class.Common.Price;
    var instance_count = 0;
    Mobi2Go._class.Order = function(id) {
        id = id || null;
        var events = Mobi2Go.app.mixinEvents('Order' + (instance_count++ ? instance_count : '')),
            bind = events.bind,
            trigger = events.trigger,
            unbind = events.unbind,
            once = events.once;
        var customer = null,
            address = null,
            location = null,
            method = null,
            products = Mobi2Go._class.OrderProducts(events),
            menu = null,
            payment = {
                method: null,
                status: 'method required',
                card_token_id: null,
                card_token_saving_enabled: false,
                available_card_tokens: [],
                processor: null
            },
            expected_at = null,
            comment = '',
            voucher = {
                code: '',
                voucher_applied: null,
                error_message: ''
            },
            delivery_minimum_total = new Price(0),
            surcharge = new Price(0),
            tip = new Price(0),
            latitude = null,
            longitude = null;
        var delivery_fee = new Price(0),
            discounts = [],
            discounts_total = new Price(0),
            total = new Price(0);
        var is_setting = false;
        var is_resetting = false;
        var self = {};
        var available_methods = [],
            available_payment_methods = [],
            available_addresses = [],
            available_delivery_areas = [],
            available_dates = [],
            available_times = [],
            out_of_stocks = {},
            menu_tier = null,
            minutes_to_closing = null,
            expected_in_string = null;
        var MINUTES_TO_CLOSING_BUFFER = 4;

        function get() {
            return {
                id: id,
                customer: customer,
                address: address,
                location: location,
                method: method,
                expected_at: expected_at,
                products: products.get(),
                payment: payment,
                delivery_fee: delivery_fee,
                comment: comment,
                voucher: voucher,
                total: total,
                progress: progress,
                latitude: latitude,
                longitude: longitude,
                platform: Mobi2Go.app.getPlatform()
            };
        }

        function set(properties) {
            is_setting = true;
            if (properties.id !== undefined) {
                setId(properties.id);
            }
            if (properties.customer !== undefined) {
                if (properties.customer === null && customer !== null) {
                    trigger('updateCustomer', null);
                }
            }
            if (properties.location !== undefined) {
                if (!properties.location) {
                    setLocation(null);
                } else if (properties.location.id !== undefined) {
                    setLocationById(properties.location.id);
                } else if (properties.location.name !== undefined) {
                    setLocationByName(properties.location.name);
                }
            }
            if (properties.address !== undefined) {
                if (!properties.address) {
                    setAddress(null);
                } else if (properties.address.id !== undefined) {
                    setAddressById(properties.address.id);
                } else if (customer) {
                    customer.createAddress(properties.address, setAddress);
                }
            }
            if (properties.method !== undefined) {
                setMethod(properties.method);
            }
            if (properties.expected_at !== undefined) {
                setExpectedAt(properties.expected_at);
            }
            if (properties.comment !== undefined) {
                setComment(properties.comment);
            }
            if (properties.products !== undefined) {
                products.set(properties.products);
            }
            if (properties.delivery_fee !== undefined) {
                setDeliveryFee(properties.delivery_fee);
            }
            if (properties.voucher !== undefined) {
                setVoucher(properties.voucher);
            }
            if (properties.discounts !== undefined) {
                setDiscounts(properties.discounts);
            }
            if (properties.discounts_total !== undefined) {
                setDiscountsTotal(properties.discounts_total);
            }
            if (properties.delivery_minimum_total !== undefined) {
                setDeliveryMinimumTotal(properties.delivery_minimum_total);
            }
            if (properties.surcharge !== undefined) {
                setSurcharge(properties.surcharge);
            }
            if (properties.tip !== undefined) {
                setTip(properties.tip);
            }
            if (properties.payment !== undefined) {
                setPayment(properties.payment);
            }
            if (properties.dispatcher !== undefined) {
                setDispatcher(properties.dispatcher);
            }
            if (properties.progress !== undefined) {
                setProgress(properties.progress);
            }
            is_setting = false;
            if (properties.total !== undefined) {
                setTotal(properties.total);
            } else {
                calculateTotal();
            }
            return self;
        }

        function setId(new_id) {
            if (id !== new_id) {
                id = new_id;
                trigger('updateId', id);
            }
        }

        function apply(properties) {
            var properties_to_apply = [];
            if (properties.products !== undefined && !getProductsQuantity()) {
                properties_to_apply.push('products');
                properties.products = _.map(properties.products, function(product) {
                    product.id = null;
                    product.modifiers = _.map(product.modifiers, function(modifier) {
                        modifier.id = null;
                        return modifier;
                    });
                    return product;
                });
            }
            if (!location) {
                properties_to_apply.push('location');
            }
            if (!method) {
                properties_to_apply.push('method');
            }
            if (!address && properties.address) {
                properties_to_apply.push('address');
            }
            set(_.pick(properties, properties_to_apply));
            return self;
        }

        function setCustomer(new_customer) {
            if (new_customer && !(new_customer instanceof Mobi2Go._class.Customer)) {
                throw new TypeError('customer must be an instance of Mobi2Go._class.Customer');
            }
            if ((!new_customer && !customer) || (customer && new_customer && customer.id === new_customer.id)) {
                return self;
            }
            if (customer) {
                customer.unbind({
                    updateAddresses: updateAvailableAddresses,
                    updatePassword: onCustomerPasswordUpdate
                });
            }
            customer = new_customer || null;
            if (customer) {
                customer.bind({
                    updateAddresses: updateAvailableAddresses,
                    updatePassword: onCustomerPasswordUpdate
                });
            }
            trigger('updateCustomer', customer);
            return self;
        }

        function providePassword(password, callback) {
            return customer && customer.providePassword(password, function(is_valid) {
                trigger('passwordProvided', is_valid);
                if (_.isFunction(callback)) {
                    callback(is_valid);
                };
            });
        }

        function onCustomerPasswordUpdate() {
            if (customer) {
                trigger('passwordProvided', customer.isPasswordProvided());
            }
        }

        function isPasswordProvided() {
            return !!(customer && customer.isPasswordProvided());
        }

        function setLocation(new_location) {
            if (new_location && !(new_location instanceof Mobi2Go._class.Location)) {
                throw new TypeError('location must be an instance of Mobi2Go._class.Location');
            }
            if ((!location && !new_location) || (location && new_location && location.id === new_location.id)) {
                return self;
            }
            if (new_location && (new_location.isInactive() || new_location.isHidden() || new_location.isLockedOut())) {
                trigger('locationOfflineWarning', new_location);
                return self;
            }
            if (location) {
                location.mute = true;
                location.stopAutoLoading();
                location.unbind({
                    updateCurrentTime: onLocationUpdateCurrentTime,
                    updateOutOfStocks: updateOutOfStocks
                });
            }
            location = new_location || null;
            if (location) {
                location.load();
                location.mute = false;
                location.startAutoLoading();
                location.bind({
                    updateCurrentTime: onLocationUpdateCurrentTime,
                    updateOutOfStocks: updateOutOfStocks
                });
                total.setTax(location.sales_tax);
                discounts_total.setTax(location.discount_sales_tax);
                surcharge.setTax(location.surcharge_sales_tax);
                tip.setTax(location.tips_sales_tax);
                delivery_fee.setTax(location.delivery_sales_tax);
                products.setTax(location.delivery_sales_tax);
            }
            trigger('updateLocation', location);
            return self;
        }

        function setLocationById(id) {
            if (location && location.id === id) return self;
            var new_location = Mobi2Go.Locations.getById(id);
            return setLocation(new_location);
        }

        function setLocationByName(name) {
            if (location && location.name === name) return self;
            var new_location = Mobi2Go.Locations.getByName(name);
            return setLocation(new_location);
        }

        function getAvailableDeliveryAreas() {
            return location && method === 'delivery' ? location.delivery_areas : [];
        }

        function updateAvailableDeliveryAreas() {
            var prev_areas = available_delivery_areas;
            available_delivery_areas = getAvailableDeliveryAreas();
            if (!_.isEqual(prev_areas, available_delivery_areas)) {
                trigger('updateAvailableDeliveryAreas', available_delivery_areas);
            }
        }

        function onLocationUpdateCurrentTime() {
            if (!method || !expected_at || getProgressPhase() === 'confirmed') {
                return;
            }
            var asap_datetime = location.getAsapOrderDatetime(method);
            if (!expected_at || expected_at.isBefore(asap_datetime)) {
                setExpectedAt(asap_datetime);
            }
            updateAvailableDates();
            updateAvailableTimes();
            updateMinutesToClosing();
            updateExpectedInString();
        }

        function getAddress() {
            return address;
        }

        function setAddress(new_address) {
            if (new_address && !(new_address instanceof Mobi2Go._class.CustomerAddress)) {
                throw new TypeError('address must be an instance of Mobi2Go._class.CustomerAddress');
            }
            if ((!address && !new_address) || (address && new_address && address.id === new_address.id)) {
                return self;
            }
            if (new_address && !location.isAddressAvailable(new_address)) {
                return self;
            }
            if (address) {
                address.unbind('update', triggerUpdateAddress);
            }
            address = new_address;
            if (address) {
                address.bind('update', triggerUpdateAddress);
            }
            triggerUpdateAddress();
            return self;
        }

        function triggerUpdateAddress() {
            trigger('updateAddress', address);
        }

        function setAddressById(id) {
            if (address && address.id === id) {
                return self;
            }
            var new_address = customer ? customer.getAddressById(id) : null;
            return setAddress(new_address);
        }

        function getAvailableAddresses() {
            if (location && customer && method === 'delivery') {
                return location.filterAvailableAddresses(customer.addresses);
            }
            return [];
        }

        function updateAvailableAddresses() {
            var prev_addresses = available_addresses;
            available_addresses = getAvailableAddresses();
            if (!_.isEqual(prev_addresses, available_addresses)) {
                trigger('updateAvailableAddresses', available_addresses);
                if (!available_addresses.length || (address && (!location || !location.isAddressAvailable(address)))) {
                    setAddress(null);
                }
            }
        }

        function setAddressAfterCustomerSet(address) {
            if (customer) {
                createAddressAndSet();
            } else {
                unbind('updateCustomer', setAddressAfterCustomerSet.callback);
                bind('updateCustomer', setAddressAfterCustomerSet.callback = function(customer) {
                    if (customer && location && method) {
                        createAddressAndSet();
                        unbind('updateCustomer', setAddressAfterCustomerSet.callback);
                    }
                });
            }

            function createAddressAndSet() {
                address = customer.createAddress(address).save();
                setAddress(address);
            }
        }

        function getMenu() {
            return menu;
        }

        function getMenuTier() {
            return menu ? menu.tier : null;
        }

        function getSalesTax() {
            return location ? location.sales_tax : null;
        }
        var customMenuSelector = null;

        function updateMenu() {
            var new_menu = null;
            if (customMenuSelector) {
                new_menu = customMenuSelector();
            }
            if (!new_menu) {
                new_menu = location ? location.getMenu() : Mobi2Go.Menu.getActiveMenu();
            }
            if (menu && new_menu && menu.id === new_menu.id) {
                return;
            }
            menu = new_menu;
            trigger('updateMenu', menu);
            if (menu_tier !== menu.tier) {
                menu_tier = menu.tier;
                trigger('updateMenuTier', menu.tier);
            }
        }

        function getUnavailableProductsForMenu(menu) {
            if (!(menu instanceof Mobi2Go._class.MenuItem.Menu)) {
                throw new TypeError('menu must be an instance of Mobi2Go._class.MenuItem.Menu');
            }
            return _.filter(products.get(), function(product) {
                return !menu.getProductByDisplayName(product.menu_product.name);
            });
        }

        function getUnavailableAndOutOfStockProductsForLocation(location) {
            if (location && !(location instanceof Mobi2Go._class.Location)) {
                throw new TypeError('location must be an instance of Mobi2Go._class.Location');
            }
            var unavailable_products = getUnavailableProductsForMenu(location.getMenu());
            var oos_products = getOutOfStockProductsForLocation(location);
            var products = _.union(unavailable_products, oos_products);
            return _.uniq(products, function(product) {
                return product.menu_product.id;
            });
        }

        function switchOrRemoveProductsNotInLocationMenu() {
            if (!location) {
                return;
            }
            var set_products = [],
                removed_products = [];
            _.each(products.get(), function(product) {
                if (menu.containsProduct(product.menu_product)) {
                    set_products.push(product);
                    return;
                }
                var switchable_menu_product = menu.getProductByDisplayName(product.menu_product.name);
                if (switchable_menu_product) {
                    var modifiers = [];
                    _.each(product.getAlteredModifiers(), function(modifier) {
                        var name = modifier.menu_modifier.name;
                        var switchable_menu_modifier = switchable_menu_product.getModifierByDisplayName(name);
                        if (switchable_menu_modifier) {
                            modifier.menu_modifier = switchable_menu_modifier;
                            modifiers.push(modifier);
                        }
                    });
                    product.set({
                        id: null,
                        menu_product: switchable_menu_product,
                        modifiers: modifiers
                    });
                    set_products.push(product);
                    return;
                }
                removed_products.push(product);
            });
            if (removed_products.length) {
                products.set(set_products);
                trigger('removedProductsNotInMenuWarning', removed_products);
            }
        }

        function setMethod(new_method) {
            var available_methods = getAvailableMethods();
            if (available_methods.length === 1 && new_method === null) {
                new_method = available_methods[0];
            }
            if (method === new_method || new_method && !_.contains(available_methods, new_method)) {
                return self;
            }
            var is_asap_time = isExpectedAsap();
            method = new_method;
            trigger('updateMethod', method);
            if (is_asap_time) {
                setExpectedAt(getAsapExpectedTime());
            }
            return self;
        }

        function getAvailableMethods() {
            return location ? location.getAvailableOrderMethods() : [];
        }

        function updateAvailableMethods() {
            var prev_methods = available_methods;
            available_methods = getAvailableMethods();
            if (_.isEqual(prev_methods, available_methods))
                return;
            trigger('updateAvailableMethods', available_methods);
            if (available_methods.length === 1) {
                setMethod(available_methods[0]);
            } else if (method && !_.contains(available_methods, method)) {
                setMethod(null);
            }
            return;
        }

        function setDeliveryFee(new_delivery_fee) {
            if (!delivery_fee.isEqual(new_delivery_fee)) {
                delivery_fee.set(new_delivery_fee);
                trigger('updateDeliveryFee', delivery_fee);
            }
        }

        function isMeetingDeliveryMinimumProductsTotal() {
            if (method === 'delivery') {
                return products.getTotal().toFloat() >= delivery_minimum_total.toFloat();
            }
            return true;
        }

        function getDeliveryMinimumTotal() {
            return delivery_minimum_total;
        }

        function setDeliveryMinimumTotal(total) {
            if (!delivery_minimum_total.isEqual(total)) {
                delivery_minimum_total.set(total);
                trigger('updateDeliveryMinimumTotal', delivery_minimum_total);
            }
        }

        function setSurcharge(new_surcharge) {
            if (!surcharge.isEqual(new_surcharge)) {
                surcharge.set(new_surcharge);
                trigger('updateSurcharge', surcharge);
            }
        }

        function setTip(new_tip) {
            if (!tip.isEqual(new_tip)) {
                tip.set(new_tip);
                trigger('updateTip', tip);
            }
        }

        function getAvailableDates() {
            return location && method ? location.getAvailableOrderDates(method) : [];
        }

        function updateAvailableDates() {
            var prev_available_dates = available_dates;
            available_dates = getAvailableDates();
            if (_.isEqual(prev_available_dates, available_dates))
                return;
            trigger('updateAvailableDates', available_dates);
            if (!available_dates.length) {
                setExpectedAt(null);
            } else if (!expected_at) {
                updateAvailableTimes();
            }
        }
        var customAvailableTimesFilter = null;

        function getAvailableTimes(date) {
            if (!location || !method) {
                return [];
            }
            var times = location.getAvailableOrderTimes(method, date || expected_at);
            if (customAvailableTimesFilter) {
                return customAvailableTimesFilter(times);
            }
            return times;
        }

        function updateAvailableTimes() {
            var prev_available_times = available_times;
            available_times = getAvailableTimes();
            if (prev_available_times.length === available_times.length) {
                return;
            }
            trigger('updateAvailableTimes', available_times);
            if (!available_times.length) {
                setExpectedAt(null);
            } else if (!expected_at) {
                setExpectedAt(available_times[0]);
            }
        }

        function setExpectedAt(new_datetime) {
            if (new_datetime && location) {
                new_datetime = Mobi2Go._class.Location.prototype.toOrderDatetime(new_datetime);
            }
            if ((!new_datetime && !expected_at) || (+new_datetime === +expected_at) || (new_datetime && (!location || !method))) {
                return self;
            }
            if (new_datetime && !isDateInAvailableDates(new_datetime)) {
                new_datetime = getAsapExpectedTime();
            }
            expected_at = new_datetime;
            trigger('updateExpectedAt', expected_at);
            return self;
        }

        function isDateInAvailableDates(date) {
            var is_in = false;
            _.each(getAvailableDates(), function(available_date) {
                if (available_date.format('YYYY MMMM DDD') === date.format('YYYY MMMM DDD')) {
                    is_in = true;
                }
            });
            return is_in;
        }

        function getAsapExpectedTime() {
            return method ? location.getAsapOrderDatetime(method) : undefined;
        }

        function isExpectedAsap() {
            return location && method && expected_at && expected_at.isSame(location.getAsapOrderDatetime(method));
        }

        function isScheduled() {
            return method && expected_at && !expected_at.isSame(location.getAsapOrderDatetime(method));
        }

        function isExpectedToday() {
            return method && expected_at && location && expected_at.isSame(location.current_time, 'day');
        }

        function isExpectedTomorrow() {
            if (method && expected_at && location) {
                var tomorrow = location.current_time.clone().add(1, 'day');
                return tomorrow.isSame(expected_at, 'day');
            }
            return false;
        }

        function getExpectedInString() {
            return expected_in_string;
        }

        function setExpectedInString(expected_in) {
            if (expected_in !== expected_in_string) {
                expected_in_string = expected_in;
                trigger('updateExpectedInString', expected_in_string);
            }
        }

        function updateExpectedInString() {
            var expected_in = null;
            if (location && expected_at) {
                expected_in = expected_at.from(location.current_time);
            }
            setExpectedInString(expected_in);
        }

        function getMinutesToClosing() {
            return minutes_to_closing;
        }

        function setMinutesToClosing(minutes) {
            if (minutes_to_closing !== minutes) {
                minutes_to_closing = minutes;
                trigger('updateMinutesToClosing', minutes);
            }
        }

        function updateMinutesToClosing() {
            if (!location || !method || !expected_at) {
                return;
            }
            var seconds_remaining = location.getSecondsToFinalOrderTimeCutOff(method, expected_at) - (MINUTES_TO_CLOSING_BUFFER * 60),
                minutes_to_closing = (Math.floor(seconds_remaining / 60));
            if (seconds_remaining < 120) {
                minutes_to_closing = 1;
            }
            setMinutesToClosing(minutes_to_closing);
        }

        function getProducts() {
            return products.get();
        }

        function addProduct(product) {
            products.add(product);
            return this;
        }

        function removeProduct(product) {
            products.remove(product);
            return this;
        }

        function containsProduct(product) {
            return products.contains(product);
        }

        function getProductsTotal() {
            return products.getTotal();
        }

        function getProductsQuantity() {
            return products.getQuantity();
        }

        function containsProduct(product) {
            return products.contains(product);
        }

        function isProductInStock(menu_product) {
            if (!location) {
                return true;
            }
            return location.isProductInStock(menu_product);
        }

        function getOutOfStocks() {
            return location ? location.out_of_stocks : {
                products: []
            };
        }

        function updateOutOfStocks() {
            var new_out_of_stocks = getOutOfStocks();
            if (!_.isEqual(new_out_of_stocks, out_of_stocks)) {
                out_of_stocks = new_out_of_stocks;
                trigger('updateOutOfStocks', out_of_stocks);
            }
        }

        function getOutOfStockProductsForLocation(location) {
            if (location && !(location instanceof Mobi2Go._class.Location)) {
                throw new TypeError('location must be an instance of Mobi2Go._class.Location');
            }
            var out_of_stock_product_ids = _.pluck(location.out_of_stocks.products, 'id');
            return _.filter(products.get(), function(product) {
                return _.contains(out_of_stock_product_ids, product.menu_product.id);
            });
        }

        function removeOutOfStockProducts() {
            if (!location || getProgressPhase() !== 'unconfirmed') {
                return;
            }
            var set_products = [],
                removed_products = [];
            _.each(products.get(), function(product) {
                if (location.isProductInStock(product.menu_product)) {
                    set_products.push(product);
                } else {
                    removed_products.push(_.clone(product));
                }
            });
            if (removed_products.length) {
                products.set(set_products);
                trigger('outOfStockProductsRemovedWarning', removed_products);
            }
        }

        function setPayment(payment) {
            if (payment.method !== undefined) {
                setPaymentMethod(payment.method);
            }
            if (payment.card_token_saving_enabled !== undefined) {
                setPaymentCardTokenSavingEnabled(payment.card_token_saving_enabled);
            }
            if (payment.available_card_tokens !== undefined) {
                setAvailablePaymentCardTokens(payment.available_card_tokens);
            }
            if (payment.card_token_id !== undefined) {
                setPaymentCardTokenById(payment.card_token_id);
            }
            if (payment.processor !== undefined) {
                setPaymentProcessor(payment.processor);
            }
            if (payment.processor_transaction !== undefined) {
                setPaymentProcessorTransaction(payment.processor_transaction);
            }
            if (payment.is_password_required_for_card_token !== undefined) {
                setPaymentIsPasswordRequiredForCardToken(payment.is_password_required_for_card_token);
            }
        }

        function setPaymentMethod(new_payment_method) {
            if (payment.method === new_payment_method) {
                return self;
            }
            if (new_payment_method && !_.contains(getAvailablePaymentMethods(), new_payment_method)) {
                return self;
            }
            payment.method = new_payment_method;
            trigger('updatePaymentMethod', payment.method);
            return self;
        }

        function getAvailablePaymentMethods() {
            return location ? location.getAvailablePaymentMethods(method) : [];
        }

        function updateAvailablePaymentMethods() {
            var prev_available_methods = available_payment_methods;
            available_payment_methods = getAvailablePaymentMethods();
            if (_.isEqual(prev_available_methods, available_payment_methods))
                return self;
            trigger('updateAvailablePaymentMethods', available_payment_methods);
            if (payment.method && !_.contains(available_payment_methods, payment.method)) {
                setPaymentMethod(null);
            }
            if (!payment.method && available_payment_methods.length) {
                setPaymentMethod(available_payment_methods[0]);
            }
            return self;
        }

        function getPaymentCardTokenSavingEnabled() {
            return payment.card_token_saving_enabled;
        }

        function setPaymentCardTokenSavingEnabled(is_enabled) {
            if (payment.card_token_saving_enabled !== is_enabled) {
                payment.card_token_saving_enabled = !!is_enabled;
                trigger('updatePaymentCardTokenSavingEnabled', !!is_enabled);
            }
        }

        function isPaymentCardTokenisationAvailable() {
            return !!(payment.processor && payment.processor.is_card_tokenisation_available);
        }

        function setPaymentCardToken(token) {
            return setPaymentCardTokenById(token ? token.id : null);
        }

        function setPaymentCardTokenById(id) {
            var token = id ? getAvailablePaymentCardTokenById(+id) : null;
            if ((!payment.card_token_id && token) || (payment.card_token_id && !token) || (payment.card_token_id && token && payment.card_token_id !== token.id)) {
                payment.card_token_id = token ? token.id : null;
                trigger('updatePaymentCardToken', token);
            }
            return self;
        }

        function getPaymentCardToken() {
            if (payment.card_token_id) {
                return _.find(getAvailablePaymentCardTokens(), {
                    id: payment.card_token_id
                });
            }
            return null;
        }

        function getAvailablePaymentCardTokens() {
            return payment.available_card_tokens;
        }

        function getAvailablePaymentCardTokenById(id) {
            return _.find(getAvailablePaymentCardTokens(), {
                id: id
            });
        }

        function setAvailablePaymentCardTokens(available_payment_card_tokens) {
            if (!_.isEqual(payment.available_card_tokens, available_payment_card_tokens)) {
                payment.available_card_tokens = available_payment_card_tokens;
                trigger('updateAvailablePaymentCardTokens', payment.available_card_tokens);
            }
        }

        function setPaymentProcessor(processor) {
            if ((!payment.processor && !processor) || payment.processor && processor && payment.processor.name === processor.name && payment.processor.is_card_tokenisation_available === processor.is_card_tokenisation_available) {
                return self;
            }
            if (processor !== null) {
                processor = Mobi2Go._class.OrderPaymentProcessor(processor, self);
            }
            payment.processor = processor;
            trigger('updatePaymentProcessor', payment.processor);
            return self;
        }

        function setPaymentProcessorTransaction(transaction) {
            if (payment.processor) {
                payment.processor.setTransaction(transaction);
            }
        }

        function setPaymentIsPasswordRequiredForCardToken(is_required) {
            payment.is_password_required_for_card_token = is_required;
        }

        function isPasswordRequiredForPaymentToken() {
            return !!payment.is_password_required_for_card_token;
        }

        function setComment(new_comment) {
            if (comment === new_comment) {
                return self;
            }
            comment = new_comment;
            trigger('updateComment', comment);
            return self;
        }

        function setVoucher(new_voucher) {
            if (new_voucher.code !== undefined) {
                setVoucherCode(new_voucher.code);
            }
            if (new_voucher.voucher_applied !== undefined) {
                setVoucherApplied(new_voucher.voucher_applied);
            }
            if (new_voucher.error_message !== undefined) {
                setVoucherErrorMessage(new_voucher.error_message);
            }
        }

        function setVoucherCode(new_voucher_code) {
            if (_.isString(new_voucher_code)) {
                new_voucher_code = new_voucher_code.substr(0, 34);
            }
            if ((!new_voucher_code && !voucher.code) || new_voucher_code === voucher.code) {
                return self;
            }
            voucher.code = new_voucher_code || '';
            trigger('updateVoucherCode', voucher.code);
            return self;
        }

        function setVoucherApplied(new_voucher_applied) {
            if ((!new_voucher_applied && !voucher.voucher_applied) || new_voucher_applied && voucher.voucher_applied && new_voucher_applied.id === voucher.voucher_applied.id) {
                return self;
            }
            voucher.voucher_applied = new_voucher_applied || null;
            trigger('updateVoucherApplied', voucher.voucher_applied);
            return self;
        }

        function setVoucherErrorMessage(new_error_message) {
            if ((!new_error_message && !voucher.error_message) || new_error_message === voucher.error_message) {
                return self;
            }
            voucher.error_message = new_error_message || '';
            trigger('updateVoucherErrorMessage', voucher.error_message);
            return self;
        }

        function setDiscounts(new_discounts) {
            if (_.isEqual(discounts, new_discounts))
                return;
            discounts = new_discounts;
            trigger('updateDiscounts', discounts);
        }

        function setDiscountsTotal(new_discounts_total) {
            if (discounts_total.isEqual(new_discounts_total))
                return;
            discounts_total.set(new_discounts_total);
            trigger('updateDiscountsTotal', discounts_total);
        }

        function getSalesTaxTotal() {
            var total_tax = products.getSalesTaxTotal();
            total_tax.subtract(discounts_total.getTaxPrice());
            total_tax.add(surcharge.getTaxPrice());
            total_tax.add(tip.getTaxPrice());
            total_tax.add(delivery_fee.getTaxPrice());
            return total_tax;
        }

        function calculateTotal() {
            if (is_setting) {
                return;
            }
            var total = new Price(0, getSalesTax()).add(products.getTotal().toFloat()).add(delivery_fee.toFloat()).add(tip.toFloat()).add(surcharge.toFloat()).subtract(discounts_total.toFloat());
            setTotal(total.toFloat());
        }

        function setTotal(new_total) {
            if (!total.isEqual(new_total)) {
                total.set(new_total);
                trigger('updateTotal', total);
            }
        }
        var dispatcher = {
            status: null,
            message: null
        };

        function setDispatcher(dispatcher) {
            if (dispatcher && dispatcher.status !== undefined)
                setDispatcherStatus(dispatcher.status);
            if (dispatcher && dispatcher.message !== undefined)
                setDispatcherMessage(dispatcher.message);
        }

        function setDispatcherStatus(status) {
            if (status !== dispatcher.status) {
                dispatcher.status = status;
            }
        }

        function setDispatcherMessage(message) {
            if (message !== dispatcher.message) {
                dispatcher.message = message;
            }
        }
        var progress = {
            phase: 'unconfirmed',
            status: 'incomplete',
            message: 'location required',
            errors: [],
        };

        function setProgress(new_progress) {
            if (new_progress.phase !== undefined) {
                setProgressPhase(new_progress.phase);
            }
            if (new_progress.status !== undefined) {
                setProgressStatus(new_progress.status);
            }
            if (new_progress.message !== undefined) {
                setProgressMessage(new_progress.message);
            }
            if (new_progress.errors !== undefined) {
                setProgressErrors(new_progress.errors);
            }
        }

        function getProgressPhase() {
            return progress.phase;
        }

        function setProgressPhase(new_phase) {
            if (new_phase === progress.phase) {
                return self;
            }
            progress.phase = new_phase;
            trigger('updateProgressPhase', progress.phase);
            return self;
        }

        function isConfirmable() {
            return !!(customer && location && method && (method !== 'delivery' || address) && (method !== 'delivery' || isMeetingDeliveryMinimumProductsTotal()) && products.getQuantity() && payment.method);
        }

        function confirm() {
            if (!isConfirmable()) {
                throw new Error('Cannot confirm order, ' + getProgressMessage());
            }
            setProgressPhase('confirming');
            resetProgressMessage();
            return self;
        }

        function cancelConfirmation() {
            if (progress.phase === 'confirming') {
                if (payment_cancellation_cooldown.shouldPerform()) {
                    payment_cancellation_cooldown.startAndUnconfirmWhenFinished();
                    return self;
                } else {
                    return setProgressPhase('unconfirmed');
                }
            }
            return self;
        }
        var payment_cancellation_cooldown = (function() {
            var INITIAL_DURATION = 0,
                INCREASED_DURATION_THRESHOLD = 1000 * 6,
                duration = 0,
                is_in_progress = false,
                timeout = null;

            function getIncreasedDuration() {
                var duration;
                switch (payment.processor) {
                    case 'Paystation3Party':
                        duration = 1000 * 20;
                        break;
                    case 'Mobi2GoPayments':
                    case 'BraintreeVZero':
                        duration = 1000 * 15;
                        break;
                    case 'PaymentExpressPxPay':
                        duration = 1000 * 35;
                        break;
                    default:
                        duration = 1000 * 30;
                }
                return duration;
            }

            function getDuration() {
                if (Mobi2Go.app.base_url !== 'https://www.mobi2go.com') {
                    return 600;
                }
                return duration;
            }

            function increaseDuration() {
                duration = getIncreasedDuration();
            }

            function resetDuration() {
                duration = INITIAL_DURATION;
            }

            function shouldPerform() {
                return progress.phase === 'confirming' && payment.method === 'online' && payment.processor && payment.processor.form_type !== 'direct';
            }

            function startAndUnconfirmWhenFinished() {
                if (!isInProgress()) {
                    is_in_progress = true;
                    timeout = setTimeout(finish, getDuration());
                    trigger('startedPaymentCancellationCooldown');
                }
            }

            function finish() {
                if (isInProgress()) {
                    is_in_progress = false;
                    clearTimeout(timeout);
                    if (progress.phase === 'confirming') {
                        setProgressPhase('unconfirmed');
                    }
                    trigger('finishedPaymentCancellationCooldown');
                }
            }

            function cancel() {
                is_in_progress = false;
                clearTimeout(timeout);
            }

            function isInProgress() {
                return is_in_progress;
            }

            function onProgressPhaseUpdate(phase) {
                clearTimeout(onProgressPhaseUpdate.timeout);
                if (phase === 'confirming') {
                    onProgressPhaseUpdate.timeout = setTimeout(increaseDuration, INCREASED_DURATION_THRESHOLD);
                } else {
                    resetDuration();
                }
            }
            bind('updateProgressPhase', onProgressPhaseUpdate);
            return {
                getDuration: getDuration,
                shouldPerform: shouldPerform,
                isInProgress: isInProgress,
                startAndUnconfirmWhenFinished: startAndUnconfirmWhenFinished,
                finish: finish,
                cancel: cancel
            };
        }());

        function getProgressStatus() {
            return progress.status;
        }

        function setProgressStatus(new_status) {
            if (new_status === progress.status) {
                return self;
            }
            progress.status = new_status;
            trigger('updateProgressStatus', progress.status);
            return self;
        }

        function getUnconfirmedProgressMessage() {
            if (!location) {
                return 'location required';
            }
            if (!customer) {
                return 'customer required';
            }
            if (!method) {
                return 'method required';
            }
            if (method === 'delivery' && !address) {
                return 'address required';
            }
            if (!products.getQuantity()) {
                return 'product required';
            }
            if (method === 'delivery' && !isMeetingDeliveryMinimumProductsTotal()) {
                return 'delivery minimum not met';
            }
            if (!payment.method) {
                return 'payment method required';
            }
            return 'ready to confirm';
        }

        function updateProgressStatus() {
            if (progress.phase === 'unconfirmed') {
                setProgressStatus(isConfirmable() ? 'complete' : 'incomplete');
                setProgressMessage(getUnconfirmedProgressMessage());
            }
        }

        function getProgressMessage() {
            return progress.message;
        }

        function setProgressMessage(new_message) {
            var is_updated = new_message !== progress.message;
            progress.message = new_message;
            if (is_updated) {
                trigger('updateProgressMessage', progress.message);
            }
            return self;
        }

        function resetProgressMessage() {
            setProgressMessage('');
        }

        function getProgressError() {
            if (progress.errors.length) {
                return progress.errors[progress.errors.length - 1].message;
            }
            return null;
        }

        function setProgressErrors(errors) {
            if (!_.isEqual(errors, progress.errors)) {
                progress.errors = errors;
                if (errors.length) {
                    var last_error = errors[errors.length - 1];
                    trigger('updateProgressError', last_error.message);
                }
            }
        }

        function save(callback) {
            if (!id && !location && !method && !comment) {
                return self;
            }
            if (_.isFunction(callback)) {
                once('syncSuccess', callback);
            }
            serverRequest('POST');
            return self;
        }

        function load(callback) {
            if (!id) {
                return self;
            }
            serverRequest('GET');
            if (_.isFunction(callback)) {
                once('syncSuccess', callback);
            }
            return self;
        }

        function serverRequest(type) {
            var request_ticker = 0,
                request_delay = 750,
                is_server_request_pending = false,
                server_request_pending_payload,
                isPendingRequestProgressPhaseUnconfirmed = function() {
                    return server_request_pending_payload && server_request_pending_payload.progress && server_request_pending_payload.progress.phase && server_request_pending_payload.progress.phase === 'unconfirmed';
                },
                debouncedRequest = _.debounce(function(type) {
                    var request_id = ++request_ticker;
                    var endpoint = [
                        'orders'
                    ];
                    var payload = {};
                    type = type || 'GET';
                    if (id) {
                        endpoint.push(id);
                        if (type === 'POST') {
                            type = 'PUT';
                        }
                    }
                    if (type !== 'GET') {
                        payload = toApiJson();
                    }
                    trigger('syncRequest', payload);
                    is_server_request_pending = true;
                    server_request_pending_payload = payload;
                    Mobi2Go.app.serverRequest({
                        api_version: 1,
                        endpoint: endpoint,
                        type: type,
                        data: payload,
                        complete: function() {
                            if (request_id === request_ticker) {
                                is_server_request_pending = false;
                            }
                        },
                        success: function(data) {
                            if (request_id === request_ticker) {
                                is_server_request_pending = false;
                            }
                            if (request_id !== request_ticker) {
                                trigger('syncAbort', 'request superceded');
                                return;
                            }
                            set(data);
                            trigger('syncSuccess', data);
                        },
                        error: handleServerError
                    });
                }, request_delay, false);
            serverRequest = function(type) {
                if (is_server_request_pending && !isPendingRequestProgressPhaseUnconfirmed() && getProgressPhase() === 'confirming') {
                    return;
                }
                request_ticker++;
                debouncedRequest(type);
            };
            serverRequest(type);
        }

        function toApiJson() {
            var customer_data = null;
            if (customer) {
                customer_data = customer.get();
                if (customer.isPasswordProvided() && progress.phase === 'confirming' && payment.card_token_id) {
                    customer_data.password = customer.getPassword();
                }
            }
            return {
                'customer': customer_data,
                'address': address ? address.get() : null,
                'location': location ? {
                        'id': location.id,
                        'name': location.name
                    } :
                    null,
                'method': method,
                'expected_at': expected_at ? expected_at.format() : null,
                'products': products.toJson(),
                'tip': tip.toFloat(),
                'payment': {
                    'method': payment.method,
                    'card_token_id': payment.card_token_id,
                    'card_token_saving_enabled': payment.card_token_saving_enabled
                },
                'comment': comment,
                'voucher': {
                    'code': voucher.code
                },
                'progress': {
                    'phase': progress.phase
                },
                'latitude': latitude,
                'longitude': longitude,
                'platform': Mobi2Go.app.getPlatform(),
                'storefront_url': window.location.href
            };
        }

        function handleServerError(error) {
            if (error.status === 401) {
                setId(null);
                if (getProgressPhase() === 'confirmed') {
                    finish();
                }
                return true;
            }
            return false;
        }

        function reset(preserve_id) {
            is_resetting = true;
            trigger('resetting');
            set({
                id: preserve_id ? id : null,
                location: null,
                method: null,
                expected_at: null,
                products: [],
                comment: '',
                voucher: {
                    code: '',
                    voucher_applied: null,
                    error_message: ''
                },
                delivery_fee: 0,
                discounts: [],
                discounts_total: 0,
                payment: {
                    method: null,
                    status: 'method required',
                    processor: null,
                    card_token_id: null,
                    card_token_saving_enabled: false,
                    processor_transaction: {
                        status: 'unconfirmed',
                        message: 'transaction uninitated',
                        is_card_tokenisation_available: false
                    }
                },
                progress: {
                    phase: 'unconfirmed',
                    status: 'incomplete',
                    message: 'location required'
                },
                surcharge: 0,
                tip: 0,
                total: 0
            });
            payment_cancellation_cooldown.cancel();
            is_resetting = false;
            trigger('reset');
            return self;
        }

        function finish() {
            var preserve_location = location,
                preserve_method = method,
                preserve_address = address;
            reset();
            set({
                location: preserve_location,
                method: preserve_method
            });
            if (preserve_address && preserve_method === 'delivery') {
                setAddress(preserve_address);
            }
        }

        function startLoadInterval() {
            clearTimeout(startLoadInterval.interval);
            startLoadInterval.interval = setInterval(load, 20000);
        }

        function log(level, message, context) {
            Mobi2Go.app.serverRequest({
                api_version: 1,
                endpoint: [
                    'orders',
                    id,
                    'log'
                ],
                type: 'POST',
                data: {
                    level: level,
                    message: message,
                    context: context,
                }
            });
        }
        bind({
            updateCustomer: updateAvailableAddresses,
            updateLocation: function() {
                updateMenu();
                updateAvailableMethods();
                updateAvailableDates();
                updateAvailableDeliveryAreas();
                updateAvailableAddresses();
                updateAvailablePaymentMethods();
                updateOutOfStocks();
            },
            updateMethod: function() {
                updateAvailableAddresses();
                updateAvailableDates();
                updateAvailableDeliveryAreas();
                updateAvailablePaymentMethods();
            },
            updateMenu: switchOrRemoveProductsNotInLocationMenu,
            updateOutOfStocks: removeOutOfStockProducts,
            updateProductsQuantity: function() {
                removeOutOfStockProducts();
                switchOrRemoveProductsNotInLocationMenu();
            },
            updateExpectedAt: function() {
                updateAvailableTimes();
                updateExpectedInString();
                updateMinutesToClosing();
            },
            updateProgressPhase: function(phase) {
                if (phase === 'confirmed') {
                    payment_cancellation_cooldown.cancel();
                }
            }
        });
        bind({
            updateProductsTotal: calculateTotal,
            updateDeliveryFee: calculateTotal,
            updateTip: calculateTotal,
            updateDiscountsTotal: calculateTotal
        });
        bind({
            updateCustomer: updateProgressStatus,
            updateLocation: updateProgressStatus,
            updateAddress: updateProgressStatus,
            updateMethod: updateProgressStatus,
            updateProductsQuantity: updateProgressStatus,
            updateProductsTotal: updateProgressStatus,
            updatePaymentMethod: updateProgressStatus
        });
        bind({
            updateCustomer: save,
            updateAddress: save,
            updateLocation: save,
            updateMethod: save,
            updateExpectedAt: save,
            addProduct: save,
            removeProduct: save,
            updateVoucherCode: save,
            updatePaymentMethod: save,
            updateTotal: save,
            updateProgressPhase: save
        });
        return self = {
            get: get,
            set: set,
            apply: apply,
            getId: function() {
                return id;
            },
            getCustomer: function() {
                return customer;
            },
            setCustomer: setCustomer,
            getLocation: function() {
                return location;
            },
            setLocation: setLocation,
            setLocationById: setLocationById,
            setLocationByName: setLocationByName,
            getSalesTax: getSalesTax,
            getMenu: getMenu,
            getMenuTier: getMenuTier,
            updateMenu: updateMenu,
            getAddress: function() {
                return address;
            },
            setAddress: setAddress,
            setAddressAfterCustomerSet: setAddressAfterCustomerSet,
            setAddressById: setAddressById,
            getAvailableAddresses: getAvailableAddresses,
            getAvailableDeliveryAreas: getAvailableDeliveryAreas,
            getMethod: function() {
                return method;
            },
            setMethod: setMethod,
            getAvailableMethods: getAvailableMethods,
            getDeliveryFee: function() {
                return delivery_fee;
            },
            getDeliveryMinimumTotal: getDeliveryMinimumTotal,
            isMeetingDeliveryMinimumProductsTotal: isMeetingDeliveryMinimumProductsTotal,
            getExpectedAt: function() {
                return expected_at;
            },
            setExpectedAt: setExpectedAt,
            getAvailableDates: getAvailableDates,
            getAvailableTimes: getAvailableTimes,
            getAsapExpectedTime: getAsapExpectedTime,
            isScheduled: isScheduled,
            isExpectedAsap: isExpectedAsap,
            isExpectedToday: isExpectedToday,
            isExpectedTomorrow: isExpectedTomorrow,
            getExpectedInString: getExpectedInString,
            getMinutesToClosing: getMinutesToClosing,
            getProducts: function() {
                return products.get();
            },
            addProduct: addProduct,
            removeProduct: removeProduct,
            containsProduct: containsProduct,
            isProductInStock: isProductInStock,
            getUnavailableProductsForMenu: getUnavailableProductsForMenu,
            getOutOfStocks: getOutOfStocks,
            getProductsTotal: getProductsTotal,
            getProductsQuantity: getProductsQuantity,
            getOutOfStockProductsForLocation: getOutOfStockProductsForLocation,
            getUnavailableAndOutOfStockProductsForLocation: getUnavailableAndOutOfStockProductsForLocation,
            getPayment: function() {
                return payment;
            },
            getPaymentMethod: function() {
                return payment.method;
            },
            setPaymentMethod: setPaymentMethod,
            getAvailablePaymentMethods: getAvailablePaymentMethods,
            isPaymentMethodAvailable: function(payment_method) {
                return _.contains(getAvailablePaymentMethods(), payment_method);
            },
            getPaymentProcessor: function() {
                return payment.processor;
            },
            isPasswordRequiredForPaymentToken: isPasswordRequiredForPaymentToken,
            isPasswordProvided: isPasswordProvided,
            providePassword: providePassword,
            isPaymentCardTokenisationAvailable: isPaymentCardTokenisationAvailable,
            getPaymentCardTokenSavingEnabled: getPaymentCardTokenSavingEnabled,
            setPaymentCardTokenSavingEnabled: setPaymentCardTokenSavingEnabled,
            getAvailablePaymentCardTokens: getAvailablePaymentCardTokens,
            getPaymentCardToken: getPaymentCardToken,
            setPaymentCardToken: setPaymentCardToken,
            setPaymentCardTokenById: setPaymentCardTokenById,
            getVoucher: function() {
                return voucher;
            },
            getVoucherCode: function() {
                return voucher.code;
            },
            setVoucherCode: setVoucherCode,
            getVoucherApplied: function() {
                return voucher.voucher_applied;
            },
            getVoucherErrorMessage: function() {
                return voucher.error_message;
            },
            getComment: function() {
                return comment;
            },
            setComment: setComment,
            getDiscounts: function() {
                return discounts;
            },
            getDiscountsTotal: function() {
                return discounts_total;
            },
            getSurcharge: function() {
                return surcharge;
            },
            getTip: function() {
                return tip;
            },
            setTip: setTip,
            getSalesTaxTotal: getSalesTaxTotal,
            getTotal: function() {
                return total;
            },
            getProgressPhase: getProgressPhase,
            getProgressStatus: getProgressStatus,
            getProgressMessage: getProgressMessage,
            resetProgressMessage: resetProgressMessage,
            getProgressError: getProgressError,
            isConfirmable: isConfirmable,
            confirm: confirm,
            cancelConfirmation: cancelConfirmation,
            getPaymentCancellationCooldownDuration: payment_cancellation_cooldown.getDuration,
            _shouldPerformPaymentCancellationCooldown: payment_cancellation_cooldown.shouldPerform,
            _cancelPaymentCancellationCooldown: payment_cancellation_cooldown.cancel,
            _finishPaymentCancellationCooldown: payment_cancellation_cooldown.finish,
            _isPaymentCancellationCooldownInProgress: payment_cancellation_cooldown.isInProgress,
            finish: finish,
            log: log,
            save: save,
            load: load,
            isResetting: function() {
                return is_resetting;
            },
            reset: reset,
            bind: bind,
            trigger: trigger,
            unbind: unbind,
            once: once,
            setCustomMenuSelector: function(fn) {
                if (!_.isFunction(fn)) {
                    throw new TypeError('setCustomerMenuSelector must be provided with a function');
                }
                customMenuSelector = fn;
            },
            setCustomAvailableTimesFilter: function(fn) {
                if (!_.isFunction(fn)) {
                    throw new TypeError('setCustomAvailableTimesFilter must be provided with a function');
                }
                customAvailableTimesFilter = fn;
            },
            createInstance: function(id) {
                return Order(id);
            }
        };
    };
}(Mobi2Go, this._ || exports._, this));
(function(Mobi2Go, _, moment) {
    'use strict';
    Mobi2Go._class = Mobi2Go._class || {};
    var mixinEvents = Mobi2Go.app.mixinEvents,
        Price = Mobi2Go._class.Common.Price,
        DATE_FORMAT = Mobi2Go.app.DATE_FORMAT,
        DAYS = Mobi2Go.app.DAYS,
        PROPERTIES_TO_LOAD = [
            'address',
            'online',
            'offline_message',
            'customer_message_html',
            'order_methods',
            'opening_hours',
            'wait_times',
            'current_time',
            'accept_orders_until_closed',
            'delivery_areas',
            'delivery_minimum_order_products_total',
            'payment_methods',
            'menu',
            'status',
            'offline_message',
            'out_of_stocks',
            'trading_name',
            'sales_tax',
            'tax_number',
            'is_storefront_locked_out'
        ];
    var Location = Mobi2Go._class.Location = function(data) {
        if (!(this instanceof Mobi2Go._class.Location)) {
            return new Mobi2Go._class.Location(data);
        }
        this.init(data);
    };
    _.extend(Location.prototype, {
        init: function(data) {
            var that = this;
            this.mute = true;
            mixinEvents('Location#' + data.id, this);
            this.set(data);
            this._has_loaded_recently = false;
            this.distance_to_customer = null;
            this.distance_to_customer_formatted = null;
            Mobi2Go.bind('MapsService', 'coordinatesAvailable', _.bind(this.setDistanceFromPoint, this));
        },
        get: function() {
            return _.pick(this, [
                'id',
                'name'
            ]);
        },
        setDistanceFromPoint: function(coordinates) {
            this.distance_to_customer = Math.round(Mobi2Go.MapsService.getDistanceBetweenPoints(coordinates, this.address) * 100) / 100;
            if (this.distance_to_customer < 1) {
                this.distance_to_customer_formatted = (this.distance_to_customer * 1000) + 'm';
            } else if (this.distance_to_customer < 10) {
                this.distance_to_customer_formatted = (Math.round(this.distance_to_customer * 10) / 10) + 'km';
            } else {
                this.distance_to_customer_formatted = Math.round(this.distance_to_customer) + 'km';
            }
        },
        set: function(data) {
            if (data.out_of_stocks && this.out_of_stocks !== undefined) {
                if (!_.isEqual(data.out_of_stocks, this.out_of_stocks)) {
                    this.out_of_stocks = data.out_of_stocks;
                    this.trigger('updateOutOfStocks', this.out_of_stocks);
                }
            }
            _.extend(this, data);
            if (data.delivery_minimum !== undefined) {
                this.delivery_minimum = new Price(data.delivery_minimum);
            }
            if (data.delivery_areas !== undefined) {
                this._delivery_suburb_ids = _.pluck(data.delivery_areas.suburbs, 'suburb_id');
            }
            if (data.current_time !== undefined) {
                this.setCurrentTime(data.current_time);
            }
            if (data.opening_hours !== undefined) {
                setAbbrOpeningHours.call(this, data.opening_hours);
            }
            return this;
        },
        setCurrentTime: function(time) {
            this.current_time = moment.parseZone(time);
            this.current_time.today = this.current_time.format(DATE_FORMAT);
            this.current_time.tomorrow = this.current_time.clone().add(1, 'days').format(DATE_FORMAT);
            this._available_order_dates = {};
            this._available_order_times = {};
            startAutoUpdatingCurrentTime(this);
            this.trigger('updateCurrentTime', this.current_time);
        },
        load: function(callback) {
            var that = this;
            if (!this.hasLoadedRecently()) {
                Mobi2Go.app.serverRequest({
                    endpoint: [
                        'locations',
                        this.id
                    ],
                    data: {
                        fields: PROPERTIES_TO_LOAD.join(',')
                    },
                    api_version: 1,
                    success: function(data) {
                        that.set(data).trigger('load');
                        that._has_loaded_recently = true;
                        _.isFunction(callback) && callback();
                        _.delay(function() {
                            that._has_loaded_recently = false;
                        }, 48000);
                    }
                });
            } else {
                _.isFunction(callback) && _.defer(callback);
            }
        },
        hasLoadedRecently: function() {
            return this._has_loaded_recently;
        },
        startAutoLoading: function() {
            var load = _.bind(this.load, this);
            this.load_timeout = setInterval(load, 50000);
        },
        stopAutoLoading: function() {
            clearTimeout(this.load_timeout);
        },
        isProductInStock: function(product) {
            if (!this.out_of_stocks === undefined || !this.out_of_stocks.products === undefined) {
                return false;
            }
            return !_.find(this.out_of_stocks.products, function(oos_product) {
                if (product.id) {
                    return product.id === oos_product.id;
                }
                if (product.name) {
                    return product.name === oos_product.name;
                }
                return false;
            });
        },
        isActive: function() {
            return this.status === 'active';
        },
        isInactive: function() {
            return this.status === 'inactive';
        },
        isHidden: function() {
            return this.status === 'hidden';
        },
        isLockedOut: function() {
            return this.is_storefront_locked_out;
        },
        isOpen: function(datetime, order_method) {
            if (!order_method) {
                var available_order_methods = this.getAvailableOrderMethods();
                var is_open = false;
                _.each(available_order_methods, function(method) {
                    if (is_open || this.isOpenForMethod(method, datetime)) {
                        is_open = true;
                    }
                }, this);
                return is_open;
            } else {
                return this.isOpenForMethod(order_method, datetime);
            }
        },
        isOpenForMethod: function(order_method, datetime) {
            datetime = datetime ? moment(datetime) : this.current_time;
            if (this._is_open) {
                if (this._is_open[order_method + (+datetime)]) {
                    return this._is_open[order_method + (+datetime)];
                }
            } else {
                this._is_open = {};
            }
            var opening_hours = this.getOpeningHoursForDate(order_method, datetime);
            var is_open = false;
            if (!opening_hours.is_open) {
                is_open = false;
            } else {
                is_open = datetime.isAfter(opening_hours.opening_time) && datetime.isBefore(opening_hours.closing_time);
            }
            return this._is_open[order_method + (+datetime)] = is_open;
        },
        getClosingTimeSentence: function() {
            var current_time = this.current_time.clone();
            if (this.isOpen()) {
                var available_order_methods = this.getAvailableOrderMethods();
                for (var i in available_order_methods) {
                    var order_method = available_order_methods[i];
                    if (this.isOpen(null, order_method)) {
                        var opening_hours = this.getOpeningHoursForDate(order_method);
                        var closing_time = opening_hours.closing_time;
                        return 'Closes ' + closing_time.format('h:mma');
                    }
                }
            } else {
                var available_order_methods = this.getAvailableOrderMethods();
                for (var i in available_order_methods) {
                    var order_method = available_order_methods[i];
                    if (!this.isOpen(null, order_method)) {
                        var next_available_time = this.getAsapOrderDatetime(order_method);
                        if (next_available_time) {
                            next_available_time = next_available_time.clone().subtract(this.wait_times[order_method], 'minutes');
                            return 'Opens ' + next_available_time.format('h:mma');
                        }
                        var available_order_dates = this.getAvailableOrderDates(order_method, 7);
                        var opening_hours
                        for (var i in available_order_dates) {
                            var format = 'h:mma dddd';
                            var is_tomorrow = false;
                            if (current_time.clone().add(1, 'd').isSame(available_order_dates[i], 'day')) {
                                format = 'h:mma';
                                is_tomorrow = true;
                            }
                            opening_hours = this.getOpeningHoursForDate(order_method, available_order_dates[i]);
                            if (opening_hours.is_open) {
                                return 'Opens ' + opening_hours.opening_time.format(format) + (is_tomorrow ? ' tomorrow' : '');
                            }
                        }
                        return '';
                    }
                }
            }
        },
        getAvailableOrderDates: function(order_method, num_future_dates) {
            if (!order_method) {
                return [];
            }
            var dates = [],
                i,
                opening_hours,
                date,
                num_dates = num_future_dates || this.scheduled_order_dates_limit || 90,
                date_i,
                continues = 0;
            if (this._available_order_dates[order_method] && this._available_order_dates[order_method][num_dates]) {
                return this._available_order_dates[order_method][num_dates];
            }
            date_i = this.current_time.clone().startOf('day');
            for (i = 0; i < num_dates; i++) {
                opening_hours = this.getOpeningHoursForDate(order_method, date_i);
                date = date_i.clone();
                date_i.add(24, 'hours');
                var available_times = this.getAvailableOrderTimes(order_method, date);
                if (!opening_hours.is_open) {
                    continue;
                }
                if (available_times.length === 0) {
                    if (continues++ < 7) {
                        i--;
                    }
                    continue;
                }
                date.date_value = date.format(DATE_FORMAT);
                switch (date.date_value) {
                    case this.current_time.today:
                        if (available_times.length && available_times[0].hour() >= 17) {
                            date.display_value = 'Tonight';
                        } else {
                            date.display_value = 'Today';
                        }
                        break;
                    case this.current_time.tomorrow:
                        date.display_value = 'Tomorrow';
                        break;
                    default:
                        date.display_value = date.format('ddd, Do MMM');
                }
                dates.push(date);
            }
            if (!this._available_order_dates[order_method]) {
                this._available_order_dates[order_method] = {};
            }
            this._available_order_dates[order_method][num_dates] = dates;
            return dates;
        },
        getAvailableOrderTimes: function(order_method, date) {
            var times = [],
                opening_hours,
                interval = 5,
                rounding = this.order_expected_time_minute_rounding,
                time_i,
                wait_time = this.wait_times[order_method];
            if (!order_method) {
                throw new TypeError('order method required');
            }
            if (!moment.isMoment(date)) {
                date = date || this.current_time.today;
                date = this.momentWithTimezone(date);
            }
            if (this._available_order_times[order_method] && this._available_order_times[order_method][+date]) {
                return this._available_order_times[order_method][+date];
            }
            opening_hours = this.getOpeningHoursForDate(order_method, date);
            if (!opening_hours.is_open) {
                return times;
            }
            if (date.format(DATE_FORMAT) === this.current_time.today && this.current_time > opening_hours.opening_time) {
                time_i = this.current_time.clone();
            } else {
                time_i = opening_hours.opening_time;
            }
            time_i.add(wait_time, 'minutes').seconds(0);
            time_i = roundMinutes(time_i, rounding);
            if (this.accept_orders_until_closed) {
                opening_hours.closing_time.add(wait_time, 'minutes');
            }
            while (time_i <= opening_hours.closing_time) {
                times.push(this.toOrderDatetime(time_i));
                if (times.length === 1 && rounding !== 5) {
                    time_i = roundMinutes(time_i, 5);
                }
                time_i.add(interval, 'minutes');
            }
            if (!this._available_order_times[order_method]) {
                this._available_order_times[order_method] = {};
            }
            this._available_order_times[order_method][+date] = times;
            return times;
        },
        getAvailableOrderTimesAsStrings: function(order_method, date) {
            return _.map(this.getAvailableOrderTimes(order_method, date).slice(0, 5), function(time) {
                return time.format();
            });
        },
        getAsapOrderDatetime: function(order_method) {
            var current_time = this.current_time.clone();
            var available_times = this.getAvailableOrderTimes(order_method, current_time);
            if (available_times.length) {
                return available_times[0];
            }
            var x = 0;
            while (available_times.length === 0 && x < 30) {
                available_times = this.getAvailableOrderTimes(order_method, current_time.add(1, 'day'));
                x++;
            }
            if (available_times.length) {
                return available_times[0];
            }
            return undefined;
        },
        isAsapOrderDatetime: function(order_method, datetime) {
            var asap_time = this.getAsapOrderDatetime(order_method);
            if (!moment.isMoment(datetime)) {
                datetime = moment.parseZone(datetime);
            }
            return asap_time && asap_time.isSame(datetime);
        },
        getMinutesToAsapOrderDatetime: function(order_method) {
            var time = this.getAsapOrderDatetime(order_method);
            return time ? time.diff(this.current_time, 'minutes') : 0;
        },
        getFinalOrderTime: function(order_method, date) {
            return _.last(this.getAvailableOrderTimes(order_method, date));
        },
        getSecondsToFinalOrderTime: function(order_method, date) {
            var final_time = this.getFinalOrderTime(order_method, date);
            return final_time ? final_time.diff(this.current_time, 'seconds') : 0;
        },
        getSecondsToFinalOrderTimeCutOff: function(order_method, date) {
            return this.getSecondsToFinalOrderTime(order_method, date) - (this.wait_times[order_method] * 60);
        },
        getOpeningHoursForDate: function(order_method, date) {
            var opening_hours,
                day;
            if (!moment.isMoment(date)) {
                date = moment.parseZone(date);
            }
            day = date.format('dddd').toLowerCase();
            opening_hours = this.opening_hours[order_method][day];
            return {
                is_open: opening_hours.is_open,
                opening_time: date.clone().hours(opening_hours['open'].split(':')[0]).minutes(opening_hours['open'].split(':')[1]).seconds(0),
                closing_time: date.clone().hours(opening_hours['close'].split(':')[0]).minutes(opening_hours['close'].split(':')[1]).seconds(0)
            };
        },
        getAvailableOrderMethods: function() {
            var available_methods = [];
            if (this.order_methods.pickup) {
                available_methods.push('pickup');
            }
            if (this.order_methods.eatin) {
                available_methods.push('eatin');
            }
            if (this.order_methods.delivery) {
                available_methods.push('delivery');
            }
            return available_methods;
        },
        getAvailablePaymentMethods: function(order_method) {
            if (!order_method) return [];
            var available_methods = [];
            if ((order_method === 'pickup' || order_method === 'eatin') && this.payment_methods.offline_pickup) {
                available_methods.push('offline');
            } else if (order_method === 'delivery' && this.payment_methods.offline_delivery) {
                available_methods.push('offline');
            }
            if (this.payment_methods.online) {
                available_methods.push('online');
            }
            return available_methods;
        },
        filterAvailableAddresses: function(addresses) {
            if (addresses instanceof Mobi2Go._class.Common.Collection) {
                addresses = addresses.toArray();
            }
            return _.filter(addresses, _.bind(this.isAddressAvailable, this));
        },
        isAddressAvailable: function(address) {
            if (this.delivery.mode === 'map_polygons') {
                return this.isAddressInDeliveryMapPolygons(address);
            }
            if (this.delivery.mode === 'suburb_list') {
                return this.isAddressInDeliverySuburbList(address);
            }
        },
        isAddressInDeliverySuburbList: function(address) {
            if (this.delivery.suburb_list && this.delivery.suburb_list.areas) {
                for (var i in this.delivery.suburb_list.areas) {
                    var area = this.delivery.suburb_list.areas[i];
                    if ((address.suburb_id && address.suburb_id === area.suburb_id) || (address.suburb && address.suburb === area.suburb)) {
                        return true;
                    }
                }
            }
            return false;
        },
        isAddressInDeliveryMapPolygons: function(address) {
            if (!address.latitude || !address.longitude) {
                return false;
            }
            return this.isPointInDeliveryMapPolygons(address);
        },
        isPointInDeliveryMapPolygons: function(point) {
            if (!this.delivery.map_polygons || !this.delivery.map_polygons.features) {
                return false;
            }
            var features = this.delivery.map_polygons.features;
            var is_in_a_polygon = false;
            _.each(features, function(feature) {
                if (is_in_a_polygon || (feature.geometry.type !== 'Polygon' && feature.geometry.type !== 'Point')) {
                    return;
                }
                var maps_service = this.getMapsService();
                if (feature.geometry.type === 'Polygon') {
                    var polygon = feature.geometry.coordinates[0];
                    is_in_a_polygon = maps_service.isPointInPolygon(point, polygon);
                } else if (feature.geometry.type === 'Point') {
                    var zone_point = feature.geometry.coordinates;
                    var radius = feature.properties.radius || 0;
                    var metres_between_points = maps_service.getDistanceBetweenPoints(point, zone_point) * 1000;
                    is_in_a_polygon = metres_between_points <= radius;
                }
            }, this);
            return is_in_a_polygon;
        },
        toOrderDatetime: function(datetime) {
            if (moment.isMoment(datetime)) {
                datetime = datetime.clone();
            } else {
                datetime = moment.parseZone(datetime);
            }
            datetime.datetime_value = datetime.format();
            datetime.date_value = datetime.format(DATE_FORMAT);
            datetime.display_value = datetime.format('h:mma');
            return datetime;
        },
        getMenu: function() {
            if (Mobi2Go.Menu) {
                return Mobi2Go.Menu.getMenus().find({
                    id: this.menu.id
                });
            }
        },
        getDistanceFromPoint: function(point) {
            return this.getMapsService().getDistanceBetweenPoints(this.address, point);
        },
        getMapsService: function() {
            if (this.maps_service) {
                return this.maps_service;
            }
            return this.maps_service = new Mobi2Go._class.MapsService(this);
        },
        momentWithTimezone: function(date) {
            date = moment(date);
            return this.current_time.clone().set({
                year: date.get('year'),
                month: date.get('month'),
                date: date.get('date')
            });
        },
        getAddressString: function() {
            var string = '';
            var address = this.address;
            switch (address.type) {
                case 'residential':
                    {
                        string += address.getResidentialDisplayStreetNumberAndUnit();
                        break;
                    }
                case 'business':
                    {
                        string += address.name ? address.name + ', ' : '';
                        string += address.specific_number ? 'Level ' + address.specific_number + ', ' : '';
                        string += address.street_number ? address.street_number + ' ' : '';
                        break;
                    }
                case 'apartment':
                    {
                        string += address.name ? address.name + ', ' : '';
                        string += address.specific_number ? 'Apt. ' + address.specific_number + ', ' : '';
                        string += address.street_number ? address.street_number + ' ' : '';
                        break;
                    }
                case 'hotel':
                    {
                        string += address.specific_number ? 'Room ' + address.specific_number + ', ' : '';
                        string += address.name ? address.name + ', ' : '';
                        string += address.street_number ? address.street_number + ' ' : '';
                        break;
                    }
            }
            string += address.street_number || '';
            string += address.street_name ? ((address.street_number ? ' ' : '') + address.street_name) : '';
            string += address.suburb ? ', ' + address.suburb : '';
            if (address.city !== address.suburb) {
                string += address.city ? ', ' + address.city : '';
            }
            if (address.region !== address.city) {
                string += address.region ? ', ' + address.region : '';
            }
            return string;
        }
    });

    function setAbbrOpeningHours(opening_hours) {
        if (!opening_hours) return;
        var that = this;
        this.opening_hours = opening_hours;
        this.opening_hours_abbr = {};
        var order_methods = this.getAvailableOrderMethods(),
            oh = this.opening_hours;
        if (order_methods.length === 1 || (order_methods.length === 2 && _.isEqual(oh[order_methods[0]], oh[order_methods[1]])) || (order_methods.length === 3 && _.isEqual(oh[order_methods[0]], oh[order_methods[1]]) && _.isEqual(oh[order_methods[0]], oh[order_methods[2]]))) {
            this.opening_hours_abbr.all = formatWeekOpeningHours(this.opening_hours[order_methods[0]]);
        } else {
            _.each(order_methods, function(method) {
                that.opening_hours_abbr[method] = formatWeekOpeningHours(that.opening_hours[method]);
            });
        }
    }
    var UPDATE_INTERVAL = 1000 * 10;
    var current_time_intervals = {};

    function startAutoUpdatingCurrentTime(location) {
        clearTimeout(current_time_intervals[location.id]);
        current_time_intervals[location.id] = setInterval(function() {
            if (location.current_time) {
                var new_current_time = location.current_time.add(UPDATE_INTERVAL, 'ms');
                location.setCurrentTime(new_current_time);
            }
        }, UPDATE_INTERVAL);
    }

    function formatWeekOpeningHours(hours) {
        var display_days = [
                'Mon',
                'Tue',
                'Wed',
                'Thu',
                'Fri',
                'Sat',
                'Sun'
            ],
            lines = [],
            day,
            prev_day,
            i,
            l = -1;
        for (i = 0; i <= 6; i++) {
            day = DAYS[i];
            prev_day = DAYS[i - 1];
            if (_.isEqual(hours[day], hours[prev_day])) {
                lines[l][1] = display_days[i];
            } else {
                l++;
                lines[l] = [
                    display_days[i],
                    null,
                    formatDayOpeningHours(hours[day])
                ];
            }
        }
        l++;
        while (l--) lines[l] = lines[l][1] ? [
            lines[l][0] + '–' + lines[l][1],
            lines[l][2]
        ] : [
            lines[l][0],
            lines[l][2]
        ];
        return lines;
    }

    function formatDayOpeningHours(hours) {
        if (!hours['is_open'])
            return 'Closed';
        return Mobi2Go.helpers.AMPMise(hours['open']) + '–' +
            Mobi2Go.helpers.AMPMise(hours['close']);
    }

    function roundMinutes(moment, rounding) {
        var mod = moment.minutes() % rounding;
        if (mod) {
            moment.add(rounding - mod, 'minutes');
        }
        return moment;
    }
}(Mobi2Go, this._ || exports._, this.moment));
(function(Mobi2Go, _, moment) {
    'use strict';
    Mobi2Go._class = Mobi2Go._class || {};
    var serverRequest = Mobi2Go.app.serverRequest;
    var instance = -1;
    var password_to_verify = null;
    var VALID_PASSWORD_TTL = 1000 * 60 * 30;
    var Customer = Mobi2Go._class.Customer = function(properties) {
        if (!(this instanceof Customer)) {
            return new Customer(properties);
        }
        this.init(properties);
    };
    _.extend(Customer.prototype, {
        init: function(properties) {
            this.id = null;
            this.email = null;
            this.name = '';
            this.phone_number = '';
            this.loyalty_id = '';
            this.is_subscriber = false;
            this.addresses = Mobi2Go._class.Common.Collection([]);
            instance++;
            Mobi2Go.app.mixinEvents('CustomerInstance#' + instance, this);
            if (properties) {
                this.set(properties);
            }
        },
        get: function() {
            return _.pick(this, [
                'id',
                'email',
                'name',
                'phone_number',
                'is_subscriber'
            ]);
        },
        set: function(new_properties) {
            if (new_properties.id !== undefined) {
                this.id = new_properties.id;
            }
            if (new_properties.email !== undefined) {
                this.email = new_properties.email;
            }
            if (new_properties.name !== undefined) {
                this.setName(new_properties.name);
            }
            if (new_properties.phone_number !== undefined) {
                this.setPhoneNumber(new_properties.phone_number);
            }
            if (new_properties.loyalty_id !== undefined) {
                this.setLoyaltyId(new_properties.loyalty_id);
            }
            if (new_properties.is_subscriber !== undefined) {
                this.is_subscriber = !!new_properties.is_subscriber;
            }
            if (new_properties.addresses !== undefined) {
                this.setAddresses(new_properties.addresses);
            }
            if (new_properties.password !== undefined) {
                password_to_verify = new_properties.password;
                this.isPasswordProvided.is_valid = true;
            }
            return this;
        },
        setName: function(new_name) {
            new_name = sanitiseName(new_name).trim();
            if (!new_name) {
                throw new Error('Name cannot be blank');
            }
            this.name = new_name;
        },
        getFirstName: function() {
            return this.name.split(' ')[0];
        },
        getLastName: function() {
            var names = this.name.split(' ');
            return names[1] !== undefined ? names[1] : '';
        },
        getPassword: function() {
            return password_to_verify;
        },
        setPhoneNumber: function(new_phone_number) {
            if (new_phone_number.length < 5) {
                throw new Error('Phone number must be at least 5 characters long');
            }
            this.phone_number = sanitiseNumber(new_phone_number);
        },
        setLoyaltyId: function(loyalty_id) {
            this.loyalty_id = sanitiseName(loyalty_id).trim();
        },
        providePassword: function(pw, callback) {
            var that = this;
            password_to_verify = pw;
            clearTimeout(this.providePassword.timeout);
            this.providePassword.timeout = setTimeout(function() {
                password_to_verify = null;
                that.isPasswordProvided.is_valid = false;
            }, VALID_PASSWORD_TTL);
            this.isPasswordProvided.is_valid = false;
            this.validatePassword(callback);
        },
        validatePassword: function(callback) {
            var that = this;
            if (!_.isFunction(callback)) {
                callback = function() {};
            }
            if (password_to_verify === null) {
                _.defer(function() {
                    callback(false);
                });
                return;
            } else if (this.isPasswordProvided.is_valid) {
                _.defer(function() {
                    callback(true);
                });
                return;
            }
            serverRequest({
                api_version: 1,
                endpoint: [
                    'customers',
                    this.email,
                    'password',
                    'verify'
                ],
                type: 'POST',
                data: {
                    password: password_to_verify
                },
                complete: function(response) {
                    var is_valid = response.status === 200;
                    that.isPasswordProvided.is_valid = is_valid;
                    callback(is_valid);
                },
                error: function() {
                    return true;
                }
            });
        },
        isPasswordProvided: function() {
            return !!this.isPasswordProvided.is_valid;
        },
        update: function(properties, callback) {
            properties = _.pick(properties, 'name', 'phone_number', 'loyalty_id', 'is_subscriber');
            this.set(properties).save(callback);
            return this;
        },
        updatePassword: function(password, new_password, callback) {
            var that = this;
            serverRequest({
                api_version: 1,
                endpoint: [
                    'customers',
                    this.email,
                    'password'
                ],
                type: 'PUT',
                data: {
                    current_password: password,
                    new_password: new_password
                },
                success: function(response) {
                    if (response && response.message === 'password updated') {
                        password_to_verify = new_password;
                        that.isPasswordProvided.is_valid = true;
                        that.trigger('updatePassword');
                        _.isFunction(callback) && callback('success');
                    } else {
                        that.trigger('updatePasswordFail');
                        _.isFunction(callback) && callback('error');
                    }
                }
            });
            return this;
        },
        updateEmail: function(new_email, password, callback) {
            var that = this;

            function handleFailure(reason) {
                return function() {
                    that.trigger('updateEmailFail', reason);
                    _.isFunction(callback) && callback(reason);
                }
            }
            Mobi2Go.Customer.isEmailRegistered(new_email, function(is_email_registered) {
                if (is_email_registered) {
                    handleFailure('email in use')();
                    return;
                }
                serverRequest({
                    api_version: 1,
                    endpoint: [
                        'customers',
                        that.email,
                        'email'
                    ],
                    type: 'PUT',
                    data: {
                        email: new_email,
                        password: password
                    },
                    statusCode: {
                        401: handleFailure('incorrect password'),
                        400: handleFailure('email in use'),
                        200: function() {
                            that.email = new_email;
                            that.trigger('updateEmail', new_email);
                            _.isFunction(callback) && callback('success');
                        }
                    }
                });
            });
            return this;
        },
        save: function(callback) {
            var that = this;
            serverRequest({
                api_version: 1,
                endpoint: [
                    'customers',
                    this.email
                ],
                type: 'PUT',
                data: {
                    name: this.name,
                    phone_number: this.phone_number,
                    loyalty_id: this.loyalty_id,
                    is_subscriber: this.is_subscriber,
                    addresses: this.addresses.invoke('get')
                },
                success: function(response) {
                    that.set(response);
                    that.trigger('update');
                    _.isFunction(callback) && callback('success');
                }
            });
            return this;
        },
        getAddresses: function() {
            return this.addresses;
        },
        getAddressById: function(id) {
            return this.addresses.getById(id);
        },
        setAddresses: function(addresses) {
            addresses = _.map(addresses, function(properties) {
                return Mobi2Go._class.CustomerAddress(properties, this);
            }, this);
            this.addresses.set(addresses);
            return this;
        },
        createAddress: function(properties, callback) {
            var address = Mobi2Go._class.CustomerAddress(properties, this, callback);
            this.addresses.push(address);
            this.trigger('createAddress', address);
            this.trigger('updateAddresses', this.getAddresses());
            return address;
        },
        updateAddressById: function(id, properties, callback) {
            var that = this;
            var address = this.getAddressById(id);
            if (!address) {
                throw new Error('cannot update, unknown address id #' + id);
            }
            return address.set(properties).save(function() {
                _.isFunction(callback) && callback(address);
                that.trigger('updateAddresses', that.getAddresses());
            });
        },
        removeAddressById: function(id, callback) {
            var address = this.getAddressById(id);
            if (!address) {
                throw new Error('cannot remove, unknown address id #' + id);
            }
            this.removeAddress(address, callback);
        },
        removeAddress: function(address, callback) {
            if (!address.id) {
                return;
            }
            var that = this,
                id = address.id;
            this.addresses.set(this.addresses.reject({
                id: address.id
            }));
            this.trigger('removeAddress', address);
            this.trigger('updateAddresses', that.getAddresses());
            serverRequest({
                api_version: 1,
                endpoint: [
                    'customers',
                    this.email,
                    'addresses',
                    id
                ],
                type: 'DELETE',
                success: function(response) {
                    if (_.isFunction(callback)) {
                        callback(that.getAddresses());
                    }
                }
            });
        },
        removePaymentCardToken: function(token, callback) {
            return this.removePaymentCardTokenById(token.id, callback);
        },
        removePaymentCardTokenById: function(id, callback) {
            serverRequest({
                api_version: 1,
                endpoint: [
                    'customers',
                    this.email,
                    'payment_card_tokens',
                    id
                ],
                type: 'DELETE',
                success: callback
            });
        },
        getOrders: function(query, callback) {
            serverRequest({
                api_version: 1,
                endpoint: [
                    'customers',
                    this.email,
                    'orders'
                ],
                type: 'GET',
                data: query,
                success: callback
            });
            return this;
        }
    });

    function sanitiseName(string) {
        string = string + '';
        return string.replace(/[^A-Za-z0-9&'.\s]/g, '').substring(0, 50);
    }

    function sanitiseNumber(string) {
        string = string + '';
        return string.replace(/[^A-Za-z0-9-\s]/g, '').substring(0, 50);
    }
}(Mobi2Go, this._ || exports._, this.moment));
(function(Mobi2Go, _) {
    'use strict';
    Mobi2Go._class = Mobi2Go._class || {};
    var validator = Mobi2Go.helpers.validator;
    var Address = Mobi2Go._class.CustomerAddress = function(properties, customer, callback) {
        if (!(this instanceof Address)) {
            return new Address(properties, customer, callback);
        }
        this.init(properties, customer, callback);
    };
    _.extend(Address.prototype, {
        init: function(properties, customer, callback) {
            this.customer = customer;
            Mobi2Go.app.mixinEvents(_.uniqueId('CustomerAddress'), this);
            this.set(properties, callback);
        },
        set: function(properties, save_callback) {
            this.id = properties && +properties.id || this.id || null;
            this.type = properties && properties.type || 'residential';
            this.name = properties && properties.name || '';
            this.specific_number = properties && properties.specific_number || '';
            this.street_number = properties && properties.street_number || '';
            this.street_name = properties && properties.street_name || '';
            this.post_code = properties && properties.post_code || '';
            this.comment = properties && properties.comment || '';
            this.suburb = properties && properties.suburb || '';
            this.suburb_id = properties && properties.suburb_id || null;
            this.city = properties && properties.city || '';
            this.city_id = properties && properties.city_id || null;
            this.region = properties && properties.region || '';
            this.region_id = properties && properties.region_id || null;
            this.latitude = properties && +properties.latitude || null;
            this.longitude = properties && +properties.longitude || null;
            if (Mobi2Go.Customer.getPhoneNumber()) {
                this.phone_number = Mobi2Go.Customer.getPhoneNumber();
            }
            if (this.isValid() && save_callback) {
                this.save(save_callback);
            }
            this.trigger('update');
            return this;
        },
        update: function(properties) {
            this.set(_.extend(this.get(), properties));
            return this;
        },
        isValid: function() {
            return this.type !== undefined && this.street_name !== undefined && this.street_name !== '' && ((this.suburb !== undefined && this.suburb !== '') || this.suburb_id !== undefined);
        },
        isSaved: function() {
            return !!this.id;
        },
        get: function(options) {
            return _.pick(this, [
                'id',
                'type',
                'name',
                'specific_number',
                'street_number',
                'street_name',
                'suburb',
                'city',
                'region',
                'suburb_id',
                'city_id',
                'region_id',
                'phone_number',
                'post_code',
                'comment',
                'latitude',
                'longitude'
            ]);
        },
        save: function(callback) {
            var that = this,
                method = 'POST',
                endpoint = [
                    'customers',
                    this.customer.email,
                    'addresses'
                ];
            if (this.id && this.id !== 'new') {
                endpoint.push(this.id);
                method = 'PUT';
            }
            if (!this.type) {
                throw new Error('Address type required');
            }
            if (!this.suburb && !this.suburb_id) {
                throw new Error('suburb or suburb id required');
            }
            if (!this.street_name) {
                throw new Error('Invalid street name');
            }
            var payload = this.get();
            if (payload['city'] === '') {
                delete payload['city'];
            }
            if (payload['city_id'] === null) {
                delete payload['city_id'];
            }
            Mobi2Go.app.serverRequest({
                api_version: 1,
                endpoint: endpoint,
                type: method,
                data: payload,
                success: function(data) {
                    if (data.id !== undefined && data.id) {
                        that.set(data);
                    }
                    that.trigger('saved');
                    if (_.isFunction(callback)) {
                        callback(that);
                    }
                }
            });
            return this;
        },
        getPredictionQueryString: function() {
            var line = '';
            if (this.specific_number && !this.street_number && !this.name) {
                line += this.specific_number + ' ';
            }
            if (this.name && this.type !== 'residential') {
                line += this.name + ' ';
            }
            if (this.street_number) {
                line += this.street_number + ' ';
            }
            if (this.street_name) {
                line += this.street_name + ' ';
            }
            if (this.suburb) {
                line += this.suburb + ' ';
            }
            return line;
        },
        mapGmapsPlaceDetailFields: function(details, prediction_description) {
            var properties = {};
            if (!details) {
                return properties;
            }
            if (details.geometry) {
                properties.latitude = details.geometry.location.lat();
                properties.longitude = details.geometry.location.lng();
            }
            var map = {
                'name': [
                    'premise'
                ],
                'street_number': [
                    'street_number'
                ],
                'street_name': [
                    'route'
                ],
                'post_code': [
                    'postal_code'
                ],
                'suburb': [
                    'sublocality_level_1',
                    'locality',
                    'neighborhood'
                ],
                'city': [
                    'administrative_area_level_2',
                    'administrative_area_level_1',
                    'locality'
                ],
                'region': [
                    'administrative_area_level_1'
                ],
                'country': [
                    'country'
                ]
            };
            if (_.intersection(details.types, [
                    'lodging'
                ]).length) {
                properties.type = 'hotel';
                if (details.name !== undefined) {
                    properties.name = details.name;
                }
            } else if (_.intersection(details.types, [
                    'point_of_interest',
                    'restaurant',
                    'meal_takeaway',
                    'meal_delivery',
                    'premise'
                ]).length) {
                properties.type = 'business';
                if (details.name !== undefined) {
                    properties.name = details.name;
                }
            } else {
                properties.type = 'residential';
                properties.name = '';
            }
            _.each(details.address_components, function(component) {
                _.each(map, function(types, field) {
                    if (properties[field] === undefined) {
                        _.each(types, function(type) {
                            if (_.include(component.types, type)) {
                                properties[field] = component.long_name
                            }
                        });
                    }
                });
            });
            if (properties.region === undefined) {
                properties.region = properties.country;
            }
            if (properties.city === undefined) {
                properties.city = properties.region;
            }
            if (properties.suburb === undefined) {
                properties.suburb = properties.city;
            }
            if (prediction_description) {
                var address_parts = prediction_description.split(' ');
                var search_street_number = address_parts[0];
                if (search_street_number !== properties.street_number) {
                    var delimiters = [
                        '/',
                        '-'
                    ];
                    _.each(delimiters, function(delimiter) {
                        if (search_street_number.split(delimiter).length === 2) {
                            properties.specific_number = search_street_number.split(delimiter)[0];
                        }
                    });
                    if (address_parts[1] === properties.street_number) {
                        properties.specific_number = search_street_number;
                    }
                    if (!properties.specific_number) {
                        var last_letter = search_street_number[search_street_number.length - 1];
                        if (/[A-Fa-f]/.test(last_letter)) {
                            properties.specific_number = last_letter;
                        }
                    }
                }
            }
            return properties;
        },
        setFromGmapsPlaceDetail: function(detail, prediction_description) {
            return this.set(this.mapGmapsPlaceDetailFields(detail, prediction_description));
        },
        getResidentialDisplayStreetNumberAndUnit: function() {
            var string = '';
            if (this.specific_number && this.street_number) {
                if (/[A-Za-z]/.test(this.specific_number) && this.specific_number.length === 1) {
                    string += this.street_number + this.specific_number + ' ';
                } else if (this.specific_number.length <= 3) {
                    string += this.specific_number + '/' + this.street_number + ' ';
                } else {
                    string += this.specific_number + ', ' + this.street_number + ' ';
                }
            } else if (this.street_number) {
                string += this.street_number + ' ';
            }
            return string;
        }
    });
    Address.prototype.toString = function() {
        var string = '';
        switch (this.type) {
            case 'residential':
                {
                    string += this.getResidentialDisplayStreetNumberAndUnit();
                    break;
                }
            case 'business':
                {
                    string += this.name ? this.name + ', ' : '';
                    string += this.specific_number ? 'Level ' + this.specific_number + ', ' : '';
                    string += this.street_number ? this.street_number + ' ' : '';
                    break;
                }
            case 'apartment':
                {
                    string += this.name ? this.name + ', ' : '';
                    string += this.specific_number ? 'Apt. ' + this.specific_number + ', ' : '';
                    string += this.street_number ? this.street_number + ' ' : '';
                    break;
                }
            case 'hotel':
                {
                    string += this.specific_number ? 'Room ' + this.specific_number + ', ' : '';
                    string += this.name ? this.name + ', ' : '';
                    string += this.street_number ? this.street_number + ' ' : '';
                    break;
                }
        }
        string += this.street_name ? this.street_name + ', ' : '';
        string += this.suburb ? this.suburb : '';
        return string;
    };
}(Mobi2Go, this._ || exports._));
(function(Mobi2Go, _) {
    'use strict';
    var Collection = Mobi2Go._class.Common.Collection;
    Mobi2Go._class = Mobi2Go._class || {};
    Mobi2Go._class.MenuItem = {
        Menu: Menu,
        Category: Category,
        Product: Product,
        ModifierGroup: ModifierGroup,
        Modifier: Modifier
    };
    var no_cdn = Mobi2Go.app.base_url !== 'https://www.mobi2go.com' || !!Mobi2Go.helpers.getQueryStringAsObject().no_cdn;

    function Menu(properties) {
        if (!(this instanceof Menu)) {
            return new Menu(properties);
        }
        _.extend(this, properties);
        this._products = null;
    }
    Menu.prototype.toString = toString;
    Menu.prototype.hasTag = hasTag;
    Menu.prototype.getCategories = function() {
        var category_ids = this.categories,
            categories = Mobi2Go.Menu.getCategories(),
            menu_categories = [];
        _.each(category_ids, function(id) {
            var category = categories.find({
                id: id
            });
            if (category) {
                menu_categories.push(category);
            }
        });
        return Collection(menu_categories);
    };
    Menu.prototype.getCategoryProducts = function() {
        this._products = this._products || this.getCategories().reduce(function(products, category) {
            return _.union(products, category.getProducts().toArray());
        }, []);
        return Collection(this._products);
    };
    Menu.prototype.containsProduct = function(product) {
        return !!this.getCategoryProducts().find({
            id: product.id
        });
    };
    Menu.prototype.getProductByName = function(display_name) {
        return this.getCategoryProducts().find({
            backend_name: display_name
        });
    };
    Menu.prototype.getProductByDisplayName = function(display_name) {
        return this.getCategoryProducts().find({
            name: display_name
        });
    };
    Menu.prototype.getProductById = function(id) {
        return this.getCategoryProducts().find({
            id: id
        });
    };

    function Category(properties) {
        if (!(this instanceof Category)) {
            return new Category(properties);
        }
        _.extend(this, properties);
        this._cache;
        if (no_cdn) {
            this.image_src = this.image_id ? Mobi2Go.app.base_url + '/api/1/images/' + this.image_id : null;
        } else {
            this.image_src = this.image_id ? 'https://static.mobi2go.com/images/' + this.image_id + '-700' : null;
        }
    }
    Category.prototype.toString = toString;
    Category.prototype.hasTag = hasTag;
    Category.prototype.getProducts = function() {
        if (this._cache) {
            return this._cache;
        }
        var product_ids = this.products,
            products = Mobi2Go.Menu.getProducts(),
            category_products = [];
        _.each(product_ids, function(id, i) {
            var product = products.find({
                id: id
            });
            if (product) {
                product.setCategory(this);
                product.setCategoryListPosition(i + 1);
                category_products.push(product);
            }
        }, this);
        return this._cache = Collection(category_products);
    };
    var Product = Mobi2Go._class.MenuItem.Product = function(properties) {
        if (!(this instanceof Product)) {
            return new Product(properties);
        }
        _.extend(this, properties);
        if (no_cdn) {
            this.image_src = this.image_id ? Mobi2Go.app.base_url + '/api/1/images/' + this.image_id : null;
        } else {
            this.image_src = this.image_id ? 'https://static.mobi2go.com/images/' + this.image_id + '-700' : null;
        }
        this._modifiers = null;
        this.category = null;
        this.category_list_position = null;
        if (Mobi2Go.Menu.getActiveMenu()) {
            this.enableTier(Mobi2Go.Menu.getActiveMenu().tier);
        }
    };
    Product.prototype.toString = toString;
    Product.prototype.hasTag = hasTag;
    Product.prototype.getPrice = getPrice;
    Product.prototype.getProperty = getProperty;
    Product.prototype.setCategory = function(category) {
        this.category = category;
    };
    Product.prototype.setCategoryListPosition = function(position) {
        this.category_list_position = position;
    };
    Product.prototype.getModifierGroups = function() {
        var modifier_group_ids = this.modifier_groups,
            modifier_groups = Mobi2Go.Menu.getModifierGroups(),
            product_modifier_groups = [];
        _.each(modifier_group_ids, function(id) {
            var modifier_group = modifier_groups.find({
                id: id
            });
            if (modifier_group) {
                product_modifier_groups.push(modifier_group);
            }
        });
        return Collection(product_modifier_groups);
    };
    Product.prototype.getModifierGroupModifiers = function() {
        this._modifiers = this._modifiers || this.getModifierGroups().reduce(function(modifiers, modifier_group) {
            return _.union(modifier_group.getModifiers().toArray(), modifiers);
        }, []);
        return Collection(this._modifiers);
    };
    Product.prototype.getModifierByDisplayName = function(name) {
        return this.getModifierGroupModifiers().find({
            name: name
        });
    };
    Product.prototype.getModifiers = function() {
        var modifiers = this.modifiers;
        return Collection(Mobi2Go.Menu.getModifiers().filter(function(modifier) {
            return _.contains(modifiers, modifier.id);
        }));
    };
    Product.prototype.getSizeModifierGroup = function() {
        return this.getModifierGroups().find({
            type: 'size'
        });
    };
    Product.prototype.getNonSizeModifierGroups = function() {
        return Collection(this.getModifierGroups().reject({
            type: 'size'
        }));
    };
    Product.prototype.createOrderProductInstance = function() {
        return Mobi2Go._class.OrderProduct({
            menu_product: this
        });
    };

    function ModifierGroup(properties) {
        if (!(this instanceof ModifierGroup)) {
            return new ModifierGroup(properties);
        }
        _.extend(this, properties);
    }
    ModifierGroup.prototype.toString = toString;
    ModifierGroup.prototype.hasTag = hasTag;
    ModifierGroup.prototype.getModifiers = function() {
        var modifier_ids = this.modifiers,
            modifiers = Mobi2Go.Menu.getModifiers(),
            group_modifiers = [];
        _.each(modifier_ids, function(id) {
            var modifier = modifiers.find({
                id: id
            });
            if (modifier) {
                group_modifiers.push(modifier);
            }
        });
        return Collection(group_modifiers);
    };

    function Modifier(properties) {
        if (!(this instanceof Modifier)) {
            return new Modifier(properties);
        }
        _.extend(this, properties);
        if (Mobi2Go.Menu.getActiveMenu()) {
            this.enableTier(Mobi2Go.Menu.getActiveMenu().tier);
        }
    }
    Modifier.prototype.toString = toString;
    Modifier.prototype.getPrice = getPrice;
    Modifier.prototype.getProperty = getProperty;
    Modifier.prototype.hasTag = hasTag;
    Modifier.prototype.getPriceBySize = function(size_menu_modifier) {
        return this.size_prices[size_menu_modifier.id];
    };
    Modifier.prototype.hasSizePrices = function() {
        return !!_.keys(this.size_prices).length;
    };

    function toString() {
        return this.name;
    }

    function hasTag(tag) {
        return _.contains(this.tags, tag);
    }

    function getPrice() {
        var price = this.getProperty('price');
        return new Mobi2Go._class.Common.Price(price);
    }

    function getProperty(key) {
        if (this.property_tiers !== undefined) {
            var tier_index = getActiveMenuTier() - 1;
            if (this.property_tiers && this.property_tiers[tier_index] !== undefined && this.property_tiers[tier_index][key] !== undefined) {
                return this.property_tiers[tier_index][key];
            }
        }
        return this[key];
    }

    function getActiveMenuTier() {
        if (Mobi2Go.Menu) {
            return Mobi2Go.Menu.getActiveMenuTier();
        }
        return null;
    }
}(Mobi2Go, this._ || exports._));
(function(Mobi2Go, _, $, moment) {
    'use strict';
    Mobi2Go._class = Mobi2Go._class || {};
    var MapsService = Mobi2Go._class.MapsService = function(location) {
        if (!(this instanceof Mobi2Go._class.MapsService)) {
            return new Mobi2Go._class.MapsService(location);
        }
        this.location = null;
        this.init(location);
    };
    _.extend(MapsService.prototype, {
        init: function(location) {
            this.location = location;
            this.coordinates = null;
        },
        requestCoordinates: function() {
            var that = this;
            if ('geolocation' in navigator) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    that.coordinates = position.coords;
                    Mobi2Go.trigger('MapsService', 'coordinatesAvailable', position.coords);
                });
            }
        },
        getCoordinates: function() {
            return this.coordinates;
        },
        getPlacePredictions: function(input, callback) {
            if (!input || !Mobi2Go.app.maps_ready) {
                return _.defer(function() {
                    callback([]);
                });
            }
            return getAutocompleteService().getPlacePredictions(this.createAutocompleteRequest(input), callback);
        },
        getPlaceDetails: function(prediction, callback) {
            var that = this;
            if (!_.isFunction(callback)) {
                callback = function() {};
            }
            this.getPlaceDetails.cache = this.getPlaceDetails.cache || {};
            if (this.getPlaceDetails.cache[prediction.place_id] !== undefined) {
                return _.defer(function() {
                    callback(that.getPlaceDetails.cache[prediction.place_id]);
                });
            }
            return getPlacesService().getDetails(prediction, function(details, status) {
                if (!details) {
                    return;
                }
                that.getPlaceDetails.cache[prediction.place_id] = details;
                callback(details, status);
            });
        },
        createAutocompleteRequest: function(input) {
            var country = ({
                'United States': 'us',
                'New Zealand': 'nz',
                'Australia': 'au',
                'India': 'in',
                'United Kingdom': 'gb',
                'Ireland': 'ie',
                'Cananda': 'ca',
                'Singapore': 'sg',
                'South Africa': 'za',
                'Hong Kong': 'hk',
                'United Arab Emirates': 'ae',
                'Philippines': 'ph',
                'Thailand': 'th',
                'Saudi Arabia': 'sa'
            })[Mobi2Go.headoffice.country_name];
            var request = {
                input: input,
                types: [
                    'geocode',
                    'establishment'
                ]
            };
            if (country) {
                request.componentRestrictions = {
                    country: country
                };
            }
            if (this.location) {
                request.location = new google.maps.LatLng(this.location.address.latitude, this.location.address.longitude);
                request.radius = 1000 * 10;
            }
            return request;
        },
        isPointInPolygon: function(point, vs) {
            point = new Point(point);
            var x = point[0],
                y = point[1];
            var inside = false;
            for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {
                var xi = vs[i][0],
                    yi = vs[i][1];
                var xj = vs[j][0],
                    yj = vs[j][1];
                var intersect = ((yi > y) != (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);
                if (intersect) inside = !inside;
            }
            return inside;
        },
        getDistanceBetweenPoints: function(point1, point2) {
            point1 = new Point(point1);
            point2 = new Point(point2);

            function toRad(value) {
                return value * Math.PI / 180;
            }
            var R = 6371;
            var x = (toRad(point2.getLongitude()) - toRad(point1.getLongitude())) * Math.cos((toRad(point1.getLatitude()) + toRad(point2.getLatitude())) / 2);
            var y = (toRad(point2.getLatitude()) - toRad(point1.getLatitude()));
            return Math.sqrt(x * x + y * y) * R;
        }
    });

    function getAutocompleteService() {
        if (getAutocompleteService.service) {
            return getAutocompleteService.service;
        }
        return getAutocompleteService.service = new google.maps.places.AutocompleteService();
    }

    function getPlacesService() {
        if (getPlacesService.service) {
            return getPlacesService.service;
        }
        return getPlacesService.service = new google.maps.places.PlacesService($('<div/>')[0]);
    }

    function Point(data) {
        if (data.longitude !== undefined) {
            this.longitude = this[0] = data.longitude;
        }
        if (data[0] !== undefined) {
            this.longitude = this[0] = data[0];
        }
        if (data.latitude !== undefined) {
            this.latitude = this[1] = data.latitude;
        }
        if (data[1] !== undefined) {
            this.latitude = this[1] = data[1];
        }
    }
    Point.prototype.getLatitude = function() {
        return this.latitude;
    };
    Point.prototype.getLongitude = function() {
        return this.longitude;
    };
}(Mobi2Go, this._ || exports._, jQuery, this.moment));
(function(Mobi2Go, _) {
    'use strict';
    var validator = Mobi2Go.helpers.validator,
        serverRequest = Mobi2Go.app.serverRequest;
    Mobi2Go.Customer = (function() {
        var logged_in_customer = null;
        var is_logged_in = false;
        var _valid_emails = [],
            _invalid_emails = [];
        var events = Mobi2Go.app.mixinEvents('Customer'),
            bind = events.bind,
            trigger = events.trigger,
            unbind = events.trigger,
            once = events.once;
        Mobi2Go.onReady(function() {
            var query_string = Mobi2Go.helpers.getQueryStringAsObject();
            if (query_string.customer_loyalty_id) {
                bind('logIn', function() {
                    try {
                        update({
                            loyalty_id: query_string.customer_loyalty_id
                        });
                    } catch (e) {}
                });
            }
            if (Mobi2Go.app.state.customer) {
                _valid_emails.push(Mobi2Go.app.state.customer.email);
                setLoggedInCustomer(Mobi2Go.app.state.customer);
            }
        });

        function create(details, callback) {
            if (is_logged_in) {
                throw new Error('cannot create account, already logged in');
            }
            validateDetails(details);
            isEmailRegistered(details.email, function(is_email_registered) {
                if (is_email_registered) {
                    throw new Error('cannot create new customer, email in use ' +
                        details.email);
                }
                serverRequest({
                    api_version: 1,
                    endpoint: 'customers',
                    type: 'POST',
                    data: details,
                    success: function(customer) {
                        setLoggedInCustomer(customer);
                        trigger('createSuccess');
                        _.isFunction(callback) && callback();
                    }
                });
            });
        }

        function isEmailRegistered(email, callback) {
            var email_in_use = true,
                email_valid = false;
            var is_invalid = _.contains(_invalid_emails, email),
                is_valid = _.contains(_valid_emails, email);
            if (is_valid || is_invalid) {
                if (_.isFunction(callback)) {
                    _.defer(function() {
                        callback(is_invalid);
                    });
                }
                return;
            }
            serverRequest({
                api_version: 1,
                endpoint: [
                    'customers',
                    email
                ],
                type: 'GET',
                data: {
                    check: true
                },
                success: function(data) {
                    if (data.is_registered) {
                        _invalid_emails.push(email);
                        if (_.isFunction(callback)) {
                            callback(email_in_use);
                        }
                    } else {
                        _valid_emails.push(email);
                        if (_.isFunction(callback)) {
                            callback(email_valid);
                        }
                    }
                }
            });
        }

        function setLoggedInCustomer(customer) {
            if (customer && !(customer instanceof Mobi2Go._class.Customer)) {
                customer = Mobi2Go._class.Customer(customer);
            }
            _valid_emails = [],
                _invalid_emails = [];
            unbindLoggedInCustomerEventProxy();
            logged_in_customer = customer || null;
            bindLoggedInCustomerEventProxy();
            if (customer) {
                is_logged_in = true;
                trigger('logIn', customer);
            } else {
                is_logged_in = false;
                trigger('logOut', customer);
            }
        }
        var proxy_event_handlers = _.transform(['update',
            'updatePassword',
            'updatePasswordFail',
            'updateEmail',
            'updateEmailFail',
            'createAddress',
            'updateAddresses'
        ], function(result, event) {
            result[event] = function() {
                var args = _.toArray(arguments);
                trigger.apply(null, [
                    event
                ].concat(args));
            };
        });

        function bindLoggedInCustomerEventProxy() {
            if (logged_in_customer)
                logged_in_customer.bind(proxy_event_handlers);
        }

        function unbindLoggedInCustomerEventProxy() {
            if (logged_in_customer)
                logged_in_customer.unbind(proxy_event_handlers);
        }

        function isLoggedIn() {
            return is_logged_in;
        }

        function sendPasswordReset(email, callback) {
            if (!validator.email(email).is_valid) {
                throw new Error('Invalid email provided');
            }
            serverRequest({
                api_version: 1,
                endpoint: [
                    'customers',
                    email,
                    'password'
                ],
                type: 'POST',
                success: function(response) {
                    _.isFunction(callback) && callback(response);
                    trigger('passwordResetSent');
                }
            });
        }

        function logIn(email, password, callback) {
            if (isLoggedIn()) throw new Error('cannot log in, already logged in');
            if (!email) throw new Error('email required when logging in');
            if (!password) throw new Error('password required logging in');
            serverRequest({
                api_version: 1,
                endpoint: [
                    'customers',
                    'session'
                ],
                type: 'POST',
                data: {
                    email: email,
                    password: password
                },
                success: function(response) {
                    var is_successful = !!response.id;
                    if (response.id) {
                        response.password = password;
                        setLoggedInCustomer(response);
                    } else {
                        trigger('logInFail');
                    }
                    if (_.isFunction(callback)) {
                        callback(is_successful);
                    }
                }
            });
        }

        function logOut(callback) {
            if (!isLoggedIn()) {
                _.isFunction(callback) && _.defer(callback);
                return;
            }
            sendLogOutRequest(function() {
                setLoggedInCustomer(null);
                _.isFunction(callback) && callback();
            });
        }

        function sendLogOutRequest(callback) {
            serverRequest({
                api_version: 1,
                endpoint: [
                    'customers',
                    'session'
                ],
                type: 'DELETE',
                complete: callback
            });
        }

        function get() {
            return logged_in_customer;
        }

        function getId() {
            return logged_in_customer && logged_in_customer.id;
        }

        function getEmail() {
            return logged_in_customer && logged_in_customer.email;
        }

        function getName() {
            return logged_in_customer && logged_in_customer.name;
        }

        function getPhoneNumber() {
            return logged_in_customer && logged_in_customer.phone_number;
        }

        function getLoyaltyId() {
            return logged_in_customer && logged_in_customer.loyalty_id;
        }

        function isSubscriber() {
            return logged_in_customer && logged_in_customer.is_subscriber;
        }

        function providePassword(password, callback) {
            return logged_in_customer && logged_in_customer.providePassword(password, callback);
        }

        function isPasswordProvided() {
            return !!(logged_in_customer && logged_in_customer.isPasswordProvided());
        }

        function update(properties, callback) {
            if (!isLoggedIn()) {
                throw new Error('must be logged in');
            }
            logged_in_customer.update(properties, callback);
        }

        function updateWhenLoggedIn(properties, callback) {
            if (isLoggedIn()) {
                logged_in_customer.update(properties, callback);
            } else {
                if (updateWhenLoggedIn.callback) {
                    unbind('logIn', updateWhenLoggedIn.callback);
                }
                updateWhenLoggedIn.callback = function() {
                    logged_in_customer.update(properties, callback);
                };
                bind('logIn', updateWhenLoggedIn.callback);
            }
        }

        function updatePassword(password, new_password, callback) {
            if (!isLoggedIn()) throw new Error('must be logged in');
            logged_in_customer.updatePassword(password, new_password, callback);
        }

        function updateEmail(email, password, callback) {
            if (!isLoggedIn()) throw new Error('must be logged in');
            logged_in_customer.updateEmail(email, password, callback);
        }

        function getAddressById(id) {
            if (!isLoggedIn()) {
                throw new Error('must be logged in');
            }
            return logged_in_customer.getAddressById(id);
        }

        function getAddresses() {
            if (!isLoggedIn()) {
                throw new Error('must be logged in');
            }
            return logged_in_customer.getAddresses();
        }

        function createAddress(properties, callback) {
            if (!isLoggedIn()) {
                throw new Error('must be logged in');
            }
            return logged_in_customer.createAddress(properties, callback);
        }

        function updateAddressById(id, properties, callback) {
            if (!isLoggedIn()) {
                throw new Error('must be logged in');
            }
            return logged_in_customer.updateAddressById(id, properties, callback);
        }

        function removeAddressById(id, callback) {
            if (!isLoggedIn()) {
                throw new Error('must be logged in');
            }
            return logged_in_customer.removeAddressById(id, callback);
        }

        function removePaymentCardToken(token, callback) {
            if (!isLoggedIn()) {
                throw new Error('must be logged in');
            }
            return logged_in_customer.removePaymentCardToken(token, callback);
        }

        function getOrders(query, callback) {
            if (!isLoggedIn()) {
                throw new Error('must be logged in');
            }
            return logged_in_customer.getOrders(query, callback);
        }

        function getPaymentCardTokensForLocation(location, callback) {
            if (!isLoggedIn()) {
                throw new Error('must be logged in');
            }
            return logged_in_customer.getPaymentCardTokensForLocation(location, callback);
        }
        return {
            create: create,
            isEmailRegistered: isEmailRegistered,
            logIn: logIn,
            isLoggedIn: isLoggedIn,
            sendPasswordReset: sendPasswordReset,
            logOut: logOut,
            updatePassword: updatePassword,
            updateEmail: updateEmail,
            update: update,
            updateWhenLoggedIn: updateWhenLoggedIn,
            get: get,
            getEmail: getEmail,
            getName: getName,
            getLoyaltyId: getLoyaltyId,
            getPhoneNumber: getPhoneNumber,
            isSubscriber: isSubscriber,
            providePassword: providePassword,
            isPasswordProvided: isPasswordProvided,
            getAddresses: getAddresses,
            createAddress: createAddress,
            getAddressById: getAddressById,
            updateAddressById: updateAddressById,
            removeAddressById: removeAddressById,
            removePaymentCardToken: removePaymentCardToken,
            getOrders: getOrders,
            _sendLogOutRequest: sendLogOutRequest,
            _setLoggedInCustomer: setLoggedInCustomer,
            bind: bind,
            trigger: trigger,
            unbind: unbind,
            once: once
        };
    }());

    function validateDetails(details) {
        if (!details.email || !validator.email(details.email).is_valid) {
            throw new Error('valid email required to create customer');
        }
        if (!details.name) {
            throw new Error('name required to create customer');
        }
        if (!details.phone_number || !validator.phoneNumber(details.phone_number).is_valid) {
            throw new Error('valid phone number required to create customer');
        }
        if (!details.password || !validator.password(details.password).is_valid) {
            throw new Error('valid password required to create customer');
        }
        details.is_subscriber = !!details.is_subscriber;
    }
}(Mobi2Go, this._ || exports._));
(function(Mobi2Go, _) {
    'use strict';
    var INITIAL_PROPERTIES = [
            'address',
            'online',
            'offline_message',
            'order_methods',
            'customer_message_html',
            'opening_hours',
            'wait_times',
            'current_time',
            'accept_orders_until_closed',
            'delivery',
            'delivery_areas',
            'delivery_minimum_order_products_total',
            'payment_methods',
            'menu',
            'status',
            'offline_message',
            'out_of_stocks',
            'trading_name',
            'sales_tax',
            'delivery_sales_tax',
            'tips_sales_tax',
            'surcharge_sales_tax',
            'discount_sales_tax',
            'tax_number',
            'order_expected_time_minute_rounding',
            'scheduled_order_dates_limit',
            'is_storefront_locked_out'
        ],
        ready = false;
    var Locations = Mobi2Go.Locations = Mobi2Go._class.Common.Collection([]);

    function load() {
        Mobi2Go.app.serverRequest({
            endpoint: 'locations',
            api_version: 1,
            data: {
                fields: INITIAL_PROPERTIES.join(','),
                include_hidden: true
            },
            success: function(data) {
                Locations.set(data);
            },
            error: handleError
        });
    }
    load();
    var load_retries = 0;

    function handleError() {
        if (load_retries < 10) {
            load_retries++;
            setTimeout(load, 500);
            return true;
        }
        return false;
    }
    Locations.set = function(locations_data) {
        var Location = Mobi2Go._class.Location;
        if (Location === undefined) {
            _.delay(function() {
                Locations.set(locations_data);
            }, 30);
            return;
        }
        this.collection = _.map(locations_data, Location);
        this.trigger('ready');
        ready = true;
    };
    Mobi2Go.app.mixinEvents('Locations', Locations);
    Locations.onReady = function(callback) {
        if (ready)
            _.isFunction(callback) && _.defer(callback);
        else
            Locations.bind('ready', callback);
    };
    Locations.getByRegion = function() {
        return this.groupByRegion(this.getAllNotHidden());
    };
    Locations.groupByRegion = function(list) {
        var locations_by_region = {};
        _.each(list, function(location) {
            var region = location.address.region;
            if (_.isUndefined(locations_by_region[region])) {
                locations_by_region[region] = [];
            }
            locations_by_region[region].push(location);
        });
        return locations_by_region;
    };
    Locations.getFirstNotHidden = function() {
        return this.find(function(location) {
            return location.status !== 'hidden';
        });
    };
    Locations.hasOnlyOne = function() {
        return this.getAllNotHidden().length === 1;
    };
    Locations.getAllNotHidden = function() {
        return this.filter(function(location) {
            return location.status !== 'hidden';
        });
    };
    Locations.hasLocationFirstOrderFlow = function() {
        if (this.getLength() > 1) {
            if (this.getDistinctMenuCount() > 2) {
                return true;
            }
            if (this.getMaximumCountOfOutOfStockProducts() >= 5) {
                return true;
            }
        }
        return false;
    };
    Locations.getMaximumCountOfOutOfStockProducts = function() {
        var counts = _.map(this.getAllNotHidden(), function(location) {
            var out_of_stocks = location.out_of_stocks;
            return out_of_stocks && out_of_stocks.products ? out_of_stocks.products.length : 0;
        }, 0);
        return _.max(counts);
    };
    Locations.getDefaultOrderMethod = function() {
        var default_method = 'delivery';
        var pickup_count = this.getPickupAvailableCount();
        var delivery_count = this.getDeliveryAvailableCount();
        if (delivery_count === 0 || pickup_count > delivery_count) {
            default_method = 'pickup';
        }
        return default_method;
    };
    Locations.getPickupAvailableCount = function() {
        return this.search({
            method: 'pickup',
            status: 'active'
        }).length;
    }
    Locations.isPickupAvailable = function() {
        return this.getPickupAvailableCount() !== 0;
    }
    Locations.getDeliveryAvailableCount = function() {
        return this.search({
            method: 'delivery',
            status: 'active'
        }).length;
    }
    Locations.isDeliveryAvailable = function() {
        return this.getDeliveryAvailableCount() !== 0;
    }
    Locations.getDistinctMenuCount = function() {
        var menu_ids = _.map(this.getAllNotHidden(), function(location) {
            return location.menu.id;
        });
        return _.uniq(menu_ids).length;
    }
    Locations.getClosestToPoint = function(point) {
        var locations = this.getAllNotHidden();
        return _.sortBy(locations, function(location) {
            return location.getDistanceFromPoint(point);
        });
    };
    Locations.getAllWithDeliveryAvailableToAddress = function(address) {
        var locations = this.filter(function(location) {
            return location.isActive() && location.isAddressAvailable(address);
        });
        var locations = this.search({
            status: 'active',
            delivery_available_to_address: address
        });
        if (address.latitude && address.longitude) {
            locations = _.sortBy(locations, function(location) {
                return location.getDistanceFromPoint(address);
            });
        }
        return locations;
    };
    Locations.getAllWithDeliveryAvailableToPoint = function(point) {
        return this.search({
            status: 'active',
            delivery_mode: 'map_polygons',
            delivery_available_to_point: point
        });
        return this.filter(function(location) {
            return location.isActive() && location.delivery.mode === 'map_polygons' && location.isPointInDeliveryMapPolygons(point);
        });
    };
    Locations.search = function(query) {
        query = _.extend({
            name: '',
            method: null,
            status: 'active',
            delivery_mode: null,
            delivery_available_to_point: null,
            delivery_available_to_address: null
        }, query);
        return this.filter(function(location) {
            if (query.name && !_.contains(location.name.toLowerCase(), query.name.toLowerCase())) {
                return false;
            }
            if (query.method && !location.order_methods[query.method]) {
                return false;
            }
            if (query.status && location.status !== query.status) {
                return false;
            }
            if (query.delivery_mode && location.delivery.mode !== query.delivery_mode) {
                return false;
            }
            if (query.delivery_available_to_point) {
                if (!location.order_methods.delivery || location.delivery.mode !== 'map_polygons' || !location.isPointInDeliveryMapPolygons(query.delivery_available_to_point)) {
                    return false;
                }
            }
            if (query.delivery_available_to_address) {
                if (!location.order_methods.delivery || !location.isAddressAvailable(query.delivery_available_to_address)) {
                    return false;
                }
            }
            return true;
        });
    };
    Locations.getGroupedByDeliverySuburb = function() {
        var delivery_suburb_locations = {};
        this.each(function(location) {
            var areas = location.delivery_areas.suburbs || [];
            _.each(areas, function(area) {
                if (delivery_suburb_locations[area.city] === undefined) {
                    delivery_suburb_locations[area.city] = {};
                }
                if (delivery_suburb_locations[area.city][area.suburb] === undefined) {
                    delivery_suburb_locations[area.city][area.suburb] = [
                        location
                    ];
                } else {
                    delivery_suburb_locations[area.city][area.suburb].push(location);
                }
            });
        });
        return delivery_suburb_locations;
    };
}(Mobi2Go, this._ || exports._));
(function(Mobi2Go, _) {
    'use strict';
    Mobi2Go.Menu = (function() {
        var ready = false,
            menus,
            categories,
            products,
            modifier_groups,
            modifiers,
            active_menu,
            default_menu_id = Mobi2Go.headoffice.default_menu_id,
            events = Mobi2Go.app.mixinEvents('Menu'),
            bind = events.bind,
            trigger = events.trigger,
            unbind = events.trigger,
            once = events.once,
            Collection = Mobi2Go._class.Common.Collection;
        var load_retries = 0;
        syncFromServer();

        function syncFromServer() {
            Mobi2Go.app.serverRequest({
                endpoint: 'menu',
                api_version: 1,
                success: loadData,
                error: function() {
                    if (load_retries < 10) {
                        load_retries++;
                        setTimeout(syncFromServer, 500);
                    }
                }
            });
        }

        function loadData(menu_data) {
            var MenuItem = Mobi2Go._class.MenuItem;
            menus = Collection(_.map(menu_data.menus, MenuItem.Menu));
            categories = Collection(_.map(menu_data.categories, MenuItem.Category));
            products = Collection(_.map(menu_data.products, MenuItem.Product));
            modifier_groups = Collection(_.map(menu_data.modifier_groups, MenuItem.ModifierGroup));
            modifiers = Collection(_.map(menu_data.modifiers, MenuItem.Modifier));
            setDefaultActiveMenu();
            trigger('ready');
            ready = true;
        }

        function setDefaultActiveMenu() {
            setActiveMenu(menus.find({
                id: default_menu_id
            }) || menus.first());
        }

        function onReady(callback) {
            if (ready && typeof callback === 'function') {
                callback();
            } else {
                once('ready', callback);
            }
        }

        function setActiveMenuById(id) {
            var menu = menus.find({
                id: id
            });
            if (!menu) {
                throw new Error('Unknown menu ' + id);
            }
            setActiveMenu(menu);
        }

        function setActiveMenuByName(name) {
            var menu = menus.find({
                backend_name: name
            });
            if (!menu) {
                throw new Error('Unknown menu ' + name);
            }
            setActiveMenu(menu);
        }

        function setActiveMenu(menu) {
            if (!active_menu || active_menu.id !== menu.id) {
                var is_tier_different = active_menu && menu.tier !== active_menu.tier;
                active_menu = menu;
                trigger('updateMenu', menu);
                if (is_tier_different) {
                    trigger('updateMenuTier', menu.tier);
                }
            }
        }

        function getActiveMenu() {
            return active_menu;
        }

        function getActiveMenuTier() {
            return active_menu ? active_menu.tier : null;
        }

        function getActiveMenuCategories() {
            return active_menu.getCategories();
        }

        function getActiveMenuProducts() {
            return active_menu.getCategoryProducts();
        }
        Mobi2Go.bind('Order', 'updateLocation', function(location) {
            if (location) {
                if (location.menu.id !== active_menu.id) {
                    setActiveMenuById(location.menu.id);
                }
            } else {
                setDefaultActiveMenu();
            }
        });
        return {
            getMenus: function() {
                return menus;
            },
            getCategories: function() {
                return categories;
            },
            getProducts: function() {
                return products;
            },
            getModifierGroups: function() {
                return modifier_groups;
            },
            getModifiers: function() {
                return modifiers;
            },
            setActiveMenuById: setActiveMenuById,
            setActiveMenuByName: setActiveMenuByName,
            getActiveMenu: getActiveMenu,
            getActiveMenuCategories: getActiveMenuCategories,
            getActiveMenuProducts: getActiveMenuProducts,
            getActiveMenuTier: getActiveMenuTier,
            onReady: onReady,
            bind: bind,
            trigger: trigger,
            unbind: unbind,
            once: once,
            syncFromServer: syncFromServer
        };
    }());
}(Mobi2Go, this._ || exports._));
(function(Mobi2Go, _) {
    'use strict';
    var Order = Mobi2Go.Order = Mobi2Go._class.Order(null);
    var is_ready = false;
    Mobi2Go.Order.onReady = function(callback) {
        if (is_ready) {
            _.isFunction(callback) && _.defer(callback);
        } else {
            Order.once('ready', callback);
        }
        return Mobi2Go.Order;
    };
    Mobi2Go.Order.isReady = function() {
        return is_ready;
    };
    Mobi2Go.onReady(function() {
        var Customer = Mobi2Go.Customer;
        var Locations = Mobi2Go.Locations;
        var Menu = Mobi2Go.Menu;
        Menu.onReady(function() {
            Locations.onReady(function() {
                Order.updateMenu();
                Order.setCustomer(Customer.get());
                if (Mobi2Go.app.state.order) {
                    Order.set(Mobi2Go.app.state.order);
                } else if (Locations.hasOnlyOne()) {
                    Order.setLocation(Locations.getFirstNotHidden());
                }
                Order.trigger('ready');
                is_ready = true;
            });
        });
        Order.bind('updateLocation', function(location) {
            if (location === null && Locations.hasOnlyOne()) {
                Order.setLocation(Locations.getFirstNotHidden());
            }
        });
        Customer.bind({
            logIn: Order.setCustomer,
            logOut: Order.setCustomer
        });
        Order.bind('updateCustomer', function(customer) {
            if (customer === null) {
                Customer._setLoggedInCustomer(null);
            } else {
                Order.setCustomer(Customer.get());
            }
        });
        var cookie = Mobi2Go.helpers.cookie;
        var saved_location_id = cookie.get('MOBI2GO_APP_LOCATION_ID');
        var saved_method = cookie.get('MOBI2GO_APP_METHOD');
        var cookie_max_age = 60 * 60 * 24 * 24;

        function setLocation() {
            if (!Order.getLocation() && saved_location_id) {
                Order.setLocationById(saved_location_id);
            }
        }
        Order.bind({
            ready: setLocation,
            updateAvailableMethods: function(available_methods) {
                if (!Order.getMethod() && saved_method && _.contains(available_methods, saved_method)) {
                    Order.setMethod(saved_method);
                }
            },
            updateLocation: function(location) {
                if (location) {
                    cookie.set('MOBI2GO_APP_LOCATION_ID', location.id, cookie_max_age);
                }
            },
            updateMethod: function(method) {
                if (method) {
                    cookie.set('MOBI2GO_APP_METHOD', method, cookie_max_age);
                }
            }
        });

        function getLastUsedAddressId() {
            var customer_id = Customer.isLoggedIn() ? Customer.get().id : null,
                location_id = Order.getLocation() ? Order.getLocation().id : null;
            if (customer_id && location_id) {
                var location_address_id = +cookie.get('MOBI2GO_APP_ADDRESS' + customer_id + location_id);
                if (location_address_id) {
                    return location_address_id;
                }
                var address_id = +cookie.get('MOBI2GO_APP_ADDRESS' + location_id);
                if (address_id) {
                    return address_id;
                }
            }
            return null;
        }

        function setLastUsedAddressId(id) {
            var customer_id = Customer.isLoggedIn() ? Customer.get().id : null,
                location_id = Order.getLocation() ? Order.getLocation().id : null;
            if (customer_id && location_id) {
                cookie.set('MOBI2GO_APP_ADDRESS_' + customer_id + location_id, id);
                cookie.set('MOBI2GO_APP_ADDRESS_' + customer_id, id);
            }
        }
        Order.bind({
            updateAvailableAddresses: function(addresses) {
                if (Order.getAddress()) {
                    return;
                }
                var address_ids = _.pluck(addresses, 'id'),
                    last_used_address_id = getLastUsedAddressId();
                if (last_used_address_id && _.contains(address_ids, last_used_address_id)) {
                    Order.setAddressById(last_used_address_id);
                    return;
                }
                if (addresses.length) {
                    Order.setAddressById(addresses[0].id);
                }
            },
            updateAddress: function(address) {
                if (address) {
                    setLastUsedAddressId(address.id);
                }
            }
        });
        Order.onReady(function() {
            if (Order.getProgressPhase() !== 'unconfirmed') {
                return;
            }
            var query_string = Mobi2Go.helpers.getQueryStringAsObject();
            if (query_string.location) {
                Order.setLocationByName(query_string.location);
            }
            if (query_string.location_id) {
                Order.setLocationById(query_string.location_id);
            }
            if (query_string.method) {
                Order.setMethod(query_string.method);
            }
            if (query_string.voucher_code) {
                Order.setVoucherCode(query_string.voucher_code);
            }
        });
    });
})(Mobi2Go, this._ || exports._);
(function(Mobi2Go, _) {
    'use strict';
    Mobi2Go.MapsService = new Mobi2Go._class.MapsService(null);
})(Mobi2Go, this._ || exports._);
(function(Mobi2Go, $, _) {
    Mobi2Go.UI = Mobi2Go.UI || {};
    Mobi2Go.app.mixinEvents('UI', Mobi2Go.UI);
    Mobi2Go.UI.views = {};
    $('#m2g-view').attr('data-platform', Mobi2Go.app.getPlatform());
    Mobi2Go.UI.View = function(options) {
        if (!(this instanceof Mobi2Go.UI.View)) {
            return new Mobi2Go.UI.View(options);
        }
        var options_keys = [
                'name',
                'model',
                'el',
                'model_listeners',
                'DOM_listeners',
                'triggers',
                'initialise',
                'template',
                'templates'
            ],
            templates = {},
            key;
        this.model = Mobi2Go[options.model] || options.model;
        this.name = options.name || 'view#' + _.uniqueId();
        this.el = options.el || null;
        this.$el = options.el ? $(options.el) : null;
        this.template = options.template ? _.template(options.template) : null;
        this.templates = {};
        if (_.isObject(options.templates)) {
            _.each(options.templates, function(template_html, template_name) {
                templates[template_name] = _.template(template_html);
            });
            this.templates = templates;
        }
        for (key in options)
            if (options.hasOwnProperty(key)) {
                if (!_.contains(options_keys, key)) {
                    if (_.isFunction(options[key])) {
                        options[key] = _.bind(options[key], this);
                    }
                    this[key] = options[key];
                }
            }
        this.model_listeners = options.model_listeners || {};
        this.bindModelListeners();
        this.DOM_listeners = options.DOM_listeners || {};
        this.bindDOMListeners();
        Mobi2Go.app.mixinEvents('View.' + this.name, this);
        if (_.isFunction(options.initialise)) {
            options.initialise.call(this);
        }
        Mobi2Go.UI.views[this.name] = this;
    };
    _.extend(Mobi2Go.UI.View.prototype, {
        initialise: function() {},
        $: function(selector) {
            return this.$el.find(selector)
        },
        setModel: function(model) {
            if (this.model) {
                this.unbindModelListeners();
            }
            this.model = model;
            this.bindModelListeners();
        },
        setEl: function(el) {
            if (this.el) {
                this.unbindDOMListeners();
            }
            this.el = el;
            this.$el = $(el);
            this.bindDOMListeners();
        },
        bindModelListeners: function() {
            var i,
                method,
                listeners = this.model_listeners;
            if (!listeners || !_.isObject(listeners) || !this.model) {
                return;
            }
            if (!this.model_listeners_parsed) {
                for (i in listeners)
                    if (listeners.hasOwnProperty(i)) {
                        method = listeners[i];
                        if (!_.isFunction(method) && _.isFunction(this[method])) {
                            method = this[method];
                        }
                        if (!_.isFunction(method)) {
                            throw '"' + String(method) + '" is not a function';
                            delete listeners[i];
                        }
                        method = _.bind(method, this);
                        listeners[i] = method;
                    }
                this.model_listeners = listeners;
                this.model_listeners_parsed = true;
            }
            this.model.bind(this.model_listeners);
        },
        unbindModelListeners: function() {
            if (this.model) this.model.unbind(this.model_listeners);
        },
        bound_DOM_Listeners: {},
        bindDOMListeners: function() {
            var key,
                split,
                event_name,
                selector,
                method,
                triggers = this.DOM_listeners;
            if (!triggers || !_.isObject(triggers) || !this.el) {
                return;
            }
            for (key in triggers)
                if (triggers.hasOwnProperty(key)) {
                    split = key.match(/^(\S+)\s*(.*)$/);
                    event_name = split[1];
                    selector = split[2];
                    method = triggers[key];
                    if (!_.isFunction(method)) {
                        if (_.isFunction(this[method])) {
                            method = this[method];
                        } else {
                            throw new Error('"' + String(method) + '" is not a function');
                        }
                    }
                    method = _.bind(method, this);
                    this.bound_DOM_Listeners[key] = method;
                    if (selector === '') {
                        this.$el.bind(event_name, method);
                    } else {
                        this.$el.delegate(selector, event_name, method);
                    }
                }
        },
        unbindDOMListeners: function() {
            var key,
                split,
                event_name,
                selector,
                method,
                triggers = this.DOM_listeners;
            if (!triggers || !_.isObject(triggers) || !this.el) {
                return;
            }
            for (key in triggers)
                if (triggers.hasOwnProperty(key)) {
                    split = key.match(/^(\S+)\s*(.*)$/);
                    event_name = split[1];
                    selector = split[2];
                    method = triggers[key];
                    if (!_.isFunction(method)) {
                        if (_.isFunction(this[method])) {
                            method = this[method];
                        } else {
                            throw new Error('"' + String(method) + '" is not a function');
                        }
                    }
                    method = this.bound_DOM_Listeners[key];
                    if (selector === '') {
                        this.$el.unbind(event_name, method);
                    } else {
                        this.$el.undelegate(selector, event_name, method);
                    }
                }
            this.bound_DOM_Listeners = {};
        }
    });
    Mobi2Go.UI.global_page_scroll_offset = 0;
}(Mobi2Go, jQuery, this._ || exports._));
(function(window) {}(this));
(function(window) {
    if (Mobi2Go.app.base_url === 'https://www.mobi2go.com') {
        Mobi2Go.onReady(load);
    }

    function load() {
        var inspectlet_id = Mobi2Go.headoffice.analytics_inspectlet_id;
        if (inspectlet_id === 'default') {
            inspectlet_id = 1741257077;
        }
        if (!inspectlet_id) {
            return;
        }
        window.__insp = window.__insp || [];
        __insp.push(['wid',
            inspectlet_id
        ]);
        (function() {
            function __ldinsp() {
                var insp = document.createElement('script');
                insp.type = 'text/javascript';
                insp.async = true;
                insp.id = 'inspsync';
                insp.src = ('https:' == document.location.protocol ? 'https' : 'http') + '://cdn.inspectlet.com/inspectlet.js';
                var x = document.getElementsByTagName('script')[0];
                x.parentNode.insertBefore(insp, x);
            }
            if (window.attachEvent) {
                window.attachEvent('onload', __ldinsp);
            } else {
                window.addEventListener('load', __ldinsp, false);
            }
        })();
        tag({
            ui: Mobi2Go.app.ui_name,
            headoffice_id: Mobi2Go.headoffice.id,
            headoffice_name: Mobi2Go.headoffice.display_name
        });
        Mobi2Go.Order.bind({
            updateId: function(id) {
                tag({
                    id: id
                });
            },
            updateCustomer: function(customer) {
                customer && tag({
                    customer_id: customer.id,
                    customer_name: customer.name,
                    customer_email: customer.email
                });
            },
            updateLocation: function(location) {
                location && tag({
                    location_id: location.id,
                    location_name: location.name
                });
            },
            updateMethod: function(method) {
                tag({
                    method: method
                });
            },
            updatePaymentMethod: function(method) {
                tag({
                    payment_method: method
                });
            },
            updateProgressPhase: function(phase) {
                tag({
                    progress_phase: phase
                });
            },
            updateProgressStatus: function(status) {
                tag({
                    progress_status: status
                });
            },
            updateProgressMessage: function(message) {
                tag({
                    progress_message: message
                });
            }
        });
    }

    function tag(data) {
        window.__insp.push(['tagSession',
            data
        ]);
    }
}(this));
(function(window, Mobi2Go, _) {
    if (Mobi2Go.app.base_url === 'https://www.mobi2go.com') {
        Mobi2Go.onReady(load);
    }

    function load() {
        var Order = Mobi2Go.Order;
        var Menu = Mobi2Go.Menu;
        var UI = Mobi2Go.UI;
        var web_property_id = Mobi2Go.headoffice.analytics_google_web_property_id;
        if (!web_property_id) {
            return;
        }(function(i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r;
            i[r] = i[r] || function() {
                    (i[r].q = i[r].q || []).push(arguments)
                },
                i[r].l = 1 * new Date();
            a = s.createElement(o),
                m = s.getElementsByTagName(o)[0];
            a.async = 1;
            a.src = g;
            m.parentNode.insertBefore(a, m)
        })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'm2g_ga');

        function startSession() {
            m2g_ga('create', web_property_id, 'auto');
            m2g_ga('require', 'ec');
            m2g_ga('set', 'appName', Mobi2Go.app.getPlatform());
            m2g_ga('set', 'appId', Mobi2Go.headoffice.domain_name + '-' + Mobi2Go.app.getPlatform());
            m2g_ga('send', 'pageview');
        }

        function identifyUser(id) {
            m2g_ga('set', {
                userId: id
            });
        }

        function impressCategory(category) {
            _impressProducts(category.getProducts().toArray(), category.name);
            _action('detail');
            m2g_ga('send', 'event', 'menu', 'view category', category.name);
        }

        function impressMenu(menu) {
            _impressProducts(menu.getCategoryProducts().toArray(), menu.name);
            _action('detail');
            m2g_ga('send', 'event', 'menu', 'view menu', menu.name);
        }

        function detailProduct(product) {
            _trackProduct(product);
            _action('detail');
            m2g_ga('send', 'event', 'menu', 'edit product', product.menu_product.name);
        }

        function addProductToOrder(product) {
            _trackProduct(product);
            _action('add');
            m2g_ga('send', 'event', 'order', 'add product', product.menu_product.name);
        }

        function removeProductFromOrder(product) {
            if (Order.isResetting()) {
                return;
            }
            _trackProduct(product);
            _action('remove');
            m2g_ga('send', 'event', 'order', 'remove product', product.menu_product.name);
        }

        function addProductToOrder(product) {
            _trackProduct(product);
            _action('add');
            m2g_ga('send', 'event', 'order', 'add product', product.menu_product.name);
        }

        function checkoutPaymentStep() {
            _trackAllProducts();
            _action('checkout', {
                step: 2,
                option: Order.getPaymentMethod()
            });
            m2g_ga('send', 'event', 'order', 'payment');
        }

        function checkout() {
            _trackAllProducts();
            _action('checkout', {
                step: 1
            });
            m2g_ga('send', 'event', 'order', 'checkout');
        }

        function purchase() {
            _trackAllProducts();
            _action('purchase', {
                id: Order.getId(),
                revenue: Order.getTotal().getTaxExclusivePrice().toFloat(),
                tax: Order.getTotal().getTaxPrice().toFloat(),
                shipping: Order.getDeliveryFee().toFloat(),
                coupon: Order.getVoucherCode()
            });
            m2g_ga('send', 'event', 'order', 'confirmed');
        }

        function _action(action_type, options) {
            m2g_ga('ec:setAction', action_type, options);
        }

        function _impressProducts(menu_products, list_name) {
            _.each(menu_products, function(menu_product, position) {
                _impressProduct(menu_product, list_name, position + 1);
            });
        }

        function _impressProduct(menu_product, list_name, position) {
            m2g_ga('ec:addImpression', {
                id: menu_product.id,
                name: menu_product.name,
                list: list_name,
                category: menu_product.category ? menu_product.category.name : null,
                position: position
            });
        }

        function _trackAllProducts() {
            _.each(Order.getProducts(), _trackProduct);
        }

        function _trackProduct(product) {
            var product = {
                id: product.menu_product.id,
                name: product.menu_product.name,
                price: product.price.toFloat(),
                quantity: product.quantity,
                variant: product.size ? product.size.menu_modifier.name : null,
                category: product.menu_product.category ? product.menu_product.category.name : null,
                position: product.menu_product.category_list_position ? product.menu_product.category_list_position : null
            };
            m2g_ga('ec:addProduct', product);
        }
        startSession();
        Menu.onReady(function() {
            if (!Mobi2Go.app.isMobileUI()) {
                Order.onReady(function() {
                    if (areAllMenuProductsShowing()) {
                        setTimeout(function() {
                            Order.bind('updateMenu', impressMenu);
                            impressMenu(Order.getMenu());
                        }, 800);
                    } else {
                        UI.bind('showCategory', function(menu_category_id) {
                            var menu_category = Menu.getCategories().getById(menu_category_id);
                            if (menu_category) {
                                impressCategory(menu_category);
                            }
                        });
                        impressCategory(Order.getMenu().getCategories().first());
                    }
                });
            } else {
                UI.bind('showCategory', function(menu_category_id) {
                    var menu_category = Menu.getCategories().getById(menu_category_id);
                    if (menu_category) {
                        impressCategory(menu_category);
                    }
                });
            }
            UI.bind('editProduct', detailProduct);
        });
        Order.bind({
            updateCustomer: function(customer) {
                if (customer) {
                    identifyUser(customer.id);
                }
            }
        });
        Order.onReady(function() {
            Order.bind({
                addProduct: addProductToOrder,
                removeProduct: removeProductFromOrder
            });
            UI.bind({
                showConfirmation: checkout
            });
            Order.bind({
                updatePaymentStatus: function(status) {
                    if (status === 'confirmed') {
                        checkoutPaymentStep();
                    }
                }
            });
            Order.bind({
                updateProgressPhase: function(phase) {
                    if (phase === 'confirmed') {
                        if (Order.getPaymentMethod() === 'offline') {
                            checkoutPaymentStep();
                        }
                        purchase();
                    }
                }
            });
        });

        function areAllMenuProductsShowing() {
            if (areAllMenuProductsShowing.value !== undefined) {
                return areAllMenuProductsShowing.value;
            }
            return areAllMenuProductsShowing = (UI.views.menu_categories && UI.views.menu_categories.$el.is(':hidden'));
        }
    }
}(this, Mobi2Go, this._ || exports._));
(function(window, Mobi2Go, _) {
    if (Mobi2Go.app.base_url === 'https://www.mobi2go.com') {
        Mobi2Go.onReady(load);
    }

    function load() {
        var segment_key = Mobi2Go.headoffice.analytics_segment_key;
        if (!segment_key) {
            return;
        }! function() {
            var analytics = window.analytics = window.analytics || [];
            if (!analytics.initialize)
                if (analytics.invoked) window.console && console.error && console.error('Segment snippet included twice.');
                else {
                    analytics.invoked = !0;
                    analytics.methods = [
                        'trackSubmit',
                        'trackClick',
                        'trackLink',
                        'trackForm',
                        'pageview',
                        'identify',
                        'group',
                        'track',
                        'ready',
                        'alias',
                        'page',
                        'once',
                        'off',
                        'on'
                    ];
                    analytics.factory = function(t) {
                        return function() {
                            var e = Array.prototype.slice.call(arguments);
                            e.unshift(t);
                            analytics.push(e);
                            return analytics
                        }
                    };
                    for (var t = 0; t < analytics.methods.length; t++) {
                        var e = analytics.methods[t];
                        analytics[e] = analytics.factory(e)
                    }
                    analytics.load = function(t) {
                        var e = document.createElement('script');
                        e.type = 'text/javascript';
                        e.async = !0;
                        e.src = ('https:' === document.location.protocol ? 'https://' : 'http://') + 'cdn.segment.com/analytics.js/v1/' + t + '/analytics.min.js';
                        var n = document.getElementsByTagName('script')[0];
                        n.parentNode.insertBefore(e, n)
                    };
                    analytics.SNIPPET_VERSION = '3.0.1';
                    analytics.load(segment_key);
                    analytics.page()
                }
        }();
        var Order = Mobi2Go.Order;
        var Menu = Mobi2Go.Menu;
        var UI = Mobi2Go.UI;

        function identify(customer) {
            if (customer) {
                analytics.identify(customer.id, {
                    email: customer.email,
                    name: customer.name,
                    firstName: customer.getFirstName(),
                    lastName: customer.getLastName(),
                    phone: customer.phone_number
                });
            }
        }

        function viewedProductCategory(category) {
            analytics.track('Viewed Product Category', {
                category: category.name
            });
        }

        function viewedProduct(menu_product) {
            analytics.track('Viewed Product', {
                id: menu_product.id,
                name: menu_product.name,
                sku: menu_product.plu,
                price: menu_product.price,
                category: menu_product.category.name
            });
        }

        function addedProduct(product) {
            analytics.track('Added Product', _convertProduct(product));
        }

        function removedProduct(product) {
            if (Order.isResetting()) {
                return;
            }
            analytics.track('Removed Product', _convertProduct(product));
        }

        function startedCheckout() {
            analytics.track('Started Checkout', _convertOrder());
        }

        function completedOrder() {
            analytics.track('Completed Order', _convertOrder());
        }

        function _convertOrder() {
            return {
                orderId: Order.getId(),
                total: Order.getTotal().toFloat(),
                revenue: Order.getTotal().getTaxExclusivePrice().toFloat(),
                shipping: Order.getDeliveryFee().toFloat(),
                tax: Order.getTotal().getTaxPrice().toFloat(),
                discount: Order.getDiscountsTotal().toFloat(),
                coupon: Order.getVoucherCode(),
                currency: Mobi2Go.headoffice.currency_abrv,
                products: _.map(Order.getProducts(), _convertProduct)
            };
        }

        function _convertProduct(product) {
            return {
                id: product.menu_product.id,
                name: product.menu_product.name,
                sku: product.menu_product.plu,
                price: product.price.toFloat(),
                quantity: product.quantity,
                category: product.menu_product.category.name
            };
        }
        Order.bind({
            updateCustomer: identify
        });
        Order.onReady(function() {
            Order.bind({
                addProduct: addedProduct,
                removeProduct: removedProduct,
                updateProgressPhase: function(phase) {
                    if (phase === 'confirmed') {
                        completedOrder();
                    }
                }
            });
            UI.bind({
                showConfirmation: startedCheckout
            });
        });
        Menu.onReady(function() {
            if (!Mobi2Go.app.isMobileUI()) {
                Order.onReady(function() {
                    if (areAllMenuProductsShowing()) {
                        setTimeout(function() {
                            Order.bind('updateMenu', viewedProductCategory);
                            viewedProductCategory(Order.getMenu());
                        }, 800);
                    } else {
                        UI.bind('showCategory', function(menu_category_id) {
                            var menu_category = Menu.getCategories().getById(menu_category_id);
                            if (menu_category) {
                                viewedProductCategory(menu_category);
                            }
                        });
                        viewedProductCategory(Order.getMenu().getCategories().first());
                    }
                });
            } else {
                UI.bind('showCategory', function(menu_category_id) {
                    var menu_category = Menu.getCategories().getById(menu_category_id);
                    if (menu_category) {
                        viewedProductCategory(menu_category);
                    }
                });
            }
            UI.bind('editProduct', function(product) {
                viewedProduct(product.menu_product);
            });
        });

        function areAllMenuProductsShowing() {
            if (areAllMenuProductsShowing.value !== undefined) {
                return areAllMenuProductsShowing.value;
            }
            return areAllMenuProductsShowing = (UI.views.menu_categories && UI.views.menu_categories.$el.is(':hidden'));
        }
    }
}(this, Mobi2Go, this._ || exports._));
! function(e) {
    if ('object' == typeof exports && 'undefined' != typeof module) module.exports = e();
    else if ('function' == typeof define && define.amd) define([], e);
    else {
        var t;
        t = 'undefined' != typeof window ? window : 'undefined' != typeof global ? global : 'undefined' != typeof self ? self : this,
            t.React = e()
    }
}(function() {
    return function e(t, n, r) {
        function o(a, u) {
            if (!n[a]) {
                if (!t[a]) {
                    var s = 'function' == typeof require && require;
                    if (!u && s) return s(a, !0);
                    if (i) return i(a, !0);
                    var l = new Error('Cannot find module \'' + a + '\'');
                    throw l.code = 'MODULE_NOT_FOUND',
                        l
                }
                var c = n[a] = {
                    exports: {}
                };
                t[a][0].call(c.exports, function(e) {
                    var n = t[a][1][e];
                    return o(n ? n : e)
                }, c, c.exports, e, t, n, r)
            }
            return n[a].exports
        }
        for (var i = 'function' == typeof require && require, a = 0; a < r.length; a++) o(r[a]);
        return o
    }({
        1: [
            function(e, t, n) {
                'use strict';
                var r = e(40),
                    o = e(148),
                    i = {
                        focusDOMComponent: function() {
                            o(r.getNodeFromInstance(this))
                        }
                    };
                t.exports = i
            }, {
                148: 148,
                40: 40
            }
        ],
        2: [
            function(e, t, n) {
                'use strict';

                function r() {
                    var e = window.opera;
                    return 'object' == typeof e && 'function' == typeof e.version && parseInt(e.version(), 10) <= 12
                }

                function o(e) {
                    return (e.ctrlKey || e.altKey || e.metaKey) && !(e.ctrlKey && e.altKey)
                }

                function i(e) {
                    switch (e) {
                        case S.topCompositionStart:
                            return M.compositionStart;
                        case S.topCompositionEnd:
                            return M.compositionEnd;
                        case S.topCompositionUpdate:
                            return M.compositionUpdate
                    }
                }

                function a(e, t) {
                    return e === S.topKeyDown && t.keyCode === _
                }

                function u(e, t) {
                    switch (e) {
                        case S.topKeyUp:
                            return -1 !== b.indexOf(t.keyCode);
                        case S.topKeyDown:
                            return t.keyCode !== _;
                        case S.topKeyPress:
                        case S.topMouseDown:
                        case S.topBlur:
                            return !0;
                        default:
                            return !1
                    }
                }

                function s(e) {
                    var t = e.detail;
                    return 'object' == typeof t && 'data' in t ? t.data : null
                }

                function l(e, t, n, r) {
                    var o,
                        l;
                    if (E ? o = i(e) : R ? u(e, n) && (o = M.compositionEnd) : a(e, n) && (o = M.compositionStart), !o) return null;
                    T && (R || o !== M.compositionStart ? o === M.compositionEnd && R && (l = R.getData()) : R = m.getPooled(r));
                    var c = g.getPooled(o, t, n, r);
                    if (l) c.data = l;
                    else {
                        var p = s(n);
                        null !== p && (c.data = p)
                    }
                    return h.accumulateTwoPhaseDispatches(c),
                        c
                }

                function c(e, t) {
                    switch (e) {
                        case S.topCompositionEnd:
                            return s(t);
                        case S.topKeyPress:
                            var n = t.which;
                            return n !== P ? null : (k = !0, w);
                        case S.topTextInput:
                            var r = t.data;
                            return r === w && k ? null : r;
                        default:
                            return null
                    }
                }

                function p(e, t) {
                    if (R) {
                        if (e === S.topCompositionEnd || u(e, t)) {
                            var n = R.getData();
                            return m.release(R),
                                R = null,
                                n
                        }
                        return null
                    }
                    switch (e) {
                        case S.topPaste:
                            return null;
                        case S.topKeyPress:
                            return t.which && !o(t) ? String.fromCharCode(t.which) : null;
                        case S.topCompositionEnd:
                            return T ? null : t.data;
                        default:
                            return null
                    }
                }

                function d(e, t, n, r) {
                    var o;
                    if (o = N ? c(e, n) : p(e, n), !o) return null;
                    var i = y.getPooled(M.beforeInput, t, n, r);
                    return i.data = o,
                        h.accumulateTwoPhaseDispatches(i),
                        i
                }
                var f = e(16),
                    h = e(20),
                    v = e(140),
                    m = e(21),
                    g = e(97),
                    y = e(101),
                    C = e(158),
                    b = [
                        9,
                        13,
                        27,
                        32
                    ],
                    _ = 229,
                    E = v.canUseDOM && 'CompositionEvent' in window,
                    x = null;
                v.canUseDOM && 'documentMode' in document && (x = document.documentMode);
                var N = v.canUseDOM && 'TextEvent' in window && !x && !r(),
                    T = v.canUseDOM && (!E || x && x > 8 && 11 >= x),
                    P = 32,
                    w = String.fromCharCode(P),
                    S = f.topLevelTypes,
                    M = {
                        beforeInput: {
                            phasedRegistrationNames: {
                                bubbled: C({
                                    onBeforeInput: null
                                }),
                                captured: C({
                                    onBeforeInputCapture: null
                                })
                            },
                            dependencies: [
                                S.topCompositionEnd,
                                S.topKeyPress,
                                S.topTextInput,
                                S.topPaste
                            ]
                        },
                        compositionEnd: {
                            phasedRegistrationNames: {
                                bubbled: C({
                                    onCompositionEnd: null
                                }),
                                captured: C({
                                    onCompositionEndCapture: null
                                })
                            },
                            dependencies: [
                                S.topBlur,
                                S.topCompositionEnd,
                                S.topKeyDown,
                                S.topKeyPress,
                                S.topKeyUp,
                                S.topMouseDown
                            ]
                        },
                        compositionStart: {
                            phasedRegistrationNames: {
                                bubbled: C({
                                    onCompositionStart: null
                                }),
                                captured: C({
                                    onCompositionStartCapture: null
                                })
                            },
                            dependencies: [
                                S.topBlur,
                                S.topCompositionStart,
                                S.topKeyDown,
                                S.topKeyPress,
                                S.topKeyUp,
                                S.topMouseDown
                            ]
                        },
                        compositionUpdate: {
                            phasedRegistrationNames: {
                                bubbled: C({
                                    onCompositionUpdate: null
                                }),
                                captured: C({
                                    onCompositionUpdateCapture: null
                                })
                            },
                            dependencies: [
                                S.topBlur,
                                S.topCompositionUpdate,
                                S.topKeyDown,
                                S.topKeyPress,
                                S.topKeyUp,
                                S.topMouseDown
                            ]
                        }
                    },
                    k = !1,
                    R = null,
                    D = {
                        eventTypes: M,
                        extractEvents: function(e, t, n, r) {
                            return [l(e, t, n, r),
                                d(e, t, n, r)
                            ]
                        }
                    };
                t.exports = D
            }, {
                101: 101,
                140: 140,
                158: 158,
                16: 16,
                20: 20,
                21: 21,
                97: 97
            }
        ],
        3: [
            function(e, t, n) {
                'use strict';

                function r(e, t) {
                    return e + t.charAt(0).toUpperCase() + t.substring(1)
                }
                var o = {
                        animationIterationCount: !0,
                        borderImageOutset: !0,
                        borderImageSlice: !0,
                        borderImageWidth: !0,
                        boxFlex: !0,
                        boxFlexGroup: !0,
                        boxOrdinalGroup: !0,
                        columnCount: !0,
                        flex: !0,
                        flexGrow: !0,
                        flexPositive: !0,
                        flexShrink: !0,
                        flexNegative: !0,
                        flexOrder: !0,
                        gridRow: !0,
                        gridColumn: !0,
                        fontWeight: !0,
                        lineClamp: !0,
                        lineHeight: !0,
                        opacity: !0,
                        order: !0,
                        orphans: !0,
                        tabSize: !0,
                        widows: !0,
                        zIndex: !0,
                        zoom: !0,
                        fillOpacity: !0,
                        floodOpacity: !0,
                        stopOpacity: !0,
                        strokeDasharray: !0,
                        strokeDashoffset: !0,
                        strokeMiterlimit: !0,
                        strokeOpacity: !0,
                        strokeWidth: !0
                    },
                    i = [
                        'Webkit',
                        'ms',
                        'Moz',
                        'O'
                    ];
                Object.keys(o).forEach(function(e) {
                    i.forEach(function(t) {
                        o[r(t, e)] = o[e]
                    })
                });
                var a = {
                        background: {
                            backgroundAttachment: !0,
                            backgroundColor: !0,
                            backgroundImage: !0,
                            backgroundPositionX: !0,
                            backgroundPositionY: !0,
                            backgroundRepeat: !0
                        },
                        backgroundPosition: {
                            backgroundPositionX: !0,
                            backgroundPositionY: !0
                        },
                        border: {
                            borderWidth: !0,
                            borderStyle: !0,
                            borderColor: !0
                        },
                        borderBottom: {
                            borderBottomWidth: !0,
                            borderBottomStyle: !0,
                            borderBottomColor: !0
                        },
                        borderLeft: {
                            borderLeftWidth: !0,
                            borderLeftStyle: !0,
                            borderLeftColor: !0
                        },
                        borderRight: {
                            borderRightWidth: !0,
                            borderRightStyle: !0,
                            borderRightColor: !0
                        },
                        borderTop: {
                            borderTopWidth: !0,
                            borderTopStyle: !0,
                            borderTopColor: !0
                        },
                        font: {
                            fontStyle: !0,
                            fontVariant: !0,
                            fontWeight: !0,
                            fontSize: !0,
                            lineHeight: !0,
                            fontFamily: !0
                        },
                        outline: {
                            outlineWidth: !0,
                            outlineStyle: !0,
                            outlineColor: !0
                        }
                    },
                    u = {
                        isUnitlessNumber: o,
                        shorthandPropertyExpansions: a
                    };
                t.exports = u
            }, {}
        ],
        4: [
            function(e, t, n) {
                'use strict';
                var r = e(3),
                    o = e(140),
                    i = (e(70), e(142), e(114)),
                    a = e(153),
                    u = e(160),
                    s = (e(164), u(function(e) {
                        return a(e)
                    })),
                    l = !1,
                    c = 'cssFloat';
                if (o.canUseDOM) {
                    var p = document.createElement('div').style;
                    try {
                        p.font = ''
                    } catch (d) {
                        l = !0
                    }
                    void 0 === document.documentElement.style.cssFloat && (c = 'styleFloat')
                }
                var f = {
                    createMarkupForStyles: function(e, t) {
                        var n = '';
                        for (var r in e)
                            if (e.hasOwnProperty(r)) {
                                var o = e[r];
                                null != o && (n += s(r) + ':', n += i(r, o, t) + ';')
                            }
                        return n || null
                    },
                    setValueForStyles: function(e, t, n) {
                        var o = e.style;
                        for (var a in t)
                            if (t.hasOwnProperty(a)) {
                                var u = i(a, t[a], n);
                                if ('float' !== a && 'cssFloat' !== a || (a = c), u) o[a] = u;
                                else {
                                    var s = l && r.shorthandPropertyExpansions[a];
                                    if (s)
                                        for (var p in s) o[p] = '';
                                    else o[a] = ''
                                }
                            }
                    }
                };
                t.exports = f
            }, {
                114: 114,
                140: 140,
                142: 142,
                153: 153,
                160: 160,
                164: 164,
                3: 3,
                70: 70
            }
        ],
        5: [
            function(e, t, n) {
                'use strict';

                function r() {
                    this._callbacks = null,
                        this._contexts = null
                }
                var o = e(165),
                    i = e(25),
                    a = e(154);
                o(r.prototype, {
                        enqueue: function(e, t) {
                            this._callbacks = this._callbacks || [],
                                this._contexts = this._contexts || [],
                                this._callbacks.push(e),
                                this._contexts.push(t)
                        },
                        notifyAll: function() {
                            var e = this._callbacks,
                                t = this._contexts;
                            if (e) {
                                e.length !== t.length ? a(!1) : void 0,
                                    this._callbacks = null,
                                    this._contexts = null;
                                for (var n = 0; n < e.length; n++) e[n].call(t[n]);
                                e.length = 0,
                                    t.length = 0
                            }
                        },
                        checkpoint: function() {
                            return this._callbacks ? this._callbacks.length : 0
                        },
                        rollback: function(e) {
                            this._callbacks && (this._callbacks.length = e, this._contexts.length = e)
                        },
                        reset: function() {
                            this._callbacks = null,
                                this._contexts = null
                        },
                        destructor: function() {
                            this.reset()
                        }
                    }),
                    i.addPoolingTo(r),
                    t.exports = r
            }, {
                154: 154,
                165: 165,
                25: 25
            }
        ],
        6: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    var t = e.nodeName && e.nodeName.toLowerCase();
                    return 'select' === t || 'input' === t && 'file' === e.type
                }

                function o(e) {
                    var t = N.getPooled(k.change, D, e, T(e));
                    b.accumulateTwoPhaseDispatches(t),
                        x.batchedUpdates(i, t)
                }

                function i(e) {
                    C.enqueueEvents(e),
                        C.processEventQueue(!1)
                }

                function a(e, t) {
                    R = e,
                        D = t,
                        R.attachEvent('onchange', o)
                }

                function u() {
                    R && (R.detachEvent('onchange', o), R = null, D = null)
                }

                function s(e, t) {
                    return e === M.topChange ? t : void 0
                }

                function l(e, t, n) {
                    e === M.topFocus ? (u(), a(t, n)) : e === M.topBlur && u()
                }

                function c(e, t) {
                    R = e,
                        D = t,
                        I = e.value,
                        O = Object.getOwnPropertyDescriptor(e.constructor.prototype, 'value'),
                        Object.defineProperty(R, 'value', U),
                        R.attachEvent ? R.attachEvent('onpropertychange', d) : R.addEventListener('propertychange', d, !1)
                }

                function p() {
                    R && (delete R.value, R.detachEvent ? R.detachEvent('onpropertychange', d) : R.removeEventListener('propertychange', d, !1), R = null, D = null, I = null, O = null)
                }

                function d(e) {
                    if ('value' === e.propertyName) {
                        var t = e.srcElement.value;
                        t !== I && (I = t, o(e))
                    }
                }

                function f(e, t) {
                    return e === M.topInput ? t : void 0
                }

                function h(e, t, n) {
                    e === M.topFocus ? (p(), c(t, n)) : e === M.topBlur && p()
                }

                function v(e, t) {
                    return e !== M.topSelectionChange && e !== M.topKeyUp && e !== M.topKeyDown || !R || R.value === I ? void 0 : (I = R.value, D)
                }

                function m(e) {
                    return e.nodeName && 'input' === e.nodeName.toLowerCase() && ('checkbox' === e.type || 'radio' === e.type)
                }

                function g(e, t) {
                    return e === M.topClick ? t : void 0
                }
                var y = e(16),
                    C = e(17),
                    b = e(20),
                    _ = e(140),
                    E = e(40),
                    x = e(90),
                    N = e(99),
                    T = e(122),
                    P = e(129),
                    w = e(130),
                    S = e(158),
                    M = y.topLevelTypes,
                    k = {
                        change: {
                            phasedRegistrationNames: {
                                bubbled: S({
                                    onChange: null
                                }),
                                captured: S({
                                    onChangeCapture: null
                                })
                            },
                            dependencies: [
                                M.topBlur,
                                M.topChange,
                                M.topClick,
                                M.topFocus,
                                M.topInput,
                                M.topKeyDown,
                                M.topKeyUp,
                                M.topSelectionChange
                            ]
                        }
                    },
                    R = null,
                    D = null,
                    I = null,
                    O = null,
                    A = !1;
                _.canUseDOM && (A = P('change') && (!('documentMode' in document) || document.documentMode > 8));
                var L = !1;
                _.canUseDOM && (L = P('input') && (!('documentMode' in document) || document.documentMode > 11));
                var U = {
                        get: function() {
                            return O.get.call(this)
                        },
                        set: function(e) {
                            I = '' + e,
                                O.set.call(this, e)
                        }
                    },
                    F = {
                        eventTypes: k,
                        extractEvents: function(e, t, n, o) {
                            var i,
                                a,
                                u = t ? E.getNodeFromInstance(t) : window;
                            if (r(u) ? A ? i = s : a = l : w(u) ? L ? i = f : (i = v, a = h) : m(u) && (i = g), i) {
                                var c = i(e, t);
                                if (c) {
                                    var p = N.getPooled(k.change, c, n, o);
                                    return p.type = 'change',
                                        b.accumulateTwoPhaseDispatches(p),
                                        p
                                }
                            }
                            a && a(e, u, t)
                        }
                    };
                t.exports = F
            }, {
                122: 122,
                129: 129,
                130: 130,
                140: 140,
                158: 158,
                16: 16,
                17: 17,
                20: 20,
                40: 40,
                90: 90,
                99: 99
            }
        ],
        7: [
            function(e, t, n) {
                'use strict';

                function r(e, t) {
                    return Array.isArray(t) && (t = t[1]),
                        t ? t.nextSibling : e.firstChild
                }

                function o(e, t, n) {
                    c.insertTreeBefore(e, t, n)
                }

                function i(e, t, n) {
                    Array.isArray(t) ? u(e, t[0], t[1], n) : m(e, t, n)
                }

                function a(e, t) {
                    if (Array.isArray(t)) {
                        var n = t[1];
                        t = t[0],
                            s(e, t, n),
                            e.removeChild(n)
                    }
                    e.removeChild(t)
                }

                function u(e, t, n, r) {
                    for (var o = t;;) {
                        var i = o.nextSibling;
                        if (m(e, o, r), o === n) break;
                        o = i
                    }
                }

                function s(e, t, n) {
                    for (;;) {
                        var r = t.nextSibling;
                        if (r === n) break;
                        e.removeChild(r)
                    }
                }

                function l(e, t, n) {
                    var r = e.parentNode,
                        o = e.nextSibling;
                    o === t ? n && m(r, document.createTextNode(n), o) : n ? (v(o, n), s(r, o, t)) : s(r, e, t)
                }
                var c = e(8),
                    p = e(12),
                    d = e(74),
                    f = (e(40), e(70), e(113)),
                    h = e(134),
                    v = e(135),
                    m = f(function(e, t, n) {
                        e.insertBefore(t, n)
                    }),
                    g = p.dangerouslyReplaceNodeWithMarkup,
                    y = {
                        dangerouslyReplaceNodeWithMarkup: g,
                        replaceDelimitedText: l,
                        processUpdates: function(e, t) {
                            for (var n = 0; n < t.length; n++) {
                                var u = t[n];
                                switch (u.type) {
                                    case d.INSERT_MARKUP:
                                        o(e, u.content, r(e, u.afterNode));
                                        break;
                                    case d.MOVE_EXISTING:
                                        i(e, u.fromNode, r(e, u.afterNode));
                                        break;
                                    case d.SET_MARKUP:
                                        h(e, u.content);
                                        break;
                                    case d.TEXT_CONTENT:
                                        v(e, u.content);
                                        break;
                                    case d.REMOVE_NODE:
                                        a(e, u.fromNode)
                                }
                            }
                        }
                    };
                t.exports = y
            }, {
                113: 113,
                12: 12,
                134: 134,
                135: 135,
                40: 40,
                70: 70,
                74: 74,
                8: 8
            }
        ],
        8: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    if (v) {
                        var t = e.node,
                            n = e.children;
                        if (n.length)
                            for (var r = 0; r < n.length; r++) m(t, n[r], null);
                        else null != e.html ? t.innerHTML = e.html : null != e.text && d(t, e.text)
                    }
                }

                function o(e, t) {
                    e.parentNode.replaceChild(t.node, e),
                        r(t)
                }

                function i(e, t) {
                    v ? e.children.push(t) : e.node.appendChild(t.node)
                }

                function a(e, t) {
                    v ? e.html = t : e.node.innerHTML = t
                }

                function u(e, t) {
                    v ? e.text = t : d(e.node, t)
                }

                function s() {
                    return this.node.nodeName
                }

                function l(e) {
                    return {
                        node: e,
                        children: [],
                        html: null,
                        text: null,
                        toString: s
                    }
                }
                var c = e(9),
                    p = e(113),
                    d = e(135),
                    f = 1,
                    h = 11,
                    v = 'undefined' != typeof document && 'number' == typeof document.documentMode || 'undefined' != typeof navigator && 'string' == typeof navigator.userAgent && /\bEdge\/\d/.test(navigator.userAgent),
                    m = p(function(e, t, n) {
                        t.node.nodeType === h || t.node.nodeType === f && 'object' === t.node.nodeName.toLowerCase() && (null == t.node.namespaceURI || t.node.namespaceURI === c.html) ? (r(t), e.insertBefore(t.node, n)) : (e.insertBefore(t.node, n), r(t))
                    });
                l.insertTreeBefore = m,
                    l.replaceChildWithTree = o,
                    l.queueChild = i,
                    l.queueHTML = a,
                    l.queueText = u,
                    t.exports = l
            }, {
                113: 113,
                135: 135,
                9: 9
            }
        ],
        9: [
            function(e, t, n) {
                'use strict';
                var r = {
                    html: 'http://www.w3.org/1999/xhtml',
                    mathml: 'http://www.w3.org/1998/Math/MathML',
                    svg: 'http://www.w3.org/2000/svg'
                };
                t.exports = r
            }, {}
        ],
        10: [
            function(e, t, n) {
                'use strict';

                function r(e, t) {
                    return (e & t) === t
                }
                var o = e(154),
                    i = {
                        MUST_USE_PROPERTY: 1,
                        HAS_SIDE_EFFECTS: 2,
                        HAS_BOOLEAN_VALUE: 4,
                        HAS_NUMERIC_VALUE: 8,
                        HAS_POSITIVE_NUMERIC_VALUE: 24,
                        HAS_OVERLOADED_BOOLEAN_VALUE: 32,
                        injectDOMPropertyConfig: function(e) {
                            var t = i,
                                n = e.Properties || {},
                                a = e.DOMAttributeNamespaces || {},
                                s = e.DOMAttributeNames || {},
                                l = e.DOMPropertyNames || {},
                                c = e.DOMMutationMethods || {};
                            e.isCustomAttribute && u._isCustomAttributeFunctions.push(e.isCustomAttribute);
                            for (var p in n) {
                                u.properties.hasOwnProperty(p) ? o(!1) : void 0;
                                var d = p.toLowerCase(),
                                    f = n[p],
                                    h = {
                                        attributeName: d,
                                        attributeNamespace: null,
                                        propertyName: p,
                                        mutationMethod: null,
                                        mustUseProperty: r(f, t.MUST_USE_PROPERTY),
                                        hasSideEffects: r(f, t.HAS_SIDE_EFFECTS),
                                        hasBooleanValue: r(f, t.HAS_BOOLEAN_VALUE),
                                        hasNumericValue: r(f, t.HAS_NUMERIC_VALUE),
                                        hasPositiveNumericValue: r(f, t.HAS_POSITIVE_NUMERIC_VALUE),
                                        hasOverloadedBooleanValue: r(f, t.HAS_OVERLOADED_BOOLEAN_VALUE)
                                    };
                                if (!h.mustUseProperty && h.hasSideEffects ? o(!1) : void 0, h.hasBooleanValue + h.hasNumericValue + h.hasOverloadedBooleanValue <= 1 ? void 0 : o(!1), s.hasOwnProperty(p)) {
                                    var v = s[p];
                                    h.attributeName = v
                                }
                                a.hasOwnProperty(p) && (h.attributeNamespace = a[p]),
                                    l.hasOwnProperty(p) && (h.propertyName = l[p]),
                                    c.hasOwnProperty(p) && (h.mutationMethod = c[p]),
                                    u.properties[p] = h
                            }
                        }
                    },
                    a = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD',
                    u = {
                        ID_ATTRIBUTE_NAME: 'data-reactid',
                        ROOT_ATTRIBUTE_NAME: 'data-reactroot',
                        ATTRIBUTE_NAME_START_CHAR: a,
                        ATTRIBUTE_NAME_CHAR: a + '\\-.0-9\\uB7\\u0300-\\u036F\\u203F-\\u2040',
                        properties: {},
                        getPossibleStandardName: null,
                        _isCustomAttributeFunctions: [],
                        isCustomAttribute: function(e) {
                            for (var t = 0; t < u._isCustomAttributeFunctions.length; t++) {
                                var n = u._isCustomAttributeFunctions[t];
                                if (n(e)) return !0
                            }
                            return !1
                        },
                        injection: i
                    };
                t.exports = u
            }, {
                154: 154
            }
        ],
        11: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    return l.hasOwnProperty(e) ? !0 : s.hasOwnProperty(e) ? !1 : u.test(e) ? (l[e] = !0, !0) : (s[e] = !0, !1)
                }

                function o(e, t) {
                    return null == t || e.hasBooleanValue && !t || e.hasNumericValue && isNaN(t) || e.hasPositiveNumericValue && 1 > t || e.hasOverloadedBooleanValue && t === !1
                }
                var i = e(10),
                    a = (e(40), e(48), e(70), e(132)),
                    u = (e(164), new RegExp('^[' + i.ATTRIBUTE_NAME_START_CHAR + '][' + i.ATTRIBUTE_NAME_CHAR + ']*$')),
                    s = {},
                    l = {},
                    c = {
                        createMarkupForID: function(e) {
                            return i.ID_ATTRIBUTE_NAME + '=' + a(e)
                        },
                        setAttributeForID: function(e, t) {
                            e.setAttribute(i.ID_ATTRIBUTE_NAME, t)
                        },
                        createMarkupForRoot: function() {
                            return i.ROOT_ATTRIBUTE_NAME + '=""'
                        },
                        setAttributeForRoot: function(e) {
                            e.setAttribute(i.ROOT_ATTRIBUTE_NAME, '')
                        },
                        createMarkupForProperty: function(e, t) {
                            var n = i.properties.hasOwnProperty(e) ? i.properties[e] : null;
                            if (n) {
                                if (o(n, t)) return '';
                                var r = n.attributeName;
                                return n.hasBooleanValue || n.hasOverloadedBooleanValue && t === !0 ? r + '=""' : r + '=' + a(t)
                            }
                            return i.isCustomAttribute(e) ? null == t ? '' : e + '=' + a(t) : null
                        },
                        createMarkupForCustomAttribute: function(e, t) {
                            return r(e) && null != t ? e + '=' + a(t) : ''
                        },
                        setValueForProperty: function(e, t, n) {
                            var r = i.properties.hasOwnProperty(t) ? i.properties[t] : null;
                            if (r) {
                                var a = r.mutationMethod;
                                if (a) a(e, n);
                                else {
                                    if (o(r, n)) return void this.deleteValueForProperty(e, t);
                                    if (r.mustUseProperty) {
                                        var u = r.propertyName;
                                        r.hasSideEffects && '' + e[u] == '' + n || (e[u] = n)
                                    } else {
                                        var s = r.attributeName,
                                            l = r.attributeNamespace;
                                        l ? e.setAttributeNS(l, s, '' + n) : r.hasBooleanValue || r.hasOverloadedBooleanValue && n === !0 ? e.setAttribute(s, '') : e.setAttribute(s, '' + n)
                                    }
                                }
                            } else if (i.isCustomAttribute(t)) return void c.setValueForAttribute(e, t, n)
                        },
                        setValueForAttribute: function(e, t, n) {
                            r(t) && (null == n ? e.removeAttribute(t) : e.setAttribute(t, '' + n))
                        },
                        deleteValueForProperty: function(e, t) {
                            var n = i.properties.hasOwnProperty(t) ? i.properties[t] : null;
                            if (n) {
                                var r = n.mutationMethod;
                                if (r) r(e, void 0);
                                else if (n.mustUseProperty) {
                                    var o = n.propertyName;
                                    n.hasBooleanValue ? e[o] = !1 : n.hasSideEffects && '' + e[o] == '' || (e[o] = '')
                                } else e.removeAttribute(n.attributeName)
                            } else i.isCustomAttribute(t) && e.removeAttribute(t)
                        }
                    };
                t.exports = c
            }, {
                10: 10,
                132: 132,
                164: 164,
                40: 40,
                48: 48,
                70: 70
            }
        ],
        12: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    return e.substring(1, e.indexOf(' '))
                }
                var o = e(8),
                    i = e(140),
                    a = e(145),
                    u = e(146),
                    s = e(150),
                    l = e(154),
                    c = /^(<[^ \/>]+)/,
                    p = 'data-danger-index',
                    d = {
                        dangerouslyRenderMarkup: function(e) {
                            i.canUseDOM ? void 0 : l(!1);
                            for (var t, n = {}, o = 0; o < e.length; o++) e[o] ? void 0 : l(!1),
                                t = r(e[o]),
                                t = s(t) ? t : '*',
                                n[t] = n[t] || [],
                                n[t][o] = e[o];
                            var d = [],
                                f = 0;
                            for (t in n)
                                if (n.hasOwnProperty(t)) {
                                    var h,
                                        v = n[t];
                                    for (h in v)
                                        if (v.hasOwnProperty(h)) {
                                            var m = v[h];
                                            v[h] = m.replace(c, '$1 ' + p + '="' + h + '" ')
                                        }
                                    for (var g = a(v.join(''), u), y = 0; y < g.length; ++y) {
                                        var C = g[y];
                                        C.hasAttribute && C.hasAttribute(p) && (h = +C.getAttribute(p), C.removeAttribute(p), d.hasOwnProperty(h) ? l(!1) : void 0, d[h] = C, f += 1)
                                    }
                                }
                            return f !== d.length ? l(!1) : void 0,
                                d.length !== e.length ? l(!1) : void 0,
                                d
                        },
                        dangerouslyReplaceNodeWithMarkup: function(e, t) {
                            if (i.canUseDOM ? void 0 : l(!1), t ? void 0 : l(!1), 'HTML' === e.nodeName ? l(!1) : void 0, 'string' == typeof t) {
                                var n = a(t, u)[0];
                                e.parentNode.replaceChild(n, e)
                            } else o.replaceChildWithTree(e, t)
                        }
                    };
                t.exports = d
            }, {
                140: 140,
                145: 145,
                146: 146,
                150: 150,
                154: 154,
                8: 8
            }
        ],
        13: [
            function(e, t, n) {
                'use strict';
                var r = e(158),
                    o = [
                        r({
                            ResponderEventPlugin: null
                        }),
                        r({
                            SimpleEventPlugin: null
                        }),
                        r({
                            TapEventPlugin: null
                        }),
                        r({
                            EnterLeaveEventPlugin: null
                        }),
                        r({
                            ChangeEventPlugin: null
                        }),
                        r({
                            SelectEventPlugin: null
                        }),
                        r({
                            BeforeInputEventPlugin: null
                        })
                    ];
                t.exports = o
            }, {
                158: 158
            }
        ],
        14: [
            function(e, t, n) {
                'use strict';
                var r = {
                        onClick: !0,
                        onDoubleClick: !0,
                        onMouseDown: !0,
                        onMouseMove: !0,
                        onMouseUp: !0,
                        onClickCapture: !0,
                        onDoubleClickCapture: !0,
                        onMouseDownCapture: !0,
                        onMouseMoveCapture: !0,
                        onMouseUpCapture: !0
                    },
                    o = {
                        getNativeProps: function(e, t) {
                            if (!t.disabled) return t;
                            var n = {};
                            for (var o in t) !r[o] && t.hasOwnProperty(o) && (n[o] = t[o]);
                            return n
                        }
                    };
                t.exports = o
            }, {}
        ],
        15: [
            function(e, t, n) {
                'use strict';
                var r = e(16),
                    o = e(20),
                    i = e(40),
                    a = e(103),
                    u = e(158),
                    s = r.topLevelTypes,
                    l = {
                        mouseEnter: {
                            registrationName: u({
                                onMouseEnter: null
                            }),
                            dependencies: [
                                s.topMouseOut,
                                s.topMouseOver
                            ]
                        },
                        mouseLeave: {
                            registrationName: u({
                                onMouseLeave: null
                            }),
                            dependencies: [
                                s.topMouseOut,
                                s.topMouseOver
                            ]
                        }
                    },
                    c = {
                        eventTypes: l,
                        extractEvents: function(e, t, n, r) {
                            if (e === s.topMouseOver && (n.relatedTarget || n.fromElement)) return null;
                            if (e !== s.topMouseOut && e !== s.topMouseOver) return null;
                            var u;
                            if (r.window === r) u = r;
                            else {
                                var c = r.ownerDocument;
                                u = c ? c.defaultView || c.parentWindow : window
                            }
                            var p,
                                d;
                            if (e === s.topMouseOut) {
                                p = t;
                                var f = n.relatedTarget || n.toElement;
                                d = f ? i.getClosestInstanceFromNode(f) : null
                            } else p = null,
                                d = t;
                            if (p === d) return null;
                            var h = null == p ? u : i.getNodeFromInstance(p),
                                v = null == d ? u : i.getNodeFromInstance(d),
                                m = a.getPooled(l.mouseLeave, p, n, r);
                            m.type = 'mouseleave',
                                m.target = h,
                                m.relatedTarget = v;
                            var g = a.getPooled(l.mouseEnter, d, n, r);
                            return g.type = 'mouseenter',
                                g.target = v,
                                g.relatedTarget = h,
                                o.accumulateEnterLeaveDispatches(m, g, p, d), [
                                    m,
                                    g
                                ]
                        }
                    };
                t.exports = c
            }, {
                103: 103,
                158: 158,
                16: 16,
                20: 20,
                40: 40
            }
        ],
        16: [
            function(e, t, n) {
                'use strict';
                var r = e(157),
                    o = r({
                        bubbled: null,
                        captured: null
                    }),
                    i = r({
                        topAbort: null,
                        topAnimationEnd: null,
                        topAnimationIteration: null,
                        topAnimationStart: null,
                        topBlur: null,
                        topCanPlay: null,
                        topCanPlayThrough: null,
                        topChange: null,
                        topClick: null,
                        topCompositionEnd: null,
                        topCompositionStart: null,
                        topCompositionUpdate: null,
                        topContextMenu: null,
                        topCopy: null,
                        topCut: null,
                        topDoubleClick: null,
                        topDrag: null,
                        topDragEnd: null,
                        topDragEnter: null,
                        topDragExit: null,
                        topDragLeave: null,
                        topDragOver: null,
                        topDragStart: null,
                        topDrop: null,
                        topDurationChange: null,
                        topEmptied: null,
                        topEncrypted: null,
                        topEnded: null,
                        topError: null,
                        topFocus: null,
                        topInput: null,
                        topInvalid: null,
                        topKeyDown: null,
                        topKeyPress: null,
                        topKeyUp: null,
                        topLoad: null,
                        topLoadedData: null,
                        topLoadedMetadata: null,
                        topLoadStart: null,
                        topMouseDown: null,
                        topMouseMove: null,
                        topMouseOut: null,
                        topMouseOver: null,
                        topMouseUp: null,
                        topPaste: null,
                        topPause: null,
                        topPlay: null,
                        topPlaying: null,
                        topProgress: null,
                        topRateChange: null,
                        topReset: null,
                        topScroll: null,
                        topSeeked: null,
                        topSeeking: null,
                        topSelectionChange: null,
                        topStalled: null,
                        topSubmit: null,
                        topSuspend: null,
                        topTextInput: null,
                        topTimeUpdate: null,
                        topTouchCancel: null,
                        topTouchEnd: null,
                        topTouchMove: null,
                        topTouchStart: null,
                        topTransitionEnd: null,
                        topVolumeChange: null,
                        topWaiting: null,
                        topWheel: null
                    }),
                    a = {
                        topLevelTypes: i,
                        PropagationPhases: o
                    };
                t.exports = a
            }, {
                157: 157
            }
        ],
        17: [
            function(e, t, n) {
                'use strict';
                var r = e(18),
                    o = e(19),
                    i = e(63),
                    a = e(110),
                    u = e(118),
                    s = e(154),
                    l = {},
                    c = null,
                    p = function(e, t) {
                        e && (o.executeDispatchesInOrder(e, t), e.isPersistent() || e.constructor.release(e))
                    },
                    d = function(e) {
                        return p(e, !0)
                    },
                    f = function(e) {
                        return p(e, !1)
                    },
                    h = {
                        injection: {
                            injectEventPluginOrder: r.injectEventPluginOrder,
                            injectEventPluginsByName: r.injectEventPluginsByName
                        },
                        putListener: function(e, t, n) {
                            'function' != typeof n ? s(!1) : void 0;
                            var o = l[t] || (l[t] = {});
                            o[e._rootNodeID] = n;
                            var i = r.registrationNameModules[t];
                            i && i.didPutListener && i.didPutListener(e, t, n)
                        },
                        getListener: function(e, t) {
                            var n = l[t];
                            return n && n[e._rootNodeID]
                        },
                        deleteListener: function(e, t) {
                            var n = r.registrationNameModules[t];
                            n && n.willDeleteListener && n.willDeleteListener(e, t);
                            var o = l[t];
                            o && delete o[e._rootNodeID]
                        },
                        deleteAllListeners: function(e) {
                            for (var t in l)
                                if (l[t][e._rootNodeID]) {
                                    var n = r.registrationNameModules[t];
                                    n && n.willDeleteListener && n.willDeleteListener(e, t),
                                        delete l[t][e._rootNodeID]
                                }
                        },
                        extractEvents: function(e, t, n, o) {
                            for (var i, u = r.plugins, s = 0; s < u.length; s++) {
                                var l = u[s];
                                if (l) {
                                    var c = l.extractEvents(e, t, n, o);
                                    c && (i = a(i, c))
                                }
                            }
                            return i
                        },
                        enqueueEvents: function(e) {
                            e && (c = a(c, e))
                        },
                        processEventQueue: function(e) {
                            var t = c;
                            c = null,
                                e ? u(t, d) : u(t, f),
                                c ? s(!1) : void 0,
                                i.rethrowCaughtError()
                        },
                        __purge: function() {
                            l = {}
                        },
                        __getListenerBank: function() {
                            return l
                        }
                    };
                t.exports = h
            }, {
                110: 110,
                118: 118,
                154: 154,
                18: 18,
                19: 19,
                63: 63
            }
        ],
        18: [
            function(e, t, n) {
                'use strict';

                function r() {
                    if (u)
                        for (var e in s) {
                            var t = s[e],
                                n = u.indexOf(e);
                            if (n > -1 ? void 0 : a(!1), !l.plugins[n]) {
                                t.extractEvents ? void 0 : a(!1),
                                    l.plugins[n] = t;
                                var r = t.eventTypes;
                                for (var i in r) o(r[i], t, i) ? void 0 : a(!1)
                            }
                        }
                }

                function o(e, t, n) {
                    l.eventNameDispatchConfigs.hasOwnProperty(n) ? a(!1) : void 0,
                        l.eventNameDispatchConfigs[n] = e;
                    var r = e.phasedRegistrationNames;
                    if (r) {
                        for (var o in r)
                            if (r.hasOwnProperty(o)) {
                                var u = r[o];
                                i(u, t, n)
                            }
                        return !0
                    }
                    return e.registrationName ? (i(e.registrationName, t, n), !0) : !1
                }

                function i(e, t, n) {
                    l.registrationNameModules[e] ? a(!1) : void 0,
                        l.registrationNameModules[e] = t,
                        l.registrationNameDependencies[e] = t.eventTypes[n].dependencies
                }
                var a = e(154),
                    u = null,
                    s = {},
                    l = {
                        plugins: [],
                        eventNameDispatchConfigs: {},
                        registrationNameModules: {},
                        registrationNameDependencies: {},
                        possibleRegistrationNames: null,
                        injectEventPluginOrder: function(e) {
                            u ? a(!1) : void 0,
                                u = Array.prototype.slice.call(e),
                                r()
                        },
                        injectEventPluginsByName: function(e) {
                            var t = !1;
                            for (var n in e)
                                if (e.hasOwnProperty(n)) {
                                    var o = e[n];
                                    s.hasOwnProperty(n) && s[n] === o || (s[n] ? a(!1) : void 0, s[n] = o, t = !0)
                                }
                            t && r()
                        },
                        getPluginModuleForEvent: function(e) {
                            var t = e.dispatchConfig;
                            if (t.registrationName) return l.registrationNameModules[t.registrationName] || null;
                            for (var n in t.phasedRegistrationNames)
                                if (t.phasedRegistrationNames.hasOwnProperty(n)) {
                                    var r = l.registrationNameModules[t.phasedRegistrationNames[n]];
                                    if (r) return r
                                }
                            return null
                        },
                        _resetEventPlugins: function() {
                            u = null;
                            for (var e in s) s.hasOwnProperty(e) && delete s[e];
                            l.plugins.length = 0;
                            var t = l.eventNameDispatchConfigs;
                            for (var n in t) t.hasOwnProperty(n) && delete t[n];
                            var r = l.registrationNameModules;
                            for (var o in r) r.hasOwnProperty(o) && delete r[o]
                        }
                    };
                t.exports = l
            }, {
                154: 154
            }
        ],
        19: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    return e === y.topMouseUp || e === y.topTouchEnd || e === y.topTouchCancel
                }

                function o(e) {
                    return e === y.topMouseMove || e === y.topTouchMove
                }

                function i(e) {
                    return e === y.topMouseDown || e === y.topTouchStart
                }

                function a(e, t, n, r) {
                    var o = e.type || 'unknown-event';
                    e.currentTarget = C.getNodeFromInstance(r),
                        t ? v.invokeGuardedCallbackWithCatch(o, n, e) : v.invokeGuardedCallback(o, n, e),
                        e.currentTarget = null
                }

                function u(e, t) {
                    var n = e._dispatchListeners,
                        r = e._dispatchInstances;
                    if (Array.isArray(n))
                        for (var o = 0; o < n.length && !e.isPropagationStopped(); o++) a(e, t, n[o], r[o]);
                    else n && a(e, t, n, r);
                    e._dispatchListeners = null,
                        e._dispatchInstances = null
                }

                function s(e) {
                    var t = e._dispatchListeners,
                        n = e._dispatchInstances;
                    if (Array.isArray(t)) {
                        for (var r = 0; r < t.length && !e.isPropagationStopped(); r++)
                            if (t[r](e, n[r])) return n[r]
                    } else if (t && t(e, n)) return n;
                    return null
                }

                function l(e) {
                    var t = s(e);
                    return e._dispatchInstances = null,
                        e._dispatchListeners = null,
                        t
                }

                function c(e) {
                    var t = e._dispatchListeners,
                        n = e._dispatchInstances;
                    Array.isArray(t) ? m(!1) : void 0,
                        e.currentTarget = t ? C.getNodeFromInstance(n) : null;
                    var r = t ? t(e) : null;
                    return e.currentTarget = null,
                        e._dispatchListeners = null,
                        e._dispatchInstances = null,
                        r
                }

                function p(e) {
                    return !!e._dispatchListeners
                }
                var d,
                    f,
                    h = e(16),
                    v = e(63),
                    m = e(154),
                    g = (e(164), {
                        injectComponentTree: function(e) {
                            d = e
                        },
                        injectTreeTraversal: function(e) {
                            f = e
                        }
                    }),
                    y = h.topLevelTypes,
                    C = {
                        isEndish: r,
                        isMoveish: o,
                        isStartish: i,
                        executeDirectDispatch: c,
                        executeDispatchesInOrder: u,
                        executeDispatchesInOrderStopAtTrue: l,
                        hasDispatches: p,
                        getInstanceFromNode: function(e) {
                            return d.getInstanceFromNode(e)
                        },
                        getNodeFromInstance: function(e) {
                            return d.getNodeFromInstance(e)
                        },
                        isAncestor: function(e, t) {
                            return f.isAncestor(e, t)
                        },
                        getLowestCommonAncestor: function(e, t) {
                            return f.getLowestCommonAncestor(e, t)
                        },
                        getParentInstance: function(e) {
                            return f.getParentInstance(e)
                        },
                        traverseTwoPhase: function(e, t, n) {
                            return f.traverseTwoPhase(e, t, n)
                        },
                        traverseEnterLeave: function(e, t, n, r, o) {
                            return f.traverseEnterLeave(e, t, n, r, o)
                        },
                        injection: g
                    };
                t.exports = C
            }, {
                154: 154,
                16: 16,
                164: 164,
                63: 63
            }
        ],
        20: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n) {
                    var r = t.dispatchConfig.phasedRegistrationNames[n];
                    return C(e, r)
                }

                function o(e, t, n) {
                    var o = t ? y.bubbled : y.captured,
                        i = r(e, n, o);
                    i && (n._dispatchListeners = m(n._dispatchListeners, i), n._dispatchInstances = m(n._dispatchInstances, e))
                }

                function i(e) {
                    e && e.dispatchConfig.phasedRegistrationNames && v.traverseTwoPhase(e._targetInst, o, e)
                }

                function a(e) {
                    if (e && e.dispatchConfig.phasedRegistrationNames) {
                        var t = e._targetInst,
                            n = t ? v.getParentInstance(t) : null;
                        v.traverseTwoPhase(n, o, e)
                    }
                }

                function u(e, t, n) {
                    if (n && n.dispatchConfig.registrationName) {
                        var r = n.dispatchConfig.registrationName,
                            o = C(e, r);
                        o && (n._dispatchListeners = m(n._dispatchListeners, o), n._dispatchInstances = m(n._dispatchInstances, e))
                    }
                }

                function s(e) {
                    e && e.dispatchConfig.registrationName && u(e._targetInst, null, e)
                }

                function l(e) {
                    g(e, i)
                }

                function c(e) {
                    g(e, a)
                }

                function p(e, t, n, r) {
                    v.traverseEnterLeave(n, r, u, e, t)
                }

                function d(e) {
                    g(e, s)
                }
                var f = e(16),
                    h = e(17),
                    v = e(19),
                    m = e(110),
                    g = e(118),
                    y = (e(164), f.PropagationPhases),
                    C = h.getListener,
                    b = {
                        accumulateTwoPhaseDispatches: l,
                        accumulateTwoPhaseDispatchesSkipTarget: c,
                        accumulateDirectDispatches: d,
                        accumulateEnterLeaveDispatches: p
                    };
                t.exports = b
            }, {
                110: 110,
                118: 118,
                16: 16,
                164: 164,
                17: 17,
                19: 19
            }
        ],
        21: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    this._root = e,
                        this._startText = this.getText(),
                        this._fallbackText = null
                }
                var o = e(165),
                    i = e(25),
                    a = e(126);
                o(r.prototype, {
                        destructor: function() {
                            this._root = null,
                                this._startText = null,
                                this._fallbackText = null
                        },
                        getText: function() {
                            return 'value' in this._root ? this._root.value : this._root[a()]
                        },
                        getData: function() {
                            if (this._fallbackText) return this._fallbackText;
                            var e,
                                t,
                                n = this._startText,
                                r = n.length,
                                o = this.getText(),
                                i = o.length;
                            for (e = 0; r > e && n[e] === o[e]; e++);
                            var a = r - e;
                            for (t = 1; a >= t && n[r - t] === o[i - t]; t++);
                            var u = t > 1 ? 1 - t : void 0;
                            return this._fallbackText = o.slice(e, u),
                                this._fallbackText
                        }
                    }),
                    i.addPoolingTo(r),
                    t.exports = r
            }, {
                126: 126,
                165: 165,
                25: 25
            }
        ],
        22: [
            function(e, t, n) {
                'use strict';
                var r = e(10),
                    o = r.injection.MUST_USE_PROPERTY,
                    i = r.injection.HAS_BOOLEAN_VALUE,
                    a = r.injection.HAS_SIDE_EFFECTS,
                    u = r.injection.HAS_NUMERIC_VALUE,
                    s = r.injection.HAS_POSITIVE_NUMERIC_VALUE,
                    l = r.injection.HAS_OVERLOADED_BOOLEAN_VALUE,
                    c = {
                        isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + r.ATTRIBUTE_NAME_CHAR + ']*$')),
                        Properties: {
                            accept: 0,
                            acceptCharset: 0,
                            accessKey: 0,
                            action: 0,
                            allowFullScreen: i,
                            allowTransparency: 0,
                            alt: 0,
                            async: i,
                            autoComplete: 0,
                            autoPlay: i,
                            capture: i,
                            cellPadding: 0,
                            cellSpacing: 0,
                            charSet: 0,
                            challenge: 0,
                            checked: o | i,
                            cite: 0,
                            classID: 0,
                            className: 0,
                            cols: s,
                            colSpan: 0,
                            content: 0,
                            contentEditable: 0,
                            contextMenu: 0,
                            controls: i,
                            coords: 0,
                            crossOrigin: 0,
                            data: 0,
                            dateTime: 0,
                            'default': i,
                            defer: i,
                            dir: 0,
                            disabled: i,
                            download: l,
                            draggable: 0,
                            encType: 0,
                            form: 0,
                            formAction: 0,
                            formEncType: 0,
                            formMethod: 0,
                            formNoValidate: i,
                            formTarget: 0,
                            frameBorder: 0,
                            headers: 0,
                            height: 0,
                            hidden: i,
                            high: 0,
                            href: 0,
                            hrefLang: 0,
                            htmlFor: 0,
                            httpEquiv: 0,
                            icon: 0,
                            id: 0,
                            inputMode: 0,
                            integrity: 0,
                            is: 0,
                            keyParams: 0,
                            keyType: 0,
                            kind: 0,
                            label: 0,
                            lang: 0,
                            list: 0,
                            loop: i,
                            low: 0,
                            manifest: 0,
                            marginHeight: 0,
                            marginWidth: 0,
                            max: 0,
                            maxLength: 0,
                            media: 0,
                            mediaGroup: 0,
                            method: 0,
                            min: 0,
                            minLength: 0,
                            multiple: o | i,
                            muted: o | i,
                            name: 0,
                            nonce: 0,
                            noValidate: i,
                            open: i,
                            optimum: 0,
                            pattern: 0,
                            placeholder: 0,
                            poster: 0,
                            preload: 0,
                            profile: 0,
                            radioGroup: 0,
                            readOnly: i,
                            rel: 0,
                            required: i,
                            reversed: i,
                            role: 0,
                            rows: s,
                            rowSpan: u,
                            sandbox: 0,
                            scope: 0,
                            scoped: i,
                            scrolling: 0,
                            seamless: i,
                            selected: o | i,
                            shape: 0,
                            size: s,
                            sizes: 0,
                            span: s,
                            spellCheck: 0,
                            src: 0,
                            srcDoc: 0,
                            srcLang: 0,
                            srcSet: 0,
                            start: u,
                            step: 0,
                            style: 0,
                            summary: 0,
                            tabIndex: 0,
                            target: 0,
                            title: 0,
                            type: 0,
                            useMap: 0,
                            value: o | a,
                            width: 0,
                            wmode: 0,
                            wrap: 0,
                            about: 0,
                            datatype: 0,
                            inlist: 0,
                            prefix: 0,
                            property: 0,
                            resource: 0,
                            'typeof': 0,
                            vocab: 0,
                            autoCapitalize: 0,
                            autoCorrect: 0,
                            autoSave: 0,
                            color: 0,
                            itemProp: 0,
                            itemScope: i,
                            itemType: 0,
                            itemID: 0,
                            itemRef: 0,
                            results: 0,
                            security: 0,
                            unselectable: 0
                        },
                        DOMAttributeNames: {
                            acceptCharset: 'accept-charset',
                            className: 'class',
                            htmlFor: 'for',
                            httpEquiv: 'http-equiv'
                        },
                        DOMPropertyNames: {}
                    };
                t.exports = c
            }, {
                10: 10
            }
        ],
        23: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    var t = /[=:]/g,
                        n = {
                            '=': '=0',
                            ':': '=2'
                        },
                        r = ('' + e).replace(t, function(e) {
                            return n[e]
                        });
                    return '$' + r
                }

                function o(e) {
                    var t = /(=0|=2)/g,
                        n = {
                            '=0': '=',
                            '=2': ':'
                        },
                        r = '.' === e[0] && '$' === e[1] ? e.substring(2) : e.substring(1);
                    return ('' + r).replace(t, function(e) {
                        return n[e]
                    })
                }
                var i = {
                    escape: r,
                    unescape: o
                };
                t.exports = i
            }, {}
        ],
        24: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    null != e.checkedLink && null != e.valueLink ? l(!1) : void 0
                }

                function o(e) {
                    r(e),
                        null != e.value || null != e.onChange ? l(!1) : void 0
                }

                function i(e) {
                    r(e),
                        null != e.checked || null != e.onChange ? l(!1) : void 0
                }

                function a(e) {
                    if (e) {
                        var t = e.getName();
                        if (t) return ' Check the render method of `' + t + '`.'
                    }
                    return ''
                }
                var u = e(81),
                    s = e(80),
                    l = e(154),
                    c = (e(164), {
                        button: !0,
                        checkbox: !0,
                        image: !0,
                        hidden: !0,
                        radio: !0,
                        reset: !0,
                        submit: !0
                    }),
                    p = {
                        value: function(e, t, n) {
                            return !e[t] || c[e.type] || e.onChange || e.readOnly || e.disabled ? null : new Error('You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.')
                        },
                        checked: function(e, t, n) {
                            return !e[t] || e.onChange || e.readOnly || e.disabled ? null : new Error('You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.')
                        },
                        onChange: u.func
                    },
                    d = {},
                    f = {
                        checkPropTypes: function(e, t, n) {
                            for (var r in p) {
                                if (p.hasOwnProperty(r)) var o = p[r](t, r, e, s.prop);
                                o instanceof Error && !(o.message in d) && (d[o.message] = !0, a(n))
                            }
                        },
                        getValue: function(e) {
                            return e.valueLink ? (o(e), e.valueLink.value) : e.value
                        },
                        getChecked: function(e) {
                            return e.checkedLink ? (i(e), e.checkedLink.value) : e.checked
                        },
                        executeOnChange: function(e, t) {
                            return e.valueLink ? (o(e), e.valueLink.requestChange(t.target.value)) : e.checkedLink ? (i(e), e.checkedLink.requestChange(t.target.checked)) : e.onChange ? e.onChange.call(void 0, t) : void 0
                        }
                    };
                t.exports = f
            }, {
                154: 154,
                164: 164,
                80: 80,
                81: 81
            }
        ],
        25: [
            function(e, t, n) {
                'use strict';
                var r = e(154),
                    o = function(e) {
                        var t = this;
                        if (t.instancePool.length) {
                            var n = t.instancePool.pop();
                            return t.call(n, e),
                                n
                        }
                        return new t(e)
                    },
                    i = function(e, t) {
                        var n = this;
                        if (n.instancePool.length) {
                            var r = n.instancePool.pop();
                            return n.call(r, e, t),
                                r
                        }
                        return new n(e, t)
                    },
                    a = function(e, t, n) {
                        var r = this;
                        if (r.instancePool.length) {
                            var o = r.instancePool.pop();
                            return r.call(o, e, t, n),
                                o
                        }
                        return new r(e, t, n)
                    },
                    u = function(e, t, n, r) {
                        var o = this;
                        if (o.instancePool.length) {
                            var i = o.instancePool.pop();
                            return o.call(i, e, t, n, r),
                                i
                        }
                        return new o(e, t, n, r)
                    },
                    s = function(e, t, n, r, o) {
                        var i = this;
                        if (i.instancePool.length) {
                            var a = i.instancePool.pop();
                            return i.call(a, e, t, n, r, o),
                                a
                        }
                        return new i(e, t, n, r, o)
                    },
                    l = function(e) {
                        var t = this;
                        e instanceof t ? void 0 : r(!1),
                            e.destructor(),
                            t.instancePool.length < t.poolSize && t.instancePool.push(e)
                    },
                    c = 10,
                    p = o,
                    d = function(e, t) {
                        var n = e;
                        return n.instancePool = [],
                            n.getPooled = t || p,
                            n.poolSize || (n.poolSize = c),
                            n.release = l,
                            n
                    },
                    f = {
                        addPoolingTo: d,
                        oneArgumentPooler: o,
                        twoArgumentPooler: i,
                        threeArgumentPooler: a,
                        fourArgumentPooler: u,
                        fiveArgumentPooler: s
                    };
                t.exports = f
            }, {
                154: 154
            }
        ],
        26: [
            function(e, t, n) {
                'use strict';
                var r = e(165),
                    o = e(29),
                    i = e(31),
                    a = e(30),
                    u = e(44),
                    s = e(60),
                    l = (e(61), e(81)),
                    c = e(91),
                    p = e(131),
                    d = (e(164), s.createElement),
                    f = s.createFactory,
                    h = s.cloneElement,
                    v = r,
                    m = {
                        Children: {
                            map: o.map,
                            forEach: o.forEach,
                            count: o.count,
                            toArray: o.toArray,
                            only: p
                        },
                        Component: i,
                        createElement: d,
                        cloneElement: h,
                        isValidElement: s.isValidElement,
                        PropTypes: l,
                        createClass: a.createClass,
                        createFactory: f,
                        createMixin: function(e) {
                            return e
                        },
                        DOM: u,
                        version: c,
                        __spread: v
                    };
                t.exports = m
            }, {
                131: 131,
                164: 164,
                165: 165,
                29: 29,
                30: 30,
                31: 31,
                44: 44,
                60: 60,
                61: 61,
                81: 81,
                91: 91
            }
        ],
        27: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    return Object.prototype.hasOwnProperty.call(e, m) || (e[m] = h++, d[e[m]] = {}),
                        d[e[m]]
                }
                var o,
                    i = e(165),
                    a = e(16),
                    u = e(18),
                    s = e(64),
                    l = e(109),
                    c = e(127),
                    p = e(129),
                    d = {},
                    f = !1,
                    h = 0,
                    v = {
                        topAbort: 'abort',
                        topAnimationEnd: c('animationend') || 'animationend',
                        topAnimationIteration: c('animationiteration') || 'animationiteration',
                        topAnimationStart: c('animationstart') || 'animationstart',
                        topBlur: 'blur',
                        topCanPlay: 'canplay',
                        topCanPlayThrough: 'canplaythrough',
                        topChange: 'change',
                        topClick: 'click',
                        topCompositionEnd: 'compositionend',
                        topCompositionStart: 'compositionstart',
                        topCompositionUpdate: 'compositionupdate',
                        topContextMenu: 'contextmenu',
                        topCopy: 'copy',
                        topCut: 'cut',
                        topDoubleClick: 'dblclick',
                        topDrag: 'drag',
                        topDragEnd: 'dragend',
                        topDragEnter: 'dragenter',
                        topDragExit: 'dragexit',
                        topDragLeave: 'dragleave',
                        topDragOver: 'dragover',
                        topDragStart: 'dragstart',
                        topDrop: 'drop',
                        topDurationChange: 'durationchange',
                        topEmptied: 'emptied',
                        topEncrypted: 'encrypted',
                        topEnded: 'ended',
                        topError: 'error',
                        topFocus: 'focus',
                        topInput: 'input',
                        topKeyDown: 'keydown',
                        topKeyPress: 'keypress',
                        topKeyUp: 'keyup',
                        topLoadedData: 'loadeddata',
                        topLoadedMetadata: 'loadedmetadata',
                        topLoadStart: 'loadstart',
                        topMouseDown: 'mousedown',
                        topMouseMove: 'mousemove',
                        topMouseOut: 'mouseout',
                        topMouseOver: 'mouseover',
                        topMouseUp: 'mouseup',
                        topPaste: 'paste',
                        topPause: 'pause',
                        topPlay: 'play',
                        topPlaying: 'playing',
                        topProgress: 'progress',
                        topRateChange: 'ratechange',
                        topScroll: 'scroll',
                        topSeeked: 'seeked',
                        topSeeking: 'seeking',
                        topSelectionChange: 'selectionchange',
                        topStalled: 'stalled',
                        topSuspend: 'suspend',
                        topTextInput: 'textInput',
                        topTimeUpdate: 'timeupdate',
                        topTouchCancel: 'touchcancel',
                        topTouchEnd: 'touchend',
                        topTouchMove: 'touchmove',
                        topTouchStart: 'touchstart',
                        topTransitionEnd: c('transitionend') || 'transitionend',
                        topVolumeChange: 'volumechange',
                        topWaiting: 'waiting',
                        topWheel: 'wheel'
                    },
                    m = '_reactListenersID' + String(Math.random()).slice(2),
                    g = i({}, s, {
                        ReactEventListener: null,
                        injection: {
                            injectReactEventListener: function(e) {
                                e.setHandleTopLevel(g.handleTopLevel),
                                    g.ReactEventListener = e
                            }
                        },
                        setEnabled: function(e) {
                            g.ReactEventListener && g.ReactEventListener.setEnabled(e)
                        },
                        isEnabled: function() {
                            return !(!g.ReactEventListener || !g.ReactEventListener.isEnabled())
                        },
                        listenTo: function(e, t) {
                            for (var n = t, o = r(n), i = u.registrationNameDependencies[e], s = a.topLevelTypes, l = 0; l < i.length; l++) {
                                var c = i[l];
                                o.hasOwnProperty(c) && o[c] || (c === s.topWheel ? p('wheel') ? g.ReactEventListener.trapBubbledEvent(s.topWheel, 'wheel', n) : p('mousewheel') ? g.ReactEventListener.trapBubbledEvent(s.topWheel, 'mousewheel', n) : g.ReactEventListener.trapBubbledEvent(s.topWheel, 'DOMMouseScroll', n) : c === s.topScroll ? p('scroll', !0) ? g.ReactEventListener.trapCapturedEvent(s.topScroll, 'scroll', n) : g.ReactEventListener.trapBubbledEvent(s.topScroll, 'scroll', g.ReactEventListener.WINDOW_HANDLE) : c === s.topFocus || c === s.topBlur ? (p('focus', !0) ? (g.ReactEventListener.trapCapturedEvent(s.topFocus, 'focus', n), g.ReactEventListener.trapCapturedEvent(s.topBlur, 'blur', n)) : p('focusin') && (g.ReactEventListener.trapBubbledEvent(s.topFocus, 'focusin', n), g.ReactEventListener.trapBubbledEvent(s.topBlur, 'focusout', n)), o[s.topBlur] = !0, o[s.topFocus] = !0) : v.hasOwnProperty(c) && g.ReactEventListener.trapBubbledEvent(c, v[c], n), o[c] = !0)
                            }
                        },
                        trapBubbledEvent: function(e, t, n) {
                            return g.ReactEventListener.trapBubbledEvent(e, t, n)
                        },
                        trapCapturedEvent: function(e, t, n) {
                            return g.ReactEventListener.trapCapturedEvent(e, t, n)
                        },
                        ensureScrollValueMonitoring: function() {
                            if (void 0 === o && (o = document.createEvent && 'pageX' in document.createEvent('MouseEvent')), !o && !f) {
                                var e = l.refreshScrollValues;
                                g.ReactEventListener.monitorScrollValue(e),
                                    f = !0
                            }
                        }
                    });
                t.exports = g
            }, {
                109: 109,
                127: 127,
                129: 129,
                16: 16,
                165: 165,
                18: 18,
                64: 64
            }
        ],
        28: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n) {
                    var r = void 0 === e[n];
                    null != t && r && (e[n] = i(t))
                }
                var o = e(83),
                    i = e(128),
                    a = (e(23), e(136)),
                    u = e(137),
                    s = (e(164), {
                        instantiateChildren: function(e, t, n) {
                            if (null == e) return null;
                            var o = {};
                            return u(e, r, o),
                                o
                        },
                        updateChildren: function(e, t, n, r, u) {
                            if (t || e) {
                                var s,
                                    l;
                                for (s in t)
                                    if (t.hasOwnProperty(s)) {
                                        l = e && e[s];
                                        var c = l && l._currentElement,
                                            p = t[s];
                                        if (null != l && a(c, p)) o.receiveComponent(l, p, r, u),
                                            t[s] = l;
                                        else {
                                            l && (n[s] = o.getNativeNode(l), o.unmountComponent(l, !1));
                                            var d = i(p);
                                            t[s] = d
                                        }
                                    }
                                for (s in e) !e.hasOwnProperty(s) || t && t.hasOwnProperty(s) || (l = e[s], n[s] = o.getNativeNode(l), o.unmountComponent(l, !1))
                            }
                        },
                        unmountChildren: function(e, t) {
                            for (var n in e)
                                if (e.hasOwnProperty(n)) {
                                    var r = e[n];
                                    o.unmountComponent(r, t)
                                }
                        }
                    });
                t.exports = s
            }, {
                128: 128,
                136: 136,
                137: 137,
                164: 164,
                23: 23,
                83: 83
            }
        ],
        29: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    return ('' + e).replace(b, '$&/')
                }

                function o(e, t) {
                    this.func = e,
                        this.context = t,
                        this.count = 0
                }

                function i(e, t, n) {
                    var r = e.func,
                        o = e.context;
                    r.call(o, t, e.count++)
                }

                function a(e, t, n) {
                    if (null == e) return e;
                    var r = o.getPooled(t, n);
                    g(e, i, r),
                        o.release(r)
                }

                function u(e, t, n, r) {
                    this.result = e,
                        this.keyPrefix = t,
                        this.func = n,
                        this.context = r,
                        this.count = 0
                }

                function s(e, t, n) {
                    var o = e.result,
                        i = e.keyPrefix,
                        a = e.func,
                        u = e.context,
                        s = a.call(u, t, e.count++);
                    Array.isArray(s) ? l(s, o, n, m.thatReturnsArgument) : null != s && (v.isValidElement(s) && (s = v.cloneAndReplaceKey(s, i + (!s.key || t && t.key === s.key ? '' : r(s.key) + '/') + n)), o.push(s))
                }

                function l(e, t, n, o, i) {
                    var a = '';
                    null != n && (a = r(n) + '/');
                    var l = u.getPooled(t, a, o, i);
                    g(e, s, l),
                        u.release(l)
                }

                function c(e, t, n) {
                    if (null == e) return e;
                    var r = [];
                    return l(e, r, null, t, n),
                        r
                }

                function p(e, t, n) {
                    return null
                }

                function d(e, t) {
                    return g(e, p, null)
                }

                function f(e) {
                    var t = [];
                    return l(e, t, null, m.thatReturnsArgument),
                        t
                }
                var h = e(25),
                    v = e(60),
                    m = e(146),
                    g = e(137),
                    y = h.twoArgumentPooler,
                    C = h.fourArgumentPooler,
                    b = /\/+/g;
                o.prototype.destructor = function() {
                        this.func = null,
                            this.context = null,
                            this.count = 0
                    },
                    h.addPoolingTo(o, y),
                    u.prototype.destructor = function() {
                        this.result = null,
                            this.keyPrefix = null,
                            this.func = null,
                            this.context = null,
                            this.count = 0
                    },
                    h.addPoolingTo(u, C);
                var _ = {
                    forEach: a,
                    map: c,
                    mapIntoWithKeyPrefixInternal: l,
                    count: d,
                    toArray: f
                };
                t.exports = _
            }, {
                137: 137,
                146: 146,
                25: 25,
                60: 60
            }
        ],
        30: [
            function(e, t, n) {
                'use strict';

                function r(e, t) {
                    var n = E.hasOwnProperty(t) ? E[t] : null;
                    N.hasOwnProperty(t) && (n !== b.OVERRIDE_BASE ? m(!1) : void 0),
                        e && (n !== b.DEFINE_MANY && n !== b.DEFINE_MANY_MERGED ? m(!1) : void 0)
                }

                function o(e, t) {
                    if (t) {
                        'function' == typeof t ? m(!1) : void 0,
                            f.isValidElement(t) ? m(!1) : void 0;
                        var n = e.prototype,
                            o = n.__reactAutoBindPairs;
                        t.hasOwnProperty(C) && x.mixins(e, t.mixins);
                        for (var i in t)
                            if (t.hasOwnProperty(i) && i !== C) {
                                var a = t[i],
                                    l = n.hasOwnProperty(i);
                                if (r(l, i), x.hasOwnProperty(i)) x[i](e, a);
                                else {
                                    var c = E.hasOwnProperty(i),
                                        p = 'function' == typeof a,
                                        d = p && !c && !l && t.autobind !== !1;
                                    if (d) o.push(i, a),
                                        n[i] = a;
                                    else if (l) {
                                        var h = E[i];
                                        !c || h !== b.DEFINE_MANY_MERGED && h !== b.DEFINE_MANY ? m(!1) : void 0,
                                            h === b.DEFINE_MANY_MERGED ? n[i] = u(n[i], a) : h === b.DEFINE_MANY && (n[i] = s(n[i], a))
                                    } else n[i] = a
                                }
                            }
                    }
                }

                function i(e, t) {
                    if (t)
                        for (var n in t) {
                            var r = t[n];
                            if (t.hasOwnProperty(n)) {
                                var o = n in x;
                                o ? m(!1) : void 0;
                                var i = n in e;
                                i ? m(!1) : void 0,
                                    e[n] = r
                            }
                        }
                }

                function a(e, t) {
                    e && t && 'object' == typeof e && 'object' == typeof t ? void 0 : m(!1);
                    for (var n in t) t.hasOwnProperty(n) && (void 0 !== e[n] ? m(!1) : void 0, e[n] = t[n]);
                    return e
                }

                function u(e, t) {
                    return function() {
                        var n = e.apply(this, arguments),
                            r = t.apply(this, arguments);
                        if (null == n) return r;
                        if (null == r) return n;
                        var o = {};
                        return a(o, n),
                            a(o, r),
                            o
                    }
                }

                function s(e, t) {
                    return function() {
                        e.apply(this, arguments),
                            t.apply(this, arguments)
                    }
                }

                function l(e, t) {
                    var n = t.bind(e);
                    return n
                }

                function c(e) {
                    for (var t = e.__reactAutoBindPairs, n = 0; n < t.length; n += 2) {
                        var r = t[n],
                            o = t[n + 1];
                        e[r] = l(e, o)
                    }
                }
                var p = e(165),
                    d = e(31),
                    f = e(60),
                    h = (e(80), e(79), e(77)),
                    v = e(147),
                    m = e(154),
                    g = e(157),
                    y = e(158),
                    C = (e(164), y({
                        mixins: null
                    })),
                    b = g({
                        DEFINE_ONCE: null,
                        DEFINE_MANY: null,
                        OVERRIDE_BASE: null,
                        DEFINE_MANY_MERGED: null
                    }),
                    _ = [],
                    E = {
                        mixins: b.DEFINE_MANY,
                        statics: b.DEFINE_MANY,
                        propTypes: b.DEFINE_MANY,
                        contextTypes: b.DEFINE_MANY,
                        childContextTypes: b.DEFINE_MANY,
                        getDefaultProps: b.DEFINE_MANY_MERGED,
                        getInitialState: b.DEFINE_MANY_MERGED,
                        getChildContext: b.DEFINE_MANY_MERGED,
                        render: b.DEFINE_ONCE,
                        componentWillMount: b.DEFINE_MANY,
                        componentDidMount: b.DEFINE_MANY,
                        componentWillReceiveProps: b.DEFINE_MANY,
                        shouldComponentUpdate: b.DEFINE_ONCE,
                        componentWillUpdate: b.DEFINE_MANY,
                        componentDidUpdate: b.DEFINE_MANY,
                        componentWillUnmount: b.DEFINE_MANY,
                        updateComponent: b.OVERRIDE_BASE
                    },
                    x = {
                        displayName: function(e, t) {
                            e.displayName = t
                        },
                        mixins: function(e, t) {
                            if (t)
                                for (var n = 0; n < t.length; n++) o(e, t[n])
                        },
                        childContextTypes: function(e, t) {
                            e.childContextTypes = p({}, e.childContextTypes, t)
                        },
                        contextTypes: function(e, t) {
                            e.contextTypes = p({}, e.contextTypes, t)
                        },
                        getDefaultProps: function(e, t) {
                            e.getDefaultProps ? e.getDefaultProps = u(e.getDefaultProps, t) : e.getDefaultProps = t
                        },
                        propTypes: function(e, t) {
                            e.propTypes = p({}, e.propTypes, t)
                        },
                        statics: function(e, t) {
                            i(e, t)
                        },
                        autobind: function() {}
                    },
                    N = {
                        replaceState: function(e, t) {
                            this.updater.enqueueReplaceState(this, e),
                                t && this.updater.enqueueCallback(this, t, 'replaceState')
                        },
                        isMounted: function() {
                            return this.updater.isMounted(this)
                        }
                    },
                    T = function() {};
                p(T.prototype, d.prototype, N);
                var P = {
                    createClass: function(e) {
                        var t = function(e, t, n) {
                            this.__reactAutoBindPairs.length && c(this),
                                this.props = e,
                                this.context = t,
                                this.refs = v,
                                this.updater = n || h,
                                this.state = null;
                            var r = this.getInitialState ? this.getInitialState() : null;
                            'object' != typeof r || Array.isArray(r) ? m(!1) : void 0,
                                this.state = r
                        };
                        t.prototype = new T,
                            t.prototype.constructor = t,
                            t.prototype.__reactAutoBindPairs = [],
                            _.forEach(o.bind(null, t)),
                            o(t, e),
                            t.getDefaultProps && (t.defaultProps = t.getDefaultProps()),
                            t.prototype.render ? void 0 : m(!1);
                        for (var n in E) t.prototype[n] || (t.prototype[n] = null);
                        return t
                    },
                    injection: {
                        injectMixin: function(e) {
                            _.push(e)
                        }
                    }
                };
                t.exports = P
            }, {
                147: 147,
                154: 154,
                157: 157,
                158: 158,
                164: 164,
                165: 165,
                31: 31,
                60: 60,
                77: 77,
                79: 79,
                80: 80
            }
        ],
        31: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n) {
                    this.props = e,
                        this.context = t,
                        this.refs = i,
                        this.updater = n || o
                }
                var o = e(77),
                    i = (e(70), e(112), e(147)),
                    a = e(154);
                e(164);
                r.prototype.isReactComponent = {},
                    r.prototype.setState = function(e, t) {
                        'object' != typeof e && 'function' != typeof e && null != e ? a(!1) : void 0,
                            this.updater.enqueueSetState(this, e),
                            t && this.updater.enqueueCallback(this, t, 'setState')
                    },
                    r.prototype.forceUpdate = function(e) {
                        this.updater.enqueueForceUpdate(this),
                            e && this.updater.enqueueCallback(this, e, 'forceUpdate')
                    };
                t.exports = r
            }, {
                112: 112,
                147: 147,
                154: 154,
                164: 164,
                70: 70,
                77: 77
            }
        ],
        32: [
            function(e, t, n) {
                'use strict';
                var r = e(7),
                    o = e(46),
                    i = {
                        processChildrenUpdates: o.dangerouslyProcessChildrenUpdates,
                        replaceNodeWithMarkup: r.dangerouslyReplaceNodeWithMarkup,
                        unmountIDFromEnvironment: function(e) {}
                    };
                t.exports = i
            }, {
                46: 46,
                7: 7
            }
        ],
        33: [
            function(e, t, n) {
                'use strict';
                var r = e(154),
                    o = !1,
                    i = {
                        unmountIDFromEnvironment: null,
                        replaceNodeWithMarkup: null,
                        processChildrenUpdates: null,
                        injection: {
                            injectEnvironment: function(e) {
                                o ? r(!1) : void 0,
                                    i.unmountIDFromEnvironment = e.unmountIDFromEnvironment,
                                    i.replaceNodeWithMarkup = e.replaceNodeWithMarkup,
                                    i.processChildrenUpdates = e.processChildrenUpdates,
                                    o = !0
                            }
                        }
                    };
                t.exports = i
            }, {
                154: 154
            }
        ],
        34: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    var t = e._currentElement._owner || null;
                    if (t) {
                        var n = t.getName();
                        if (n) return ' Check the render method of `' + n + '`.'
                    }
                    return ''
                }

                function o(e) {}

                function i(e, t) {}

                function a(e) {
                    return e.prototype && e.prototype.isReactComponent
                }
                var u = e(165),
                    s = e(33),
                    l = e(35),
                    c = e(60),
                    p = e(63),
                    d = e(69),
                    f = (e(70), e(76)),
                    h = e(80),
                    v = (e(79), e(83)),
                    m = e(89),
                    g = e(147),
                    y = e(154),
                    C = e(136);
                e(164);
                o.prototype.render = function() {
                    var e = d.get(this)._currentElement.type,
                        t = e(this.props, this.context, this.updater);
                    return i(e, t),
                        t
                };
                var b = 1,
                    _ = {
                        construct: function(e) {
                            this._currentElement = e,
                                this._rootNodeID = null,
                                this._instance = null,
                                this._nativeParent = null,
                                this._nativeContainerInfo = null,
                                this._updateBatchNumber = null,
                                this._pendingElement = null,
                                this._pendingStateQueue = null,
                                this._pendingReplaceState = !1,
                                this._pendingForceUpdate = !1,
                                this._renderedNodeType = null,
                                this._renderedComponent = null,
                                this._context = null,
                                this._mountOrder = 0,
                                this._topLevelWrapper = null,
                                this._pendingCallbacks = null,
                                this._calledComponentWillUnmount = !1
                        },
                        mountComponent: function(e, t, n, r) {
                            this._context = r,
                                this._mountOrder = b++,
                                this._nativeParent = t,
                                this._nativeContainerInfo = n;
                            var u,
                                s = this._processProps(this._currentElement.props),
                                l = this._processContext(r),
                                p = this._currentElement.type,
                                f = this._constructComponent(s, l);
                            a(p) || null != f && null != f.render || (u = f, i(p, u), null === f || f === !1 || c.isValidElement(f) ? void 0 : y(!1), f = new o(p)),
                                f.props = s,
                                f.context = l,
                                f.refs = g,
                                f.updater = m,
                                this._instance = f,
                                d.set(f, this);
                            var h = f.state;
                            void 0 === h && (f.state = h = null),
                                'object' != typeof h || Array.isArray(h) ? y(!1) : void 0,
                                this._pendingStateQueue = null,
                                this._pendingReplaceState = !1,
                                this._pendingForceUpdate = !1;
                            var v;
                            return v = f.unstable_handleError ? this.performInitialMountWithErrorHandling(u, t, n, e, r) : this.performInitialMount(u, t, n, e, r),
                                f.componentDidMount && e.getReactMountReady().enqueue(f.componentDidMount, f),
                                v
                        },
                        _constructComponent: function(e, t) {
                            return this._constructComponentWithoutOwner(e, t)
                        },
                        _constructComponentWithoutOwner: function(e, t) {
                            var n,
                                r = this._currentElement.type;
                            return n = a(r) ? new r(e, t, m) : r(e, t, m)
                        },
                        performInitialMountWithErrorHandling: function(e, t, n, r, o) {
                            var i,
                                a = r.checkpoint();
                            try {
                                i = this.performInitialMount(e, t, n, r, o)
                            } catch (u) {
                                r.rollback(a),
                                    this._instance.unstable_handleError(u),
                                    this._pendingStateQueue && (this._instance.state = this._processPendingState(this._instance.props, this._instance.context)),
                                    a = r.checkpoint(),
                                    this._renderedComponent.unmountComponent(!0),
                                    r.rollback(a),
                                    i = this.performInitialMount(e, t, n, r, o)
                            }
                            return i
                        },
                        performInitialMount: function(e, t, n, r, o) {
                            var i = this._instance;
                            i.componentWillMount && (i.componentWillMount(), this._pendingStateQueue && (i.state = this._processPendingState(i.props, i.context))),
                                void 0 === e && (e = this._renderValidatedComponent()),
                                this._renderedNodeType = f.getType(e),
                                this._renderedComponent = this._instantiateReactComponent(e);
                            var a = v.mountComponent(this._renderedComponent, r, t, n, this._processChildContext(o));
                            return a
                        },
                        getNativeNode: function() {
                            return v.getNativeNode(this._renderedComponent)
                        },
                        unmountComponent: function(e) {
                            if (this._renderedComponent) {
                                var t = this._instance;
                                if (t.componentWillUnmount && !t._calledComponentWillUnmount)
                                    if (t._calledComponentWillUnmount = !0, e) {
                                        var n = this.getName() + '.componentWillUnmount()';
                                        p.invokeGuardedCallback(n, t.componentWillUnmount.bind(t))
                                    } else t.componentWillUnmount();
                                this._renderedComponent && (v.unmountComponent(this._renderedComponent, e), this._renderedNodeType = null, this._renderedComponent = null, this._instance = null),
                                    this._pendingStateQueue = null,
                                    this._pendingReplaceState = !1,
                                    this._pendingForceUpdate = !1,
                                    this._pendingCallbacks = null,
                                    this._pendingElement = null,
                                    this._context = null,
                                    this._rootNodeID = null,
                                    this._topLevelWrapper = null,
                                    d.remove(t)
                            }
                        },
                        _maskContext: function(e) {
                            var t = this._currentElement.type,
                                n = t.contextTypes;
                            if (!n) return g;
                            var r = {};
                            for (var o in n) r[o] = e[o];
                            return r
                        },
                        _processContext: function(e) {
                            var t = this._maskContext(e);
                            return t
                        },
                        _processChildContext: function(e) {
                            var t = this._currentElement.type,
                                n = this._instance,
                                r = n.getChildContext && n.getChildContext();
                            if (r) {
                                'object' != typeof t.childContextTypes ? y(!1) : void 0;
                                for (var o in r) o in t.childContextTypes ? void 0 : y(!1);
                                return u({}, e, r)
                            }
                            return e
                        },
                        _processProps: function(e) {
                            return e
                        },
                        _checkPropTypes: function(e, t, n) {
                            var o = this.getName();
                            for (var i in e)
                                if (e.hasOwnProperty(i)) {
                                    var a;
                                    try {
                                        'function' != typeof e[i] ? y(!1) : void 0,
                                            a = e[i](t, i, o, n)
                                    } catch (u) {
                                        a = u
                                    }
                                    a instanceof Error && (r(this), n === h.prop)
                                }
                        },
                        receiveComponent: function(e, t, n) {
                            var r = this._currentElement,
                                o = this._context;
                            this._pendingElement = null,
                                this.updateComponent(t, r, e, o, n)
                        },
                        performUpdateIfNecessary: function(e) {
                            null != this._pendingElement ? v.receiveComponent(this, this._pendingElement, e, this._context) : null !== this._pendingStateQueue || this._pendingForceUpdate ? this.updateComponent(e, this._currentElement, this._currentElement, this._context, this._context) : this._updateBatchNumber = null
                        },
                        updateComponent: function(e, t, n, r, o) {
                            var i,
                                a,
                                u = this._instance,
                                s = !1;
                            this._context === o ? i = u.context : (i = this._processContext(o), s = !0),
                                t === n ? a = n.props : (a = this._processProps(n.props), s = !0),
                                s && u.componentWillReceiveProps && u.componentWillReceiveProps(a, i);
                            var l = this._processPendingState(a, i),
                                c = !0;
                            !this._pendingForceUpdate && u.shouldComponentUpdate && (c = u.shouldComponentUpdate(a, l, i)),
                                this._updateBatchNumber = null,
                                c ? (this._pendingForceUpdate = !1, this._performComponentUpdate(n, a, l, i, e, o)) : (this._currentElement = n, this._context = o, u.props = a, u.state = l, u.context = i)
                        },
                        _processPendingState: function(e, t) {
                            var n = this._instance,
                                r = this._pendingStateQueue,
                                o = this._pendingReplaceState;
                            if (this._pendingReplaceState = !1, this._pendingStateQueue = null, !r) return n.state;
                            if (o && 1 === r.length) return r[0];
                            for (var i = u({}, o ? r[0] : n.state), a = o ? 1 : 0; a < r.length; a++) {
                                var s = r[a];
                                u(i, 'function' == typeof s ? s.call(n, i, e, t) : s)
                            }
                            return i
                        },
                        _performComponentUpdate: function(e, t, n, r, o, i) {
                            var a,
                                u,
                                s,
                                l = this._instance,
                                c = Boolean(l.componentDidUpdate);
                            c && (a = l.props, u = l.state, s = l.context),
                                l.componentWillUpdate && l.componentWillUpdate(t, n, r),
                                this._currentElement = e,
                                this._context = i,
                                l.props = t,
                                l.state = n,
                                l.context = r,
                                this._updateRenderedComponent(o, i),
                                c && o.getReactMountReady().enqueue(l.componentDidUpdate.bind(l, a, u, s), l)
                        },
                        _updateRenderedComponent: function(e, t) {
                            var n = this._renderedComponent,
                                r = n._currentElement,
                                o = this._renderValidatedComponent();
                            if (C(r, o)) v.receiveComponent(n, o, e, this._processChildContext(t));
                            else {
                                var i = v.getNativeNode(n);
                                v.unmountComponent(n, !1),
                                    this._renderedNodeType = f.getType(o),
                                    this._renderedComponent = this._instantiateReactComponent(o);
                                var a = v.mountComponent(this._renderedComponent, e, this._nativeParent, this._nativeContainerInfo, this._processChildContext(t));
                                this._replaceNodeWithMarkup(i, a, n)
                            }
                        },
                        _replaceNodeWithMarkup: function(e, t, n) {
                            s.replaceNodeWithMarkup(e, t, n)
                        },
                        _renderValidatedComponentWithoutOwnerOrContext: function() {
                            var e = this._instance,
                                t = e.render();
                            return t
                        },
                        _renderValidatedComponent: function() {
                            var e;
                            l.current = this;
                            try {
                                e = this._renderValidatedComponentWithoutOwnerOrContext()
                            } finally {
                                l.current = null
                            }
                            return null === e || e === !1 || c.isValidElement(e) ? void 0 : y(!1),
                                e
                        },
                        attachRef: function(e, t) {
                            var n = this.getPublicInstance();
                            null == n ? y(!1) : void 0;
                            var r = t.getPublicInstance(),
                                o = n.refs === g ? n.refs = {} :
                                n.refs;
                            o[e] = r
                        },
                        detachRef: function(e) {
                            var t = this.getPublicInstance().refs;
                            delete t[e]
                        },
                        getName: function() {
                            var e = this._currentElement.type,
                                t = this._instance && this._instance.constructor;
                            return e.displayName || t && t.displayName || e.name || t && t.name || null
                        },
                        getPublicInstance: function() {
                            var e = this._instance;
                            return e instanceof o ? null : e
                        },
                        _instantiateReactComponent: null
                    },
                    E = {
                        Mixin: _
                    };
                t.exports = E
            }, {
                136: 136,
                147: 147,
                154: 154,
                164: 164,
                165: 165,
                33: 33,
                35: 35,
                60: 60,
                63: 63,
                69: 69,
                70: 70,
                76: 76,
                79: 79,
                80: 80,
                83: 83,
                89: 89
            }
        ],
        35: [
            function(e, t, n) {
                'use strict';
                var r = {
                    current: null
                };
                t.exports = r
            }, {}
        ],
        36: [
            function(e, t, n) {
                'use strict';
                var r = e(40),
                    o = e(59),
                    i = e(72),
                    a = e(83),
                    u = e(90),
                    s = e(91),
                    l = e(116),
                    c = e(124),
                    p = e(133);
                e(164);
                o.inject();
                var d = {
                    findDOMNode: l,
                    render: i.render,
                    unmountComponentAtNode: i.unmountComponentAtNode,
                    version: s,
                    unstable_batchedUpdates: u.batchedUpdates,
                    unstable_renderSubtreeIntoContainer: p
                };
                'undefined' != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && 'function' == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject && __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
                    ComponentTree: {
                        getClosestInstanceFromNode: r.getClosestInstanceFromNode,
                        getNodeFromInstance: function(e) {
                            return e._renderedComponent && (e = c(e)),
                                e ? r.getNodeFromInstance(e) : null
                        }
                    },
                    Mount: i,
                    Reconciler: a
                });
                t.exports = d
            }, {
                116: 116,
                124: 124,
                133: 133,
                164: 164,
                40: 40,
                59: 59,
                72: 72,
                83: 83,
                90: 90,
                91: 91
            }
        ],
        37: [
            function(e, t, n) {
                'use strict';
                var r = e(14),
                    o = {
                        getNativeProps: r.getNativeProps
                    };
                t.exports = o
            }, {
                14: 14
            }
        ],
        38: [
            function(e, t, n) {
                'use strict';

                function r(e, t) {
                    t && (X[e._tag] && (null != t.children || null != t.dangerouslySetInnerHTML ? O(!1) : void 0), null != t.dangerouslySetInnerHTML && (null != t.children ? O(!1) : void 0, 'object' == typeof t.dangerouslySetInnerHTML && K in t.dangerouslySetInnerHTML ? void 0 : O(!1)), null != t.style && 'object' != typeof t.style ? O(!1) : void 0)
                }

                function o(e, t, n, r) {
                    if (!(r instanceof D)) {
                        var o = e._nativeContainerInfo,
                            a = o._node && o._node.nodeType === q,
                            u = a ? o._node : o._ownerDocument;
                        V(t, u),
                            r.getReactMountReady().enqueue(i, {
                                inst: e,
                                registrationName: t,
                                listener: n
                            })
                    }
                }

                function i() {
                    var e = this;
                    b.putListener(e.inst, e.registrationName, e.listener)
                }

                function a() {
                    var e = this;
                    S.postMountWrapper(e)
                }

                function u() {
                    var e = this;
                    e._rootNodeID ? void 0 : O(!1);
                    var t = F(e);
                    switch (t ? void 0 : O(!1), e._tag) {
                        case 'iframe':
                        case 'object':
                            e._wrapperState.listeners = [
                                E.trapBubbledEvent(C.topLevelTypes.topLoad, 'load', t)
                            ];
                            break;
                        case 'video':
                        case 'audio':
                            e._wrapperState.listeners = [];
                            for (var n in Y) Y.hasOwnProperty(n) && e._wrapperState.listeners.push(E.trapBubbledEvent(C.topLevelTypes[n], Y[n], t));
                            break;
                        case 'img':
                            e._wrapperState.listeners = [
                                E.trapBubbledEvent(C.topLevelTypes.topError, 'error', t),
                                E.trapBubbledEvent(C.topLevelTypes.topLoad, 'load', t)
                            ];
                            break;
                        case 'form':
                            e._wrapperState.listeners = [
                                E.trapBubbledEvent(C.topLevelTypes.topReset, 'reset', t),
                                E.trapBubbledEvent(C.topLevelTypes.topSubmit, 'submit', t)
                            ];
                            break;
                        case 'input':
                        case 'select':
                        case 'textarea':
                            e._wrapperState.listeners = [
                                E.trapBubbledEvent(C.topLevelTypes.topInvalid, 'invalid', t)
                            ]
                    }
                }

                function s() {
                    M.postUpdateWrapper(this)
                }

                function l(e) {
                    Z.call($, e) || (Q.test(e) ? void 0 : O(!1), $[e] = !0)
                }

                function c(e, t) {
                    return e.indexOf('-') >= 0 || null != t.is
                }

                function p(e) {
                    var t = e.type;
                    l(t),
                        this._currentElement = e,
                        this._tag = t.toLowerCase(),
                        this._namespaceURI = null,
                        this._renderedChildren = null,
                        this._previousStyle = null,
                        this._previousStyleCopy = null,
                        this._nativeNode = null,
                        this._nativeParent = null,
                        this._rootNodeID = null,
                        this._domID = null,
                        this._nativeContainerInfo = null,
                        this._wrapperState = null,
                        this._topLevelWrapper = null,
                        this._flags = 0
                }
                var d = e(165),
                    f = e(1),
                    h = e(4),
                    v = e(8),
                    m = e(9),
                    g = e(10),
                    y = e(11),
                    C = e(16),
                    b = e(17),
                    _ = e(18),
                    E = e(27),
                    x = e(32),
                    N = e(37),
                    T = e(39),
                    P = e(40),
                    w = e(47),
                    S = e(49),
                    M = e(50),
                    k = e(54),
                    R = (e(70), e(73)),
                    D = e(87),
                    I = (e(146), e(115)),
                    O = e(154),
                    A = (e(129), e(158)),
                    L = (e(163), e(138), e(164), T),
                    U = b.deleteListener,
                    F = P.getNodeFromInstance,
                    V = E.listenTo,
                    B = _.registrationNameModules,
                    j = {
                        string: !0,
                        number: !0
                    },
                    W = A({
                        style: null
                    }),
                    K = A({
                        __html: null
                    }),
                    H = {
                        children: null,
                        dangerouslySetInnerHTML: null,
                        suppressContentEditableWarning: null
                    },
                    q = 11,
                    Y = {
                        topAbort: 'abort',
                        topCanPlay: 'canplay',
                        topCanPlayThrough: 'canplaythrough',
                        topDurationChange: 'durationchange',
                        topEmptied: 'emptied',
                        topEncrypted: 'encrypted',
                        topEnded: 'ended',
                        topError: 'error',
                        topLoadedData: 'loadeddata',
                        topLoadedMetadata: 'loadedmetadata',
                        topLoadStart: 'loadstart',
                        topPause: 'pause',
                        topPlay: 'play',
                        topPlaying: 'playing',
                        topProgress: 'progress',
                        topRateChange: 'ratechange',
                        topSeeked: 'seeked',
                        topSeeking: 'seeking',
                        topStalled: 'stalled',
                        topSuspend: 'suspend',
                        topTimeUpdate: 'timeupdate',
                        topVolumeChange: 'volumechange',
                        topWaiting: 'waiting'
                    },
                    z = {
                        area: !0,
                        base: !0,
                        br: !0,
                        col: !0,
                        embed: !0,
                        hr: !0,
                        img: !0,
                        input: !0,
                        keygen: !0,
                        link: !0,
                        meta: !0,
                        param: !0,
                        source: !0,
                        track: !0,
                        wbr: !0
                    },
                    G = {
                        listing: !0,
                        pre: !0,
                        textarea: !0
                    },
                    X = d({
                        menuitem: !0
                    }, z),
                    Q = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/,
                    $ = {},
                    Z = {}.hasOwnProperty,
                    J = 1;
                p.displayName = 'ReactDOMComponent',
                    p.Mixin = {
                        mountComponent: function(e, t, n, o) {
                            this._rootNodeID = J++,
                                this._domID = n._idCounter++,
                                this._nativeParent = t,
                                this._nativeContainerInfo = n;
                            var i = this._currentElement.props;
                            switch (this._tag) {
                                case 'iframe':
                                case 'object':
                                case 'img':
                                case 'form':
                                case 'video':
                                case 'audio':
                                    this._wrapperState = {
                                            listeners: null
                                        },
                                        e.getReactMountReady().enqueue(u, this);
                                    break;
                                case 'button':
                                    i = N.getNativeProps(this, i, t);
                                    break;
                                case 'input':
                                    w.mountWrapper(this, i, t),
                                        i = w.getNativeProps(this, i),
                                        e.getReactMountReady().enqueue(u, this);
                                    break;
                                case 'option':
                                    S.mountWrapper(this, i, t),
                                        i = S.getNativeProps(this, i);
                                    break;
                                case 'select':
                                    M.mountWrapper(this, i, t),
                                        i = M.getNativeProps(this, i),
                                        e.getReactMountReady().enqueue(u, this);
                                    break;
                                case 'textarea':
                                    k.mountWrapper(this, i, t),
                                        i = k.getNativeProps(this, i),
                                        e.getReactMountReady().enqueue(u, this)
                            }
                            r(this, i);
                            var s,
                                l;
                            null != t ? (s = t._namespaceURI, l = t._tag) : n._tag && (s = n._namespaceURI, l = n._tag),
                                (null == s || s === m.svg && 'foreignobject' === l) && (s = m.html),
                                s === m.html && ('svg' === this._tag ? s = m.svg : 'math' === this._tag && (s = m.mathml)),
                                this._namespaceURI = s;
                            var c;
                            if (e.useCreateElement) {
                                var p,
                                    d = n._ownerDocument;
                                if (s === m.html)
                                    if ('script' === this._tag) {
                                        var h = d.createElement('div'),
                                            g = this._currentElement.type;
                                        h.innerHTML = '<' + g + '></' + g + '>',
                                            p = h.removeChild(h.firstChild)
                                    } else p = d.createElement(this._currentElement.type, i.is || null);
                                else p = d.createElementNS(s, this._currentElement.type);
                                P.precacheNode(this, p),
                                    this._flags |= L.hasCachedChildNodes,
                                    this._nativeParent || y.setAttributeForRoot(p),
                                    this._updateDOMProperties(null, i, e);
                                var C = v(p);
                                this._createInitialChildren(e, i, o, C),
                                    c = C
                            } else {
                                var b = this._createOpenTagMarkupAndPutListeners(e, i),
                                    _ = this._createContentMarkup(e, i, o);
                                c = !_ && z[this._tag] ? b + '/>' : b + '>' + _ + '</' + this._currentElement.type + '>'
                            }
                            switch (this._tag) {
                                case 'button':
                                case 'input':
                                case 'select':
                                case 'textarea':
                                    i.autoFocus && e.getReactMountReady().enqueue(f.focusDOMComponent, this);
                                    break;
                                case 'option':
                                    e.getReactMountReady().enqueue(a, this)
                            }
                            return c
                        },
                        _createOpenTagMarkupAndPutListeners: function(e, t) {
                            var n = '<' + this._currentElement.type;
                            for (var r in t)
                                if (t.hasOwnProperty(r)) {
                                    var i = t[r];
                                    if (null != i)
                                        if (B.hasOwnProperty(r)) i && o(this, r, i, e);
                                        else {
                                            r === W && (i && (i = this._previousStyleCopy = d({}, t.style)), i = h.createMarkupForStyles(i, this));
                                            var a = null;
                                            null != this._tag && c(this._tag, t) ? H.hasOwnProperty(r) || (a = y.createMarkupForCustomAttribute(r, i)) : a = y.createMarkupForProperty(r, i),
                                                a && (n += ' ' + a)
                                        }
                                }
                            return e.renderToStaticMarkup ? n : (this._nativeParent || (n += ' ' + y.createMarkupForRoot()), n += ' ' + y.createMarkupForID(this._domID))
                        },
                        _createContentMarkup: function(e, t, n) {
                            var r = '',
                                o = t.dangerouslySetInnerHTML;
                            if (null != o) null != o.__html && (r = o.__html);
                            else {
                                var i = j[typeof t.children] ? t.children : null,
                                    a = null != i ? null : t.children;
                                if (null != i) r = I(i);
                                else if (null != a) {
                                    var u = this.mountChildren(a, e, n);
                                    r = u.join('')
                                }
                            }
                            return G[this._tag] && '\n' === r.charAt(0) ? '\n' + r : r
                        },
                        _createInitialChildren: function(e, t, n, r) {
                            var o = t.dangerouslySetInnerHTML;
                            if (null != o) null != o.__html && v.queueHTML(r, o.__html);
                            else {
                                var i = j[typeof t.children] ? t.children : null,
                                    a = null != i ? null : t.children;
                                if (null != i) v.queueText(r, i);
                                else if (null != a)
                                    for (var u = this.mountChildren(a, e, n), s = 0; s < u.length; s++) v.queueChild(r, u[s])
                            }
                        },
                        receiveComponent: function(e, t, n) {
                            var r = this._currentElement;
                            this._currentElement = e,
                                this.updateComponent(t, r, e, n)
                        },
                        updateComponent: function(e, t, n, o) {
                            var i = t.props,
                                a = this._currentElement.props;
                            switch (this._tag) {
                                case 'button':
                                    i = N.getNativeProps(this, i),
                                        a = N.getNativeProps(this, a);
                                    break;
                                case 'input':
                                    w.updateWrapper(this),
                                        i = w.getNativeProps(this, i),
                                        a = w.getNativeProps(this, a);
                                    break;
                                case 'option':
                                    i = S.getNativeProps(this, i),
                                        a = S.getNativeProps(this, a);
                                    break;
                                case 'select':
                                    i = M.getNativeProps(this, i),
                                        a = M.getNativeProps(this, a);
                                    break;
                                case 'textarea':
                                    k.updateWrapper(this),
                                        i = k.getNativeProps(this, i),
                                        a = k.getNativeProps(this, a)
                            }
                            r(this, a),
                                this._updateDOMProperties(i, a, e),
                                this._updateDOMChildren(i, a, e, o),
                                'select' === this._tag && e.getReactMountReady().enqueue(s, this)
                        },
                        _updateDOMProperties: function(e, t, n) {
                            var r,
                                i,
                                a;
                            for (r in e)
                                if (!t.hasOwnProperty(r) && e.hasOwnProperty(r) && null != e[r])
                                    if (r === W) {
                                        var u = this._previousStyleCopy;
                                        for (i in u) u.hasOwnProperty(i) && (a = a || {}, a[i] = '');
                                        this._previousStyleCopy = null
                                    } else B.hasOwnProperty(r) ? e[r] && U(this, r) : (g.properties[r] || g.isCustomAttribute(r)) && y.deleteValueForProperty(F(this), r);
                            for (r in t) {
                                var s = t[r],
                                    l = r === W ? this._previousStyleCopy : null != e ? e[r] : void 0;
                                if (t.hasOwnProperty(r) && s !== l && (null != s || null != l))
                                    if (r === W)
                                        if (s ? s = this._previousStyleCopy = d({}, s) : this._previousStyleCopy = null, l) {
                                            for (i in l) !l.hasOwnProperty(i) || s && s.hasOwnProperty(i) || (a = a || {}, a[i] = '');
                                            for (i in s) s.hasOwnProperty(i) && l[i] !== s[i] && (a = a || {}, a[i] = s[i])
                                        } else a = s;
                                else if (B.hasOwnProperty(r)) s ? o(this, r, s, n) : l && U(this, r);
                                else if (c(this._tag, t)) H.hasOwnProperty(r) || y.setValueForAttribute(F(this), r, s);
                                else if (g.properties[r] || g.isCustomAttribute(r)) {
                                    var p = F(this);
                                    null != s ? y.setValueForProperty(p, r, s) : y.deleteValueForProperty(p, r)
                                }
                            }
                            a && h.setValueForStyles(F(this), a, this)
                        },
                        _updateDOMChildren: function(e, t, n, r) {
                            var o = j[typeof e.children] ? e.children : null,
                                i = j[typeof t.children] ? t.children : null,
                                a = e.dangerouslySetInnerHTML && e.dangerouslySetInnerHTML.__html,
                                u = t.dangerouslySetInnerHTML && t.dangerouslySetInnerHTML.__html,
                                s = null != o ? null : e.children,
                                l = null != i ? null : t.children,
                                c = null != o || null != a,
                                p = null != i || null != u;
                            null != s && null == l ? this.updateChildren(null, n, r) : c && !p && this.updateTextContent(''),
                                null != i ? o !== i && this.updateTextContent('' + i) : null != u ? a !== u && this.updateMarkup('' + u) : null != l && this.updateChildren(l, n, r)
                        },
                        getNativeNode: function() {
                            return F(this)
                        },
                        unmountComponent: function(e) {
                            switch (this._tag) {
                                case 'iframe':
                                case 'object':
                                case 'img':
                                case 'form':
                                case 'video':
                                case 'audio':
                                    var t = this._wrapperState.listeners;
                                    if (t)
                                        for (var n = 0; n < t.length; n++) t[n].remove();
                                    break;
                                case 'html':
                                case 'head':
                                case 'body':
                                    O(!1)
                            }
                            this.unmountChildren(e),
                                P.uncacheNode(this),
                                b.deleteAllListeners(this),
                                x.unmountIDFromEnvironment(this._rootNodeID),
                                this._rootNodeID = null,
                                this._domID = null,
                                this._wrapperState = null
                        },
                        getPublicInstance: function() {
                            return F(this)
                        }
                    },
                    d(p.prototype, p.Mixin, R.Mixin),
                    t.exports = p
            }, {
                1: 1,
                10: 10,
                11: 11,
                115: 115,
                129: 129,
                138: 138,
                146: 146,
                154: 154,
                158: 158,
                16: 16,
                163: 163,
                164: 164,
                165: 165,
                17: 17,
                18: 18,
                27: 27,
                32: 32,
                37: 37,
                39: 39,
                4: 4,
                40: 40,
                47: 47,
                49: 49,
                50: 50,
                54: 54,
                70: 70,
                73: 73,
                8: 8,
                87: 87,
                9: 9
            }
        ],
        39: [
            function(e, t, n) {
                'use strict';
                var r = {
                    hasCachedChildNodes: 1
                };
                t.exports = r
            }, {}
        ],
        40: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    for (var t; t = e._renderedComponent;) e = t;
                    return e
                }

                function o(e, t) {
                    var n = r(e);
                    n._nativeNode = t,
                        t[v] = n
                }

                function i(e) {
                    var t = e._nativeNode;
                    t && (delete t[v], e._nativeNode = null)
                }

                function a(e, t) {
                    if (!(e._flags & h.hasCachedChildNodes)) {
                        var n = e._renderedChildren,
                            i = t.firstChild;
                        e: for (var a in n)
                            if (n.hasOwnProperty(a)) {
                                var u = n[a],
                                    s = r(u)._domID;
                                if (null != s) {
                                    for (; null !== i; i = i.nextSibling)
                                        if (1 === i.nodeType && i.getAttribute(f) === String(s) || 8 === i.nodeType && i.nodeValue === ' react-text: ' + s + ' ' || 8 === i.nodeType && i.nodeValue === ' react-empty: ' + s + ' ') {
                                            o(u, i);
                                            continue e
                                        }
                                    d(!1)
                                }
                            }
                        e._flags |= h.hasCachedChildNodes
                    }
                }

                function u(e) {
                    if (e[v]) return e[v];
                    for (var t = []; !e[v];) {
                        if (t.push(e), !e.parentNode) return null;
                        e = e.parentNode
                    }
                    for (var n, r; e && (r = e[v]); e = t.pop()) n = r,
                        t.length && a(r, e);
                    return n
                }

                function s(e) {
                    var t = u(e);
                    return null != t && t._nativeNode === e ? t : null
                }

                function l(e) {
                    if (void 0 === e._nativeNode ? d(!1) : void 0, e._nativeNode) return e._nativeNode;
                    for (var t = []; !e._nativeNode;) t.push(e),
                        e._nativeParent ? void 0 : d(!1),
                        e = e._nativeParent;
                    for (; t.length; e = t.pop()) a(e, e._nativeNode);
                    return e._nativeNode
                }
                var c = e(10),
                    p = e(39),
                    d = e(154),
                    f = c.ID_ATTRIBUTE_NAME,
                    h = p,
                    v = '__reactInternalInstance$' + Math.random().toString(36).slice(2),
                    m = {
                        getClosestInstanceFromNode: u,
                        getInstanceFromNode: s,
                        getNodeFromInstance: l,
                        precacheChildNodes: a,
                        precacheNode: o,
                        uncacheNode: i
                    };
                t.exports = m
            }, {
                10: 10,
                154: 154,
                39: 39
            }
        ],
        41: [
            function(e, t, n) {
                'use strict';

                function r(e, t) {
                    var n = {
                        _topLevelWrapper: e,
                        _idCounter: 1,
                        _ownerDocument: t ? t.nodeType === o ? t : t.ownerDocument : null,
                        _node: t,
                        _tag: t ? t.nodeName.toLowerCase() : null,
                        _namespaceURI: t ? t.namespaceURI : null
                    };
                    return n
                }
                var o = (e(138), 9);
                t.exports = r
            }, {
                138: 138
            }
        ],
        42: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n, r, o, i) {}
                var o = e(56),
                    i = (e(164), []),
                    a = {
                        addDevtool: function(e) {
                            i.push(e)
                        },
                        removeDevtool: function(e) {
                            for (var t = 0; t < i.length; t++) i[t] === e && (i.splice(t, 1), t--)
                        },
                        onCreateMarkupForProperty: function(e, t) {
                            r('onCreateMarkupForProperty', e, t)
                        },
                        onSetValueForProperty: function(e, t, n) {
                            r('onSetValueForProperty', e, t, n)
                        },
                        onDeleteValueForProperty: function(e, t) {
                            r('onDeleteValueForProperty', e, t)
                        }
                    };
                a.addDevtool(o),
                    t.exports = a
            }, {
                164: 164,
                56: 56
            }
        ],
        43: [
            function(e, t, n) {
                'use strict';
                var r = e(165),
                    o = e(8),
                    i = e(40),
                    a = function(e) {
                        this._currentElement = null,
                            this._nativeNode = null,
                            this._nativeParent = null,
                            this._nativeContainerInfo = null,
                            this._domID = null
                    };
                r(a.prototype, {
                        mountComponent: function(e, t, n, r) {
                            var a = n._idCounter++;
                            this._domID = a,
                                this._nativeParent = t,
                                this._nativeContainerInfo = n;
                            var u = ' react-empty: ' + this._domID + ' ';
                            if (e.useCreateElement) {
                                var s = n._ownerDocument,
                                    l = s.createComment(u);
                                return i.precacheNode(this, l),
                                    o(l)
                            }
                            return e.renderToStaticMarkup ? '' : '<!--' + u + '-->'
                        },
                        receiveComponent: function() {},
                        getNativeNode: function() {
                            return i.getNodeFromInstance(this)
                        },
                        unmountComponent: function() {
                            i.uncacheNode(this)
                        }
                    }),
                    t.exports = a
            }, {
                165: 165,
                40: 40,
                8: 8
            }
        ],
        44: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    return o.createFactory(e)
                }
                var o = e(60),
                    i = (e(61), e(159)),
                    a = i({
                        a: 'a',
                        abbr: 'abbr',
                        address: 'address',
                        area: 'area',
                        article: 'article',
                        aside: 'aside',
                        audio: 'audio',
                        b: 'b',
                        base: 'base',
                        bdi: 'bdi',
                        bdo: 'bdo',
                        big: 'big',
                        blockquote: 'blockquote',
                        body: 'body',
                        br: 'br',
                        button: 'button',
                        canvas: 'canvas',
                        caption: 'caption',
                        cite: 'cite',
                        code: 'code',
                        col: 'col',
                        colgroup: 'colgroup',
                        data: 'data',
                        datalist: 'datalist',
                        dd: 'dd',
                        del: 'del',
                        details: 'details',
                        dfn: 'dfn',
                        dialog: 'dialog',
                        div: 'div',
                        dl: 'dl',
                        dt: 'dt',
                        em: 'em',
                        embed: 'embed',
                        fieldset: 'fieldset',
                        figcaption: 'figcaption',
                        figure: 'figure',
                        footer: 'footer',
                        form: 'form',
                        h1: 'h1',
                        h2: 'h2',
                        h3: 'h3',
                        h4: 'h4',
                        h5: 'h5',
                        h6: 'h6',
                        head: 'head',
                        header: 'header',
                        hgroup: 'hgroup',
                        hr: 'hr',
                        html: 'html',
                        i: 'i',
                        iframe: 'iframe',
                        img: 'img',
                        input: 'input',
                        ins: 'ins',
                        kbd: 'kbd',
                        keygen: 'keygen',
                        label: 'label',
                        legend: 'legend',
                        li: 'li',
                        link: 'link',
                        main: 'main',
                        map: 'map',
                        mark: 'mark',
                        menu: 'menu',
                        menuitem: 'menuitem',
                        meta: 'meta',
                        meter: 'meter',
                        nav: 'nav',
                        noscript: 'noscript',
                        object: 'object',
                        ol: 'ol',
                        optgroup: 'optgroup',
                        option: 'option',
                        output: 'output',
                        p: 'p',
                        param: 'param',
                        picture: 'picture',
                        pre: 'pre',
                        progress: 'progress',
                        q: 'q',
                        rp: 'rp',
                        rt: 'rt',
                        ruby: 'ruby',
                        s: 's',
                        samp: 'samp',
                        script: 'script',
                        section: 'section',
                        select: 'select',
                        small: 'small',
                        source: 'source',
                        span: 'span',
                        strong: 'strong',
                        style: 'style',
                        sub: 'sub',
                        summary: 'summary',
                        sup: 'sup',
                        table: 'table',
                        tbody: 'tbody',
                        td: 'td',
                        textarea: 'textarea',
                        tfoot: 'tfoot',
                        th: 'th',
                        thead: 'thead',
                        time: 'time',
                        title: 'title',
                        tr: 'tr',
                        track: 'track',
                        u: 'u',
                        ul: 'ul',
                        'var': 'var',
                        video: 'video',
                        wbr: 'wbr',
                        circle: 'circle',
                        clipPath: 'clipPath',
                        defs: 'defs',
                        ellipse: 'ellipse',
                        g: 'g',
                        image: 'image',
                        line: 'line',
                        linearGradient: 'linearGradient',
                        mask: 'mask',
                        path: 'path',
                        pattern: 'pattern',
                        polygon: 'polygon',
                        polyline: 'polyline',
                        radialGradient: 'radialGradient',
                        rect: 'rect',
                        stop: 'stop',
                        svg: 'svg',
                        text: 'text',
                        tspan: 'tspan'
                    }, r);
                t.exports = a
            }, {
                159: 159,
                60: 60,
                61: 61
            }
        ],
        45: [
            function(e, t, n) {
                'use strict';
                var r = {
                    useCreateElement: !0
                };
                t.exports = r
            }, {}
        ],
        46: [
            function(e, t, n) {
                'use strict';
                var r = e(7),
                    o = e(40),
                    i = {
                        dangerouslyProcessChildrenUpdates: function(e, t) {
                            var n = o.getNodeFromInstance(e);
                            r.processUpdates(n, t)
                        }
                    };
                t.exports = i
            }, {
                40: 40,
                7: 7
            }
        ],
        47: [
            function(e, t, n) {
                'use strict';

                function r() {
                    this._rootNodeID && d.updateWrapper(this)
                }

                function o(e) {
                    var t = this._currentElement.props,
                        n = s.executeOnChange(t, e);
                    c.asap(r, this);
                    var o = t.name;
                    if ('radio' === t.type && null != o) {
                        for (var i = l.getNodeFromInstance(this), a = i; a.parentNode;) a = a.parentNode;
                        for (var u = a.querySelectorAll('input[name=' + JSON.stringify('' + o) + '][type="radio"]'), d = 0; d < u.length; d++) {
                            var f = u[d];
                            if (f !== i && f.form === i.form) {
                                var h = l.getInstanceFromNode(f);
                                h ? void 0 : p(!1),
                                    c.asap(r, h)
                            }
                        }
                    }
                    return n
                }
                var i = e(165),
                    a = e(14),
                    u = e(11),
                    s = e(24),
                    l = e(40),
                    c = e(90),
                    p = e(154),
                    d = (e(164), {
                        getNativeProps: function(e, t) {
                            var n = s.getValue(t),
                                r = s.getChecked(t),
                                o = i({
                                    type: void 0
                                }, a.getNativeProps(e, t), {
                                    defaultChecked: void 0,
                                    defaultValue: void 0,
                                    value: null != n ? n : e._wrapperState.initialValue,
                                    checked: null != r ? r : e._wrapperState.initialChecked,
                                    onChange: e._wrapperState.onChange
                                });
                            return o
                        },
                        mountWrapper: function(e, t) {
                            var n = t.defaultValue;
                            e._wrapperState = {
                                initialChecked: t.defaultChecked || !1,
                                initialValue: null != n ? n : null,
                                listeners: null,
                                onChange: o.bind(e)
                            }
                        },
                        updateWrapper: function(e) {
                            var t = e._currentElement.props,
                                n = t.checked;
                            null != n && u.setValueForProperty(l.getNodeFromInstance(e), 'checked', n || !1);
                            var r = s.getValue(t);
                            null != r && u.setValueForProperty(l.getNodeFromInstance(e), 'value', '' + r)
                        }
                    });
                t.exports = d
            }, {
                11: 11,
                14: 14,
                154: 154,
                164: 164,
                165: 165,
                24: 24,
                40: 40,
                90: 90
            }
        ],
        48: [
            function(e, t, n) {
                'use strict';
                var r = e(42);
                t.exports = {
                    debugTool: r
                }
            }, {
                42: 42
            }
        ],
        49: [
            function(e, t, n) {
                'use strict';
                var r = e(165),
                    o = e(29),
                    i = e(40),
                    a = e(50),
                    u = (e(164), {
                        mountWrapper: function(e, t, n) {
                            var r = null;
                            if (null != n) {
                                var o = n;
                                'optgroup' === o._tag && (o = o._nativeParent),
                                    null != o && 'select' === o._tag && (r = a.getSelectValueContext(o))
                            }
                            var i = null;
                            if (null != r)
                                if (i = !1, Array.isArray(r)) {
                                    for (var u = 0; u < r.length; u++)
                                        if ('' + r[u] == '' + t.value) {
                                            i = !0;
                                            break
                                        }
                                } else i = '' + r == '' + t.value;
                            e._wrapperState = {
                                selected: i
                            }
                        },
                        postMountWrapper: function(e) {
                            var t = e._currentElement.props;
                            if (null != t.value) {
                                var n = i.getNodeFromInstance(e);
                                n.setAttribute('value', t.value)
                            }
                        },
                        getNativeProps: function(e, t) {
                            var n = r({
                                selected: void 0,
                                children: void 0
                            }, t);
                            null != e._wrapperState.selected && (n.selected = e._wrapperState.selected);
                            var i = '';
                            return o.forEach(t.children, function(e) {
                                    null != e && ('string' != typeof e && 'number' != typeof e || (i += e))
                                }),
                                i && (n.children = i),
                                n
                        }
                    });
                t.exports = u
            }, {
                164: 164,
                165: 165,
                29: 29,
                40: 40,
                50: 50
            }
        ],
        50: [
            function(e, t, n) {
                'use strict';

                function r() {
                    if (this._rootNodeID && this._wrapperState.pendingUpdate) {
                        this._wrapperState.pendingUpdate = !1;
                        var e = this._currentElement.props,
                            t = s.getValue(e);
                        null != t && o(this, Boolean(e.multiple), t)
                    }
                }

                function o(e, t, n) {
                    var r,
                        o,
                        i = l.getNodeFromInstance(e).options;
                    if (t) {
                        for (r = {}, o = 0; o < n.length; o++) r['' + n[o]] = !0;
                        for (o = 0; o < i.length; o++) {
                            var a = r.hasOwnProperty(i[o].value);
                            i[o].selected !== a && (i[o].selected = a)
                        }
                    } else {
                        for (r = '' + n, o = 0; o < i.length; o++)
                            if (i[o].value === r) return void(i[o].selected = !0);
                        i.length && (i[0].selected = !0)
                    }
                }

                function i(e) {
                    var t = this._currentElement.props,
                        n = s.executeOnChange(t, e);
                    return this._rootNodeID && (this._wrapperState.pendingUpdate = !0),
                        c.asap(r, this),
                        n
                }
                var a = e(165),
                    u = e(14),
                    s = e(24),
                    l = e(40),
                    c = e(90),
                    p = (e(164), !1),
                    d = {
                        getNativeProps: function(e, t) {
                            return a({}, u.getNativeProps(e, t), {
                                onChange: e._wrapperState.onChange,
                                value: void 0
                            })
                        },
                        mountWrapper: function(e, t) {
                            var n = s.getValue(t);
                            e._wrapperState = {
                                    pendingUpdate: !1,
                                    initialValue: null != n ? n : t.defaultValue,
                                    listeners: null,
                                    onChange: i.bind(e),
                                    wasMultiple: Boolean(t.multiple)
                                },
                                void 0 === t.value || void 0 === t.defaultValue || p || (p = !0)
                        },
                        getSelectValueContext: function(e) {
                            return e._wrapperState.initialValue
                        },
                        postUpdateWrapper: function(e) {
                            var t = e._currentElement.props;
                            e._wrapperState.initialValue = void 0;
                            var n = e._wrapperState.wasMultiple;
                            e._wrapperState.wasMultiple = Boolean(t.multiple);
                            var r = s.getValue(t);
                            null != r ? (e._wrapperState.pendingUpdate = !1, o(e, Boolean(t.multiple), r)) : n !== Boolean(t.multiple) && (null != t.defaultValue ? o(e, Boolean(t.multiple), t.defaultValue) : o(e, Boolean(t.multiple), t.multiple ? [] : ''))
                        }
                    };
                t.exports = d
            }, {
                14: 14,
                164: 164,
                165: 165,
                24: 24,
                40: 40,
                90: 90
            }
        ],
        51: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n, r) {
                    return e === n && t === r
                }

                function o(e) {
                    var t = document.selection,
                        n = t.createRange(),
                        r = n.text.length,
                        o = n.duplicate();
                    o.moveToElementText(e),
                        o.setEndPoint('EndToStart', n);
                    var i = o.text.length,
                        a = i + r;
                    return {
                        start: i,
                        end: a
                    }
                }

                function i(e) {
                    var t = window.getSelection && window.getSelection();
                    if (!t || 0 === t.rangeCount) return null;
                    var n = t.anchorNode,
                        o = t.anchorOffset,
                        i = t.focusNode,
                        a = t.focusOffset,
                        u = t.getRangeAt(0);
                    try {
                        u.startContainer.nodeType,
                            u.endContainer.nodeType
                    } catch (s) {
                        return null
                    }
                    var l = r(t.anchorNode, t.anchorOffset, t.focusNode, t.focusOffset),
                        c = l ? 0 : u.toString().length,
                        p = u.cloneRange();
                    p.selectNodeContents(e),
                        p.setEnd(u.startContainer, u.startOffset);
                    var d = r(p.startContainer, p.startOffset, p.endContainer, p.endOffset),
                        f = d ? 0 : p.toString().length,
                        h = f + c,
                        v = document.createRange();
                    v.setStart(n, o),
                        v.setEnd(i, a);
                    var m = v.collapsed;
                    return {
                        start: m ? h : f,
                        end: m ? f : h
                    }
                }

                function a(e, t) {
                    var n,
                        r,
                        o = document.selection.createRange().duplicate();
                    void 0 === t.end ? (n = t.start, r = n) : t.start > t.end ? (n = t.end, r = t.start) : (n = t.start, r = t.end),
                        o.moveToElementText(e),
                        o.moveStart('character', n),
                        o.setEndPoint('EndToStart', o),
                        o.moveEnd('character', r - n),
                        o.select()
                }

                function u(e, t) {
                    if (window.getSelection) {
                        var n = window.getSelection(),
                            r = e[c()].length,
                            o = Math.min(t.start, r),
                            i = void 0 === t.end ? o : Math.min(t.end, r);
                        if (!n.extend && o > i) {
                            var a = i;
                            i = o,
                                o = a
                        }
                        var u = l(e, o),
                            s = l(e, i);
                        if (u && s) {
                            var p = document.createRange();
                            p.setStart(u.node, u.offset),
                                n.removeAllRanges(),
                                o > i ? (n.addRange(p), n.extend(s.node, s.offset)) : (p.setEnd(s.node, s.offset), n.addRange(p))
                        }
                    }
                }
                var s = e(140),
                    l = e(125),
                    c = e(126),
                    p = s.canUseDOM && 'selection' in document && !('getSelection' in window),
                    d = {
                        getOffsets: p ? o : i,
                        setOffsets: p ? a : u
                    };
                t.exports = d
            }, {
                125: 125,
                126: 126,
                140: 140
            }
        ],
        52: [
            function(e, t, n) {
                'use strict';
                var r = e(59),
                    o = e(86),
                    i = e(91);
                r.inject();
                var a = {
                    renderToString: o.renderToString,
                    renderToStaticMarkup: o.renderToStaticMarkup,
                    version: i
                };
                t.exports = a
            }, {
                59: 59,
                86: 86,
                91: 91
            }
        ],
        53: [
            function(e, t, n) {
                'use strict';
                var r = e(165),
                    o = e(7),
                    i = e(8),
                    a = e(40),
                    u = (e(70), e(115)),
                    s = e(154),
                    l = (e(138), function(e) {
                        this._currentElement = e,
                            this._stringText = '' + e,
                            this._nativeNode = null,
                            this._nativeParent = null,
                            this._domID = null,
                            this._mountIndex = 0,
                            this._closingComment = null,
                            this._commentNodes = null
                    });
                r(l.prototype, {
                        mountComponent: function(e, t, n, r) {
                            var o = n._idCounter++,
                                s = ' react-text: ' + o + ' ',
                                l = ' /react-text ';
                            if (this._domID = o, this._nativeParent = t, e.useCreateElement) {
                                var c = n._ownerDocument,
                                    p = c.createComment(s),
                                    d = c.createComment(l),
                                    f = i(c.createDocumentFragment());
                                return i.queueChild(f, i(p)),
                                    this._stringText && i.queueChild(f, i(c.createTextNode(this._stringText))),
                                    i.queueChild(f, i(d)),
                                    a.precacheNode(this, p),
                                    this._closingComment = d,
                                    f
                            }
                            var h = u(this._stringText);
                            return e.renderToStaticMarkup ? h : '<!--' + s + '-->' + h + '<!--' + l + '-->'
                        },
                        receiveComponent: function(e, t) {
                            if (e !== this._currentElement) {
                                this._currentElement = e;
                                var n = '' + e;
                                if (n !== this._stringText) {
                                    this._stringText = n;
                                    var r = this.getNativeNode();
                                    o.replaceDelimitedText(r[0], r[1], n)
                                }
                            }
                        },
                        getNativeNode: function() {
                            var e = this._commentNodes;
                            if (e) return e;
                            if (!this._closingComment)
                                for (var t = a.getNodeFromInstance(this), n = t.nextSibling;;) {
                                    if (null == n ? s(!1) : void 0, 8 === n.nodeType && ' /react-text ' === n.nodeValue) {
                                        this._closingComment = n;
                                        break
                                    }
                                    n = n.nextSibling
                                }
                            return e = [
                                    this._nativeNode,
                                    this._closingComment
                                ],
                                this._commentNodes = e,
                                e
                        },
                        unmountComponent: function() {
                            this._closingComment = null,
                                this._commentNodes = null,
                                a.uncacheNode(this)
                        }
                    }),
                    t.exports = l
            }, {
                115: 115,
                138: 138,
                154: 154,
                165: 165,
                40: 40,
                7: 7,
                70: 70,
                8: 8
            }
        ],
        54: [
            function(e, t, n) {
                'use strict';

                function r() {
                    this._rootNodeID && d.updateWrapper(this)
                }

                function o(e) {
                    var t = this._currentElement.props,
                        n = s.executeOnChange(t, e);
                    return c.asap(r, this),
                        n
                }
                var i = e(165),
                    a = e(14),
                    u = e(11),
                    s = e(24),
                    l = e(40),
                    c = e(90),
                    p = e(154),
                    d = (e(164), {
                        getNativeProps: function(e, t) {
                            null != t.dangerouslySetInnerHTML ? p(!1) : void 0;
                            var n = i({}, a.getNativeProps(e, t), {
                                defaultValue: void 0,
                                value: void 0,
                                children: e._wrapperState.initialValue,
                                onChange: e._wrapperState.onChange
                            });
                            return n
                        },
                        mountWrapper: function(e, t) {
                            var n = t.defaultValue,
                                r = t.children;
                            null != r && (null != n ? p(!1) : void 0, Array.isArray(r) && (r.length <= 1 ? void 0 : p(!1), r = r[0]), n = '' + r),
                                null == n && (n = '');
                            var i = s.getValue(t);
                            e._wrapperState = {
                                initialValue: '' + (null != i ? i : n),
                                listeners: null,
                                onChange: o.bind(e)
                            }
                        },
                        updateWrapper: function(e) {
                            var t = e._currentElement.props,
                                n = s.getValue(t);
                            null != n && u.setValueForProperty(l.getNodeFromInstance(e), 'value', '' + n)
                        }
                    });
                t.exports = d
            }, {
                11: 11,
                14: 14,
                154: 154,
                164: 164,
                165: 165,
                24: 24,
                40: 40,
                90: 90
            }
        ],
        55: [
            function(e, t, n) {
                'use strict';

                function r(e, t) {
                    '_nativeNode' in e ? void 0 : s(!1),
                        '_nativeNode' in t ? void 0 : s(!1);
                    for (var n = 0, r = e; r; r = r._nativeParent) n++;
                    for (var o = 0, i = t; i; i = i._nativeParent) o++;
                    for (; n - o > 0;) e = e._nativeParent,
                        n--;
                    for (; o - n > 0;) t = t._nativeParent,
                        o--;
                    for (var a = n; a--;) {
                        if (e === t) return e;
                        e = e._nativeParent,
                            t = t._nativeParent
                    }
                    return null
                }

                function o(e, t) {
                    '_nativeNode' in e ? void 0 : s(!1),
                        '_nativeNode' in t ? void 0 : s(!1);
                    for (; t;) {
                        if (t === e) return !0;
                        t = t._nativeParent
                    }
                    return !1
                }

                function i(e) {
                    return '_nativeNode' in e ? void 0 : s(!1),
                        e._nativeParent
                }

                function a(e, t, n) {
                    for (var r = []; e;) r.push(e),
                        e = e._nativeParent;
                    var o;
                    for (o = r.length; o-- > 0;) t(r[o], !1, n);
                    for (o = 0; o < r.length; o++) t(r[o], !0, n)
                }

                function u(e, t, n, o, i) {
                    for (var a = e && t ? r(e, t) : null, u = []; e && e !== a;) u.push(e),
                        e = e._nativeParent;
                    for (var s = []; t && t !== a;) s.push(t),
                        t = t._nativeParent;
                    var l;
                    for (l = 0; l < u.length; l++) n(u[l], !0, o);
                    for (l = s.length; l-- > 0;) n(s[l], !1, i)
                }
                var s = e(154);
                t.exports = {
                    isAncestor: o,
                    getLowestCommonAncestor: r,
                    getParentInstance: i,
                    traverseTwoPhase: a,
                    traverseEnterLeave: u
                }
            }, {
                154: 154
            }
        ],
        56: [
            function(e, t, n) {
                'use strict';
                var r,
                    o = (e(10), e(18), e(164), {
                        onCreateMarkupForProperty: function(e, t) {
                            r(e)
                        },
                        onSetValueForProperty: function(e, t, n) {
                            r(t)
                        },
                        onDeleteValueForProperty: function(e, t) {
                            r(t)
                        }
                    });
                t.exports = o
            }, {
                10: 10,
                164: 164,
                18: 18
            }
        ],
        57: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n, r, o, i) {}

                function o(e) {}
                var i = (e(140), e(162), e(164), []),
                    a = {
                        addDevtool: function(e) {
                            i.push(e)
                        },
                        removeDevtool: function(e) {
                            for (var t = 0; t < i.length; t++) i[t] === e && (i.splice(t, 1), t--)
                        },
                        beginProfiling: function() {},
                        endProfiling: function() {},
                        getFlushHistory: function() {},
                        onBeginFlush: function() {
                            r('onBeginFlush')
                        },
                        onEndFlush: function() {
                            r('onEndFlush')
                        },
                        onBeginLifeCycleTimer: function(e, t) {
                            o(e),
                                r('onBeginLifeCycleTimer', e, t)
                        },
                        onEndLifeCycleTimer: function(e, t) {
                            o(e),
                                r('onEndLifeCycleTimer', e, t)
                        },
                        onBeginReconcilerTimer: function(e, t) {
                            o(e),
                                r('onBeginReconcilerTimer', e, t)
                        },
                        onEndReconcilerTimer: function(e, t) {
                            o(e),
                                r('onEndReconcilerTimer', e, t)
                        },
                        onBeginProcessingChildContext: function() {
                            r('onBeginProcessingChildContext')
                        },
                        onEndProcessingChildContext: function() {
                            r('onEndProcessingChildContext')
                        },
                        onNativeOperation: function(e, t, n) {
                            o(e),
                                r('onNativeOperation', e, t, n)
                        },
                        onSetState: function() {
                            r('onSetState')
                        },
                        onSetDisplayName: function(e, t) {
                            o(e),
                                r('onSetDisplayName', e, t)
                        },
                        onSetChildren: function(e, t) {
                            o(e),
                                r('onSetChildren', e, t)
                        },
                        onSetOwner: function(e, t) {
                            o(e),
                                r('onSetOwner', e, t)
                        },
                        onSetText: function(e, t) {
                            o(e),
                                r('onSetText', e, t)
                        },
                        onMountRootComponent: function(e) {
                            o(e),
                                r('onMountRootComponent', e)
                        },
                        onMountComponent: function(e) {
                            o(e),
                                r('onMountComponent', e)
                        },
                        onUpdateComponent: function(e) {
                            o(e),
                                r('onUpdateComponent', e)
                        },
                        onUnmountComponent: function(e) {
                            o(e),
                                r('onUnmountComponent', e)
                        }
                    };
                t.exports = a
            }, {
                140: 140,
                162: 162,
                164: 164
            }
        ],
        58: [
            function(e, t, n) {
                'use strict';

                function r() {
                    this.reinitializeTransaction()
                }
                var o = e(165),
                    i = e(90),
                    a = e(108),
                    u = e(146),
                    s = {
                        initialize: u,
                        close: function() {
                            d.isBatchingUpdates = !1
                        }
                    },
                    l = {
                        initialize: u,
                        close: i.flushBatchedUpdates.bind(i)
                    },
                    c = [
                        l,
                        s
                    ];
                o(r.prototype, a.Mixin, {
                    getTransactionWrappers: function() {
                        return c
                    }
                });
                var p = new r,
                    d = {
                        isBatchingUpdates: !1,
                        batchedUpdates: function(e, t, n, r, o, i) {
                            var a = d.isBatchingUpdates;
                            d.isBatchingUpdates = !0,
                                a ? e(t, n, r, o, i) : p.perform(e, null, t, n, r, o, i)
                        }
                    };
                t.exports = d
            }, {
                108: 108,
                146: 146,
                165: 165,
                90: 90
            }
        ],
        59: [
            function(e, t, n) {
                'use strict';

                function r() {
                    E || (E = !0, g.EventEmitter.injectReactEventListener(m), g.EventPluginHub.injectEventPluginOrder(a), g.EventPluginUtils.injectComponentTree(p), g.EventPluginUtils.injectTreeTraversal(f), g.EventPluginHub.injectEventPluginsByName({
                        SimpleEventPlugin: _,
                        EnterLeaveEventPlugin: u,
                        ChangeEventPlugin: i,
                        SelectEventPlugin: b,
                        BeforeInputEventPlugin: o
                    }), g.NativeComponent.injectGenericComponentClass(c), g.NativeComponent.injectTextComponentClass(h), g.DOMProperty.injectDOMPropertyConfig(s), g.DOMProperty.injectDOMPropertyConfig(C), g.EmptyComponent.injectEmptyComponentFactory(function(e) {
                        return new d(e)
                    }), g.Updates.injectReconcileTransaction(y), g.Updates.injectBatchingStrategy(v), g.Component.injectEnvironment(l))
                }
                var o = e(2),
                    i = e(6),
                    a = e(13),
                    u = e(15),
                    s = e(22),
                    l = e(32),
                    c = e(38),
                    p = e(40),
                    d = e(43),
                    f = e(55),
                    h = e(53),
                    v = e(58),
                    m = e(65),
                    g = e(67),
                    y = e(82),
                    C = e(92),
                    b = e(93),
                    _ = e(94),
                    E = !1;
                t.exports = {
                    inject: r
                }
            }, {
                13: 13,
                15: 15,
                2: 2,
                22: 22,
                32: 32,
                38: 38,
                40: 40,
                43: 43,
                53: 53,
                55: 55,
                58: 58,
                6: 6,
                65: 65,
                67: 67,
                82: 82,
                92: 92,
                93: 93,
                94: 94
            }
        ],
        60: [
            function(e, t, n) {
                'use strict';
                var r = e(165),
                    o = e(35),
                    i = (e(164), e(112), 'function' == typeof Symbol && Symbol['for'] && Symbol['for']('react.element') || 60103),
                    a = {
                        key: !0,
                        ref: !0,
                        __self: !0,
                        __source: !0
                    },
                    u = function(e, t, n, r, o, a, u) {
                        var s = {
                            $$typeof: i,
                            type: e,
                            key: t,
                            ref: n,
                            props: u,
                            _owner: a
                        };
                        return s
                    };
                u.createElement = function(e, t, n) {
                        var r,
                            i = {},
                            s = null,
                            l = null,
                            c = null,
                            p = null;
                        if (null != t) {
                            l = void 0 === t.ref ? null : t.ref,
                                s = void 0 === t.key ? null : '' + t.key,
                                c = void 0 === t.__self ? null : t.__self,
                                p = void 0 === t.__source ? null : t.__source;
                            for (r in t) t.hasOwnProperty(r) && !a.hasOwnProperty(r) && (i[r] = t[r])
                        }
                        var d = arguments.length - 2;
                        if (1 === d) i.children = n;
                        else if (d > 1) {
                            for (var f = Array(d), h = 0; d > h; h++) f[h] = arguments[h + 2];
                            i.children = f
                        }
                        if (e && e.defaultProps) {
                            var v = e.defaultProps;
                            for (r in v) void 0 === i[r] && (i[r] = v[r])
                        }
                        return u(e, s, l, c, p, o.current, i)
                    },
                    u.createFactory = function(e) {
                        var t = u.createElement.bind(null, e);
                        return t.type = e,
                            t
                    },
                    u.cloneAndReplaceKey = function(e, t) {
                        var n = u(e.type, t, e.ref, e._self, e._source, e._owner, e.props);
                        return n
                    },
                    u.cloneElement = function(e, t, n) {
                        var i,
                            s = r({}, e.props),
                            l = e.key,
                            c = e.ref,
                            p = e._self,
                            d = e._source,
                            f = e._owner;
                        if (null != t) {
                            void 0 !== t.ref && (c = t.ref, f = o.current),
                                void 0 !== t.key && (l = '' + t.key);
                            var h;
                            e.type && e.type.defaultProps && (h = e.type.defaultProps);
                            for (i in t) t.hasOwnProperty(i) && !a.hasOwnProperty(i) && (void 0 === t[i] && void 0 !== h ? s[i] = h[i] : s[i] = t[i])
                        }
                        var v = arguments.length - 2;
                        if (1 === v) s.children = n;
                        else if (v > 1) {
                            for (var m = Array(v), g = 0; v > g; g++) m[g] = arguments[g + 2];
                            s.children = m
                        }
                        return u(e.type, l, c, p, d, f, s)
                    },
                    u.isValidElement = function(e) {
                        return 'object' == typeof e && null !== e && e.$$typeof === i
                    },
                    t.exports = u
            }, {
                112: 112,
                164: 164,
                165: 165,
                35: 35
            }
        ],
        61: [
            function(e, t, n) {
                'use strict';

                function r() {
                    if (p.current) {
                        var e = p.current.getName();
                        if (e) return ' Check the render method of `' + e + '`.'
                    }
                    return ''
                }

                function o(e, t) {
                    e._store && !e._store.validated && null == e.key && (e._store.validated = !0, i('uniqueKey', e, t))
                }

                function i(e, t, n) {
                    var o = r();
                    if (!o) {
                        var i = 'string' == typeof n ? n : n.displayName || n.name;
                        i && (o = ' Check the top-level render call using <' + i + '>.')
                    }
                    var a = h[e] || (h[e] = {});
                    if (a[o]) return null;
                    a[o] = !0;
                    var u = {
                        parentOrOwner: o,
                        url: ' See https://fb.me/react-warning-keys for more information.',
                        childOwner: null
                    };
                    return t && t._owner && t._owner !== p.current && (u.childOwner = ' It was passed a child from ' + t._owner.getName() + '.'),
                        u
                }

                function a(e, t) {
                    if ('object' == typeof e)
                        if (Array.isArray(e))
                            for (var n = 0; n < e.length; n++) {
                                var r = e[n];
                                l.isValidElement(r) && o(r, t)
                            } else if (l.isValidElement(e)) e._store && (e._store.validated = !0);
                            else if (e) {
                        var i = d(e);
                        if (i && i !== e.entries)
                            for (var a, u = i.call(e); !(a = u.next()).done;) l.isValidElement(a.value) && o(a.value, t)
                    }
                }

                function u(e, t, n, o) {
                    for (var i in t)
                        if (t.hasOwnProperty(i)) {
                            var a;
                            try {
                                'function' != typeof t[i] ? f(!1) : void 0,
                                    a = t[i](n, i, e, o)
                            } catch (u) {
                                a = u
                            }
                            a instanceof Error && !(a.message in v) && (v[a.message] = !0, r())
                        }
                }

                function s(e) {
                    var t = e.type;
                    if ('function' == typeof t) {
                        var n = t.displayName || t.name;
                        t.propTypes && u(n, t.propTypes, e.props, c.prop),
                            'function' == typeof t.getDefaultProps
                    }
                }
                var l = e(60),
                    c = e(80),
                    p = (e(79), e(35)),
                    d = (e(112), e(123)),
                    f = e(154),
                    h = (e(164), {}),
                    v = {},
                    m = {
                        createElement: function(e, t, n) {
                            var r = 'string' == typeof e || 'function' == typeof e,
                                o = l.createElement.apply(this, arguments);
                            if (null == o) return o;
                            if (r)
                                for (var i = 2; i < arguments.length; i++) a(arguments[i], e);
                            return s(o),
                                o
                        },
                        createFactory: function(e) {
                            var t = m.createElement.bind(null, e);
                            return t.type = e,
                                t
                        },
                        cloneElement: function(e, t, n) {
                            for (var r = l.cloneElement.apply(this, arguments), o = 2; o < arguments.length; o++) a(arguments[o], r.type);
                            return s(r),
                                r
                        }
                    };
                t.exports = m
            }, {
                112: 112,
                123: 123,
                154: 154,
                164: 164,
                35: 35,
                60: 60,
                79: 79,
                80: 80
            }
        ],
        62: [
            function(e, t, n) {
                'use strict';
                var r,
                    o = {
                        injectEmptyComponentFactory: function(e) {
                            r = e
                        }
                    },
                    i = {
                        create: function(e) {
                            return r(e)
                        }
                    };
                i.injection = o,
                    t.exports = i
            }, {}
        ],
        63: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n, r) {
                    try {
                        return t(n, r)
                    } catch (i) {
                        return void(null === o && (o = i))
                    }
                }
                var o = null,
                    i = {
                        invokeGuardedCallback: r,
                        invokeGuardedCallbackWithCatch: r,
                        rethrowCaughtError: function() {
                            if (o) {
                                var e = o;
                                throw o = null,
                                    e
                            }
                        }
                    };
                t.exports = i
            }, {}
        ],
        64: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    o.enqueueEvents(e),
                        o.processEventQueue(!1)
                }
                var o = e(17),
                    i = {
                        handleTopLevel: function(e, t, n, i) {
                            var a = o.extractEvents(e, t, n, i);
                            r(a)
                        }
                    };
                t.exports = i
            }, {
                17: 17
            }
        ],
        65: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    for (; e._nativeParent;) e = e._nativeParent;
                    var t = p.getNodeFromInstance(e),
                        n = t.parentNode;
                    return p.getClosestInstanceFromNode(n)
                }

                function o(e, t) {
                    this.topLevelType = e,
                        this.nativeEvent = t,
                        this.ancestors = []
                }

                function i(e) {
                    var t = f(e.nativeEvent),
                        n = p.getClosestInstanceFromNode(t),
                        o = n;
                    do e.ancestors.push(o),
                        o = o && r(o);
                    while (o);
                    for (var i = 0; i < e.ancestors.length; i++) n = e.ancestors[i],
                        v._handleTopLevel(e.topLevelType, n, e.nativeEvent, f(e.nativeEvent))
                }

                function a(e) {
                    var t = h(window);
                    e(t)
                }
                var u = e(165),
                    s = e(139),
                    l = e(140),
                    c = e(25),
                    p = e(40),
                    d = e(90),
                    f = e(122),
                    h = e(151);
                u(o.prototype, {
                        destructor: function() {
                            this.topLevelType = null,
                                this.nativeEvent = null,
                                this.ancestors.length = 0
                        }
                    }),
                    c.addPoolingTo(o, c.twoArgumentPooler);
                var v = {
                    _enabled: !0,
                    _handleTopLevel: null,
                    WINDOW_HANDLE: l.canUseDOM ? window : null,
                    setHandleTopLevel: function(e) {
                        v._handleTopLevel = e
                    },
                    setEnabled: function(e) {
                        v._enabled = !!e
                    },
                    isEnabled: function() {
                        return v._enabled
                    },
                    trapBubbledEvent: function(e, t, n) {
                        var r = n;
                        return r ? s.listen(r, t, v.dispatchEvent.bind(null, e)) : null
                    },
                    trapCapturedEvent: function(e, t, n) {
                        var r = n;
                        return r ? s.capture(r, t, v.dispatchEvent.bind(null, e)) : null
                    },
                    monitorScrollValue: function(e) {
                        var t = a.bind(null, e);
                        s.listen(window, 'scroll', t)
                    },
                    dispatchEvent: function(e, t) {
                        if (v._enabled) {
                            var n = o.getPooled(e, t);
                            try {
                                d.batchedUpdates(i, n)
                            } finally {
                                o.release(n)
                            }
                        }
                    }
                };
                t.exports = v
            }, {
                122: 122,
                139: 139,
                140: 140,
                151: 151,
                165: 165,
                25: 25,
                40: 40,
                90: 90
            }
        ],
        66: [
            function(e, t, n) {
                'use strict';
                var r = {
                    logTopLevelRenders: !1
                };
                t.exports = r
            }, {}
        ],
        67: [
            function(e, t, n) {
                'use strict';
                var r = e(10),
                    o = e(17),
                    i = e(19),
                    a = e(33),
                    u = e(30),
                    s = e(62),
                    l = e(27),
                    c = e(75),
                    p = e(90),
                    d = {
                        Component: a.injection,
                        Class: u.injection,
                        DOMProperty: r.injection,
                        EmptyComponent: s.injection,
                        EventPluginHub: o.injection,
                        EventPluginUtils: i.injection,
                        EventEmitter: l.injection,
                        NativeComponent: c.injection,
                        Updates: p.injection
                    };
                t.exports = d
            }, {
                10: 10,
                17: 17,
                19: 19,
                27: 27,
                30: 30,
                33: 33,
                62: 62,
                75: 75,
                90: 90
            }
        ],
        68: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    return i(document.documentElement, e)
                }
                var o = e(51),
                    i = e(143),
                    a = e(148),
                    u = e(149),
                    s = {
                        hasSelectionCapabilities: function(e) {
                            var t = e && e.nodeName && e.nodeName.toLowerCase();
                            return t && ('input' === t && 'text' === e.type || 'textarea' === t || 'true' === e.contentEditable)
                        },
                        getSelectionInformation: function() {
                            var e = u();
                            return {
                                focusedElem: e,
                                selectionRange: s.hasSelectionCapabilities(e) ? s.getSelection(e) : null
                            }
                        },
                        restoreSelection: function(e) {
                            var t = u(),
                                n = e.focusedElem,
                                o = e.selectionRange;
                            t !== n && r(n) && (s.hasSelectionCapabilities(n) && s.setSelection(n, o), a(n))
                        },
                        getSelection: function(e) {
                            var t;
                            if ('selectionStart' in e) t = {
                                start: e.selectionStart,
                                end: e.selectionEnd
                            };
                            else if (document.selection && e.nodeName && 'input' === e.nodeName.toLowerCase()) {
                                var n = document.selection.createRange();
                                n.parentElement() === e && (t = {
                                    start: -n.moveStart('character', -e.value.length),
                                    end: -n.moveEnd('character', -e.value.length)
                                })
                            } else t = o.getOffsets(e);
                            return t || {
                                start: 0,
                                end: 0
                            }
                        },
                        setSelection: function(e, t) {
                            var n = t.start,
                                r = t.end;
                            if (void 0 === r && (r = n), 'selectionStart' in e) e.selectionStart = n,
                                e.selectionEnd = Math.min(r, e.value.length);
                            else if (document.selection && e.nodeName && 'input' === e.nodeName.toLowerCase()) {
                                var i = e.createTextRange();
                                i.collapse(!0),
                                    i.moveStart('character', n),
                                    i.moveEnd('character', r - n),
                                    i.select()
                            } else o.setOffsets(e, t)
                        }
                    };
                t.exports = s
            }, {
                143: 143,
                148: 148,
                149: 149,
                51: 51
            }
        ],
        69: [
            function(e, t, n) {
                'use strict';
                var r = {
                    remove: function(e) {
                        e._reactInternalInstance = void 0
                    },
                    get: function(e) {
                        return e._reactInternalInstance
                    },
                    has: function(e) {
                        return void 0 !== e._reactInternalInstance
                    },
                    set: function(e, t) {
                        e._reactInternalInstance = t
                    }
                };
                t.exports = r
            }, {}
        ],
        70: [
            function(e, t, n) {
                'use strict';
                var r = e(57);
                t.exports = {
                    debugTool: r
                }
            }, {
                57: 57
            }
        ],
        71: [
            function(e, t, n) {
                'use strict';
                var r = e(111),
                    o = /\/?>/,
                    i = /^<\!\-\-/,
                    a = {
                        CHECKSUM_ATTR_NAME: 'data-react-checksum',
                        addChecksumToMarkup: function(e) {
                            var t = r(e);
                            return i.test(e) ? e : e.replace(o, ' ' + a.CHECKSUM_ATTR_NAME + '="' + t + '"$&')
                        },
                        canReuseMarkup: function(e, t) {
                            var n = t.getAttribute(a.CHECKSUM_ATTR_NAME);
                            n = n && parseInt(n, 10);
                            var o = r(e);
                            return o === n
                        }
                    };
                t.exports = a
            }, {
                111: 111
            }
        ],
        72: [
            function(e, t, n) {
                'use strict';

                function r(e, t) {
                    for (var n = Math.min(e.length, t.length), r = 0; n > r; r++)
                        if (e.charAt(r) !== t.charAt(r)) return r;
                    return e.length === t.length ? -1 : n
                }

                function o(e) {
                    return e ? e.nodeType === D ? e.documentElement : e.firstChild : null
                }

                function i(e) {
                    return e.getAttribute && e.getAttribute(M) || ''
                }

                function a(e, t, n, r, o) {
                    var i;
                    if (C.logTopLevelRenders) {
                        var a = e._currentElement.props,
                            u = a.type;
                        i = 'React mount: ' + ('string' == typeof u ? u : u.displayName || u.name),
                            console.time(i)
                    }
                    var s = _.mountComponent(e, n, null, m(e, t), o);
                    i && console.timeEnd(i),
                        e._renderedComponent._topLevelWrapper = e,
                        U._mountImageIntoNode(s, t, e, r, n)
                }

                function u(e, t, n, r) {
                    var o = x.ReactReconcileTransaction.getPooled(!n && g.useCreateElement);
                    o.perform(a, null, e, t, o, n, r),
                        x.ReactReconcileTransaction.release(o)
                }

                function s(e, t, n) {
                    for (_.unmountComponent(e, n), t.nodeType === D && (t = t.documentElement); t.lastChild;) t.removeChild(t.lastChild)
                }

                function l(e) {
                    var t = o(e);
                    if (t) {
                        var n = v.getInstanceFromNode(t);
                        return !(!n || !n._nativeParent)
                    }
                }

                function c(e) {
                    var t = o(e),
                        n = t && v.getInstanceFromNode(t);
                    return n && !n._nativeParent ? n : null
                }

                function p(e) {
                    var t = c(e);
                    return t ? t._nativeContainerInfo._topLevelWrapper : null
                }
                var d = e(8),
                    f = e(10),
                    h = e(27),
                    v = (e(35), e(40)),
                    m = e(41),
                    g = e(45),
                    y = e(60),
                    C = e(66),
                    b = (e(70), e(71)),
                    _ = e(83),
                    E = e(89),
                    x = e(90),
                    N = e(147),
                    T = e(128),
                    P = e(154),
                    w = e(134),
                    S = e(136),
                    M = (e(164), f.ID_ATTRIBUTE_NAME),
                    k = f.ROOT_ATTRIBUTE_NAME,
                    R = 1,
                    D = 9,
                    I = 11,
                    O = {},
                    A = 1,
                    L = function() {
                        this.rootID = A++
                    };
                L.prototype.isReactComponent = {},
                    L.prototype.render = function() {
                        return this.props
                    };
                var U = {
                    TopLevelWrapper: L,
                    _instancesByReactRootID: O,
                    scrollMonitor: function(e, t) {
                        t()
                    },
                    _updateRootComponent: function(e, t, n, r) {
                        return U.scrollMonitor(n, function() {
                                E.enqueueElementInternal(e, t),
                                    r && E.enqueueCallbackInternal(e, r)
                            }),
                            e
                    },
                    _renderNewRootComponent: function(e, t, n, r) {
                        !t || t.nodeType !== R && t.nodeType !== D && t.nodeType !== I ? P(!1) : void 0,
                            h.ensureScrollValueMonitoring();
                        var o = T(e);
                        x.batchedUpdates(u, o, t, n, r);
                        var i = o._instance.rootID;
                        return O[i] = o,
                            o
                    },
                    renderSubtreeIntoContainer: function(e, t, n, r) {
                        return null == e || null == e._reactInternalInstance ? P(!1) : void 0,
                            U._renderSubtreeIntoContainer(e, t, n, r)
                    },
                    _renderSubtreeIntoContainer: function(e, t, n, r) {
                        E.validateCallback(r, 'ReactDOM.render'),
                            y.isValidElement(t) ? void 0 : P(!1);
                        var a = y(L, null, null, null, null, null, t),
                            u = p(n);
                        if (u) {
                            var s = u._currentElement,
                                c = s.props;
                            if (S(c, t)) {
                                var d = u._renderedComponent.getPublicInstance(),
                                    f = r && function() {
                                        r.call(d)
                                    };
                                return U._updateRootComponent(u, a, n, f),
                                    d
                            }
                            U.unmountComponentAtNode(n)
                        }
                        var h = o(n),
                            v = h && !!i(h),
                            m = l(n),
                            g = v && !u && !m,
                            C = U._renderNewRootComponent(a, n, g, null != e ? e._reactInternalInstance._processChildContext(e._reactInternalInstance._context) : N)._renderedComponent.getPublicInstance();
                        return r && r.call(C),
                            C
                    },
                    render: function(e, t, n) {
                        return U._renderSubtreeIntoContainer(null, e, t, n)
                    },
                    unmountComponentAtNode: function(e) {
                        !e || e.nodeType !== R && e.nodeType !== D && e.nodeType !== I ? P(!1) : void 0;
                        var t = p(e);
                        return t ? (delete O[t._instance.rootID], x.batchedUpdates(s, t, e, !1), !0) : (l(e), 1 === e.nodeType && e.hasAttribute(k), !1)
                    },
                    _mountImageIntoNode: function(e, t, n, i, a) {
                        if (!t || t.nodeType !== R && t.nodeType !== D && t.nodeType !== I ? P(!1) : void 0, i) {
                            var u = o(t);
                            if (b.canReuseMarkup(e, u)) return void v.precacheNode(n, u);
                            var s = u.getAttribute(b.CHECKSUM_ATTR_NAME);
                            u.removeAttribute(b.CHECKSUM_ATTR_NAME);
                            var l = u.outerHTML;
                            u.setAttribute(b.CHECKSUM_ATTR_NAME, s);
                            var c = e,
                                p = r(c, l);
                            ' (client) ' + c.substring(p - 20, p + 20) + '\n (server) ' + l.substring(p - 20, p + 20),
                                t.nodeType === D ? P(!1) : void 0
                        }
                        if (t.nodeType === D ? P(!1) : void 0, a.useCreateElement) {
                            for (; t.lastChild;) t.removeChild(t.lastChild);
                            d.insertTreeBefore(t, e, null)
                        } else w(t, e),
                            v.precacheNode(n, t.firstChild)
                    }
                };
                t.exports = U
            }, {
                10: 10,
                128: 128,
                134: 134,
                136: 136,
                147: 147,
                154: 154,
                164: 164,
                27: 27,
                35: 35,
                40: 40,
                41: 41,
                45: 45,
                60: 60,
                66: 66,
                70: 70,
                71: 71,
                8: 8,
                83: 83,
                89: 89,
                90: 90
            }
        ],
        73: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n) {
                    return {
                        type: p.INSERT_MARKUP,
                        content: e,
                        fromIndex: null,
                        fromNode: null,
                        toIndex: n,
                        afterNode: t
                    }
                }

                function o(e, t, n) {
                    return {
                        type: p.MOVE_EXISTING,
                        content: null,
                        fromIndex: e._mountIndex,
                        fromNode: d.getNativeNode(e),
                        toIndex: n,
                        afterNode: t
                    }
                }

                function i(e, t) {
                    return {
                        type: p.REMOVE_NODE,
                        content: null,
                        fromIndex: e._mountIndex,
                        fromNode: t,
                        toIndex: null,
                        afterNode: null
                    }
                }

                function a(e) {
                    return {
                        type: p.SET_MARKUP,
                        content: e,
                        fromIndex: null,
                        fromNode: null,
                        toIndex: null,
                        afterNode: null
                    }
                }

                function u(e) {
                    return {
                        type: p.TEXT_CONTENT,
                        content: e,
                        fromIndex: null,
                        fromNode: null,
                        toIndex: null,
                        afterNode: null
                    }
                }

                function s(e, t) {
                    return t && (e = e || [], e.push(t)),
                        e
                }

                function l(e, t) {
                    c.processChildrenUpdates(e, t)
                }
                var c = e(33),
                    p = (e(70), e(74)),
                    d = (e(35), e(83)),
                    f = e(28),
                    h = (e(146), e(117)),
                    v = e(154),
                    m = {
                        Mixin: {
                            _reconcilerInstantiateChildren: function(e, t, n) {
                                return f.instantiateChildren(e, t, n)
                            },
                            _reconcilerUpdateChildren: function(e, t, n, r, o) {
                                var i;
                                return i = h(t),
                                    f.updateChildren(e, i, n, r, o),
                                    i
                            },
                            mountChildren: function(e, t, n) {
                                var r = this._reconcilerInstantiateChildren(e, t, n);
                                this._renderedChildren = r;
                                var o = [],
                                    i = 0;
                                for (var a in r)
                                    if (r.hasOwnProperty(a)) {
                                        var u = r[a],
                                            s = d.mountComponent(u, t, this, this._nativeContainerInfo, n);
                                        u._mountIndex = i++,
                                            o.push(s)
                                    }
                                return o
                            },
                            updateTextContent: function(e) {
                                var t = this._renderedChildren;
                                f.unmountChildren(t, !1);
                                for (var n in t) t.hasOwnProperty(n) && v(!1);
                                var r = [
                                    u(e)
                                ];
                                l(this, r)
                            },
                            updateMarkup: function(e) {
                                var t = this._renderedChildren;
                                f.unmountChildren(t, !1);
                                for (var n in t) t.hasOwnProperty(n) && v(!1);
                                var r = [
                                    a(e)
                                ];
                                l(this, r)
                            },
                            updateChildren: function(e, t, n) {
                                this._updateChildren(e, t, n)
                            },
                            _updateChildren: function(e, t, n) {
                                var r = this._renderedChildren,
                                    o = {},
                                    i = this._reconcilerUpdateChildren(r, e, o, t, n);
                                if (i || r) {
                                    var a,
                                        u = null,
                                        c = 0,
                                        p = 0,
                                        f = null;
                                    for (a in i)
                                        if (i.hasOwnProperty(a)) {
                                            var h = r && r[a],
                                                v = i[a];
                                            h === v ? (u = s(u, this.moveChild(h, f, p, c)), c = Math.max(h._mountIndex, c), h._mountIndex = p) : (h && (c = Math.max(h._mountIndex, c)), u = s(u, this._mountChildAtIndex(v, f, p, t, n))),
                                                p++,
                                                f = d.getNativeNode(v)
                                        }
                                    for (a in o) o.hasOwnProperty(a) && (u = s(u, this._unmountChild(r[a], o[a])));
                                    u && l(this, u),
                                        this._renderedChildren = i
                                }
                            },
                            unmountChildren: function(e) {
                                var t = this._renderedChildren;
                                f.unmountChildren(t, e),
                                    this._renderedChildren = null
                            },
                            moveChild: function(e, t, n, r) {
                                return e._mountIndex < r ? o(e, t, n) : void 0
                            },
                            createChild: function(e, t, n) {
                                return r(n, t, e._mountIndex)
                            },
                            removeChild: function(e, t) {
                                return i(e, t)
                            },
                            _mountChildAtIndex: function(e, t, n, r, o) {
                                var i = d.mountComponent(e, r, this, this._nativeContainerInfo, o);
                                return e._mountIndex = n,
                                    this.createChild(e, t, i)
                            },
                            _unmountChild: function(e, t) {
                                var n = this.removeChild(e, t);
                                return e._mountIndex = null,
                                    n
                            }
                        }
                    };
                t.exports = m
            }, {
                117: 117,
                146: 146,
                154: 154,
                28: 28,
                33: 33,
                35: 35,
                70: 70,
                74: 74,
                83: 83
            }
        ],
        74: [
            function(e, t, n) {
                'use strict';
                var r = e(157),
                    o = r({
                        INSERT_MARKUP: null,
                        MOVE_EXISTING: null,
                        REMOVE_NODE: null,
                        SET_MARKUP: null,
                        TEXT_CONTENT: null
                    });
                t.exports = o
            }, {
                157: 157
            }
        ],
        75: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    if ('function' == typeof e.type) return e.type;
                    var t = e.type,
                        n = p[t];
                    return null == n && (p[t] = n = l(t)),
                        n
                }

                function o(e) {
                    return c ? void 0 : s(!1),
                        new c(e)
                }

                function i(e) {
                    return new d(e)
                }

                function a(e) {
                    return e instanceof d
                }
                var u = e(165),
                    s = e(154),
                    l = null,
                    c = null,
                    p = {},
                    d = null,
                    f = {
                        injectGenericComponentClass: function(e) {
                            c = e
                        },
                        injectTextComponentClass: function(e) {
                            d = e
                        },
                        injectComponentClasses: function(e) {
                            u(p, e)
                        }
                    },
                    h = {
                        getComponentClassForElement: r,
                        createInternalComponent: o,
                        createInstanceForText: i,
                        isTextComponent: a,
                        injection: f
                    };
                t.exports = h
            }, {
                154: 154,
                165: 165
            }
        ],
        76: [
            function(e, t, n) {
                'use strict';
                var r = e(60),
                    o = e(154),
                    i = {
                        NATIVE: 0,
                        COMPOSITE: 1,
                        EMPTY: 2,
                        getType: function(e) {
                            return null === e || e === !1 ? i.EMPTY : r.isValidElement(e) ? 'function' == typeof e.type ? i.COMPOSITE : i.NATIVE : void o(!1)
                        }
                    };
                t.exports = i
            }, {
                154: 154,
                60: 60
            }
        ],
        77: [
            function(e, t, n) {
                'use strict';

                function r(e, t) {}
                var o = (e(164), {
                    isMounted: function(e) {
                        return !1
                    },
                    enqueueCallback: function(e, t) {},
                    enqueueForceUpdate: function(e) {
                        r(e, 'forceUpdate')
                    },
                    enqueueReplaceState: function(e, t) {
                        r(e, 'replaceState')
                    },
                    enqueueSetState: function(e, t) {
                        r(e, 'setState')
                    }
                });
                t.exports = o
            }, {
                164: 164
            }
        ],
        78: [
            function(e, t, n) {
                'use strict';
                var r = e(154),
                    o = {
                        isValidOwner: function(e) {
                            return !(!e || 'function' != typeof e.attachRef || 'function' != typeof e.detachRef)
                        },
                        addComponentAsRefTo: function(e, t, n) {
                            o.isValidOwner(n) ? void 0 : r(!1),
                                n.attachRef(t, e)
                        },
                        removeComponentAsRefFrom: function(e, t, n) {
                            o.isValidOwner(n) ? void 0 : r(!1);
                            var i = n.getPublicInstance();
                            i && i.refs[t] === e.getPublicInstance() && n.detachRef(t)
                        }
                    };
                t.exports = o
            }, {
                154: 154
            }
        ],
        79: [
            function(e, t, n) {
                'use strict';
                var r = {};
                t.exports = r
            }, {}
        ],
        80: [
            function(e, t, n) {
                'use strict';
                var r = e(157),
                    o = r({
                        prop: null,
                        context: null,
                        childContext: null
                    });
                t.exports = o
            }, {
                157: 157
            }
        ],
        81: [
            function(e, t, n) {
                'use strict';

                function r(e, t) {
                    return e === t ? 0 !== e || 1 / e === 1 / t : e !== e && t !== t
                }

                function o(e) {
                    function t(t, n, r, o, i, a) {
                        if (o = o || x, a = a || r, null == n[r]) {
                            var u = b[i];
                            return t ? new Error('Required ' + u + ' `' + a + '` was not specified in ' + ('`' + o + '`.')) : null
                        }
                        return e(n, r, o, i, a)
                    }
                    var n = t.bind(null, !1);
                    return n.isRequired = t.bind(null, !0),
                        n
                }

                function i(e) {
                    function t(t, n, r, o, i) {
                        var a = t[n],
                            u = m(a);
                        if (u !== e) {
                            var s = b[o],
                                l = g(a);
                            return new Error('Invalid ' + s + ' `' + i + '` of type ' + ('`' + l + '` supplied to `' + r + '`, expected ') + ('`' + e + '`.'))
                        }
                        return null
                    }
                    return o(t)
                }

                function a() {
                    return o(_.thatReturns(null))
                }

                function u(e) {
                    function t(t, n, r, o, i) {
                        if ('function' != typeof e) return new Error('Property `' + i + '` of component `' + r + '` has invalid PropType notation inside arrayOf.');
                        var a = t[n];
                        if (!Array.isArray(a)) {
                            var u = b[o],
                                s = m(a);
                            return new Error('Invalid ' + u + ' `' + i + '` of type ' + ('`' + s + '` supplied to `' + r + '`, expected an array.'))
                        }
                        for (var l = 0; l < a.length; l++) {
                            var c = e(a, l, r, o, i + '[' + l + ']');
                            if (c instanceof Error) return c
                        }
                        return null
                    }
                    return o(t)
                }

                function s() {
                    function e(e, t, n, r, o) {
                        if (!C.isValidElement(e[t])) {
                            var i = b[r];
                            return new Error('Invalid ' + i + ' `' + o + '` supplied to ' + ('`' + n + '`, expected a single ReactElement.'))
                        }
                        return null
                    }
                    return o(e)
                }

                function l(e) {
                    function t(t, n, r, o, i) {
                        if (!(t[n] instanceof e)) {
                            var a = b[o],
                                u = e.name || x,
                                s = y(t[n]);
                            return new Error('Invalid ' + a + ' `' + i + '` of type ' + ('`' + s + '` supplied to `' + r + '`, expected ') + ('instance of `' + u + '`.'))
                        }
                        return null
                    }
                    return o(t)
                }

                function c(e) {
                    function t(t, n, o, i, a) {
                        for (var u = t[n], s = 0; s < e.length; s++)
                            if (r(u, e[s])) return null;
                        var l = b[i],
                            c = JSON.stringify(e);
                        return new Error('Invalid ' + l + ' `' + a + '` of value `' + u + '` ' + ('supplied to `' + o + '`, expected one of ' + c + '.'))
                    }
                    return o(Array.isArray(e) ? t : function() {
                        return new Error('Invalid argument supplied to oneOf, expected an instance of array.')
                    })
                }

                function p(e) {
                    function t(t, n, r, o, i) {
                        if ('function' != typeof e) return new Error('Property `' + i + '` of component `' + r + '` has invalid PropType notation inside objectOf.');
                        var a = t[n],
                            u = m(a);
                        if ('object' !== u) {
                            var s = b[o];
                            return new Error('Invalid ' + s + ' `' + i + '` of type ' + ('`' + u + '` supplied to `' + r + '`, expected an object.'))
                        }
                        for (var l in a)
                            if (a.hasOwnProperty(l)) {
                                var c = e(a, l, r, o, i + '.' + l);
                                if (c instanceof Error) return c
                            }
                        return null
                    }
                    return o(t)
                }

                function d(e) {
                    function t(t, n, r, o, i) {
                        for (var a = 0; a < e.length; a++) {
                            var u = e[a];
                            if (null == u(t, n, r, o, i)) return null
                        }
                        var s = b[o];
                        return new Error('Invalid ' + s + ' `' + i + '` supplied to ' + ('`' + r + '`.'))
                    }
                    return o(Array.isArray(e) ? t : function() {
                        return new Error('Invalid argument supplied to oneOfType, expected an instance of array.')
                    })
                }

                function f() {
                    function e(e, t, n, r, o) {
                        if (!v(e[t])) {
                            var i = b[r];
                            return new Error('Invalid ' + i + ' `' + o + '` supplied to ' + ('`' + n + '`, expected a ReactNode.'))
                        }
                        return null
                    }
                    return o(e)
                }

                function h(e) {
                    function t(t, n, r, o, i) {
                        var a = t[n],
                            u = m(a);
                        if ('object' !== u) {
                            var s = b[o];
                            return new Error('Invalid ' + s + ' `' + i + '` of type `' + u + '` ' + ('supplied to `' + r + '`, expected `object`.'))
                        }
                        for (var l in e) {
                            var c = e[l];
                            if (c) {
                                var p = c(a, l, r, o, i + '.' + l);
                                if (p) return p
                            }
                        }
                        return null
                    }
                    return o(t)
                }

                function v(e) {
                    switch (typeof e) {
                        case 'number':
                        case 'string':
                        case 'undefined':
                            return !0;
                        case 'boolean':
                            return !e;
                        case 'object':
                            if (Array.isArray(e)) return e.every(v);
                            if (null === e || C.isValidElement(e)) return !0;
                            var t = E(e);
                            if (!t) return !1;
                            var n,
                                r = t.call(e);
                            if (t !== e.entries) {
                                for (; !(n = r.next()).done;)
                                    if (!v(n.value)) return !1
                            } else
                                for (; !(n = r.next()).done;) {
                                    var o = n.value;
                                    if (o && !v(o[1])) return !1
                                }
                            return !0;
                        default:
                            return !1
                    }
                }

                function m(e) {
                    var t = typeof e;
                    return Array.isArray(e) ? 'array' : e instanceof RegExp ? 'object' : t
                }

                function g(e) {
                    var t = m(e);
                    if ('object' === t) {
                        if (e instanceof Date) return 'date';
                        if (e instanceof RegExp) return 'regexp'
                    }
                    return t
                }

                function y(e) {
                    return e.constructor && e.constructor.name ? e.constructor.name : x
                }
                var C = e(60),
                    b = e(79),
                    _ = e(146),
                    E = e(123),
                    x = '<<anonymous>>',
                    N = {
                        array: i('array'),
                        bool: i('boolean'),
                        func: i('function'),
                        number: i('number'),
                        object: i('object'),
                        string: i('string'),
                        any: a(),
                        arrayOf: u,
                        element: s(),
                        instanceOf: l,
                        node: f(),
                        objectOf: p,
                        oneOf: c,
                        oneOfType: d,
                        shape: h
                    };
                t.exports = N
            }, {
                123: 123,
                146: 146,
                60: 60,
                79: 79
            }
        ],
        82: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    this.reinitializeTransaction(),
                        this.renderToStaticMarkup = !1,
                        this.reactMountReady = i.getPooled(null),
                        this.useCreateElement = e
                }
                var o = e(165),
                    i = e(5),
                    a = e(25),
                    u = e(27),
                    s = e(68),
                    l = e(108),
                    c = {
                        initialize: s.getSelectionInformation,
                        close: s.restoreSelection
                    },
                    p = {
                        initialize: function() {
                            var e = u.isEnabled();
                            return u.setEnabled(!1),
                                e
                        },
                        close: function(e) {
                            u.setEnabled(e)
                        }
                    },
                    d = {
                        initialize: function() {
                            this.reactMountReady.reset()
                        },
                        close: function() {
                            this.reactMountReady.notifyAll()
                        }
                    },
                    f = [
                        c,
                        p,
                        d
                    ],
                    h = {
                        getTransactionWrappers: function() {
                            return f
                        },
                        getReactMountReady: function() {
                            return this.reactMountReady
                        },
                        checkpoint: function() {
                            return this.reactMountReady.checkpoint()
                        },
                        rollback: function(e) {
                            this.reactMountReady.rollback(e)
                        },
                        destructor: function() {
                            i.release(this.reactMountReady),
                                this.reactMountReady = null
                        }
                    };
                o(r.prototype, l.Mixin, h),
                    a.addPoolingTo(r),
                    t.exports = r
            }, {
                108: 108,
                165: 165,
                25: 25,
                27: 27,
                5: 5,
                68: 68
            }
        ],
        83: [
            function(e, t, n) {
                'use strict';

                function r() {
                    o.attachRefs(this, this._currentElement)
                }
                var o = e(84),
                    i = (e(70), e(154)),
                    a = {
                        mountComponent: function(e, t, n, o, i) {
                            var a = e.mountComponent(t, n, o, i);
                            return e._currentElement && null != e._currentElement.ref && t.getReactMountReady().enqueue(r, e),
                                a
                        },
                        getNativeNode: function(e) {
                            return e.getNativeNode()
                        },
                        unmountComponent: function(e, t) {
                            o.detachRefs(e, e._currentElement),
                                e.unmountComponent(t)
                        },
                        receiveComponent: function(e, t, n, i) {
                            var a = e._currentElement;
                            if (t !== a || i !== e._context) {
                                var u = o.shouldUpdateRefs(a, t);
                                u && o.detachRefs(e, a),
                                    e.receiveComponent(t, n, i),
                                    u && e._currentElement && null != e._currentElement.ref && n.getReactMountReady().enqueue(r, e)
                            }
                        },
                        performUpdateIfNecessary: function(e, t, n) {
                            return e._updateBatchNumber !== n ? void(null != e._updateBatchNumber && e._updateBatchNumber !== n + 1 ? i(!1) : void 0) : void e.performUpdateIfNecessary(t)
                        }
                    };
                t.exports = a
            }, {
                154: 154,
                70: 70,
                84: 84
            }
        ],
        84: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n) {
                    'function' == typeof e ? e(t.getPublicInstance()) : i.addComponentAsRefTo(t, e, n)
                }

                function o(e, t, n) {
                    'function' == typeof e ? e(null) : i.removeComponentAsRefFrom(t, e, n)
                }
                var i = e(78),
                    a = {};
                a.attachRefs = function(e, t) {
                        if (null !== t && t !== !1) {
                            var n = t.ref;
                            null != n && r(n, e, t._owner)
                        }
                    },
                    a.shouldUpdateRefs = function(e, t) {
                        var n = null === e || e === !1,
                            r = null === t || t === !1;
                        return n || r || t._owner !== e._owner || t.ref !== e.ref
                    },
                    a.detachRefs = function(e, t) {
                        if (null !== t && t !== !1) {
                            var n = t.ref;
                            null != n && o(n, e, t._owner)
                        }
                    },
                    t.exports = a
            }, {
                78: 78
            }
        ],
        85: [
            function(e, t, n) {
                'use strict';
                var r = {
                    isBatchingUpdates: !1,
                    batchedUpdates: function(e) {}
                };
                t.exports = r
            }, {}
        ],
        86: [
            function(e, t, n) {
                'use strict';

                function r(e, t) {
                    var n;
                    try {
                        return f.injection.injectBatchingStrategy(p),
                            n = d.getPooled(t),
                            n.perform(function() {
                                var r = v(e),
                                    o = c.mountComponent(r, n, null, a(), h);
                                return t || (o = l.addChecksumToMarkup(o)),
                                    o
                            }, null)
                    } finally {
                        d.release(n),
                            f.injection.injectBatchingStrategy(u)
                    }
                }

                function o(e) {
                    return s.isValidElement(e) ? void 0 : m(!1),
                        r(e, !1)
                }

                function i(e) {
                    return s.isValidElement(e) ? void 0 : m(!1),
                        r(e, !0)
                }
                var a = e(41),
                    u = e(58),
                    s = e(60),
                    l = (e(70), e(71)),
                    c = e(83),
                    p = e(85),
                    d = e(87),
                    f = e(90),
                    h = e(147),
                    v = e(128),
                    m = e(154);
                t.exports = {
                    renderToString: o,
                    renderToStaticMarkup: i
                }
            }, {
                128: 128,
                147: 147,
                154: 154,
                41: 41,
                58: 58,
                60: 60,
                70: 70,
                71: 71,
                83: 83,
                85: 85,
                87: 87,
                90: 90
            }
        ],
        87: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    this.reinitializeTransaction(),
                        this.renderToStaticMarkup = e,
                        this.useCreateElement = !1
                }
                var o = e(165),
                    i = e(25),
                    a = e(108),
                    u = [],
                    s = {
                        enqueue: function() {}
                    },
                    l = {
                        getTransactionWrappers: function() {
                            return u
                        },
                        getReactMountReady: function() {
                            return s
                        },
                        destructor: function() {},
                        checkpoint: function() {},
                        rollback: function() {}
                    };
                o(r.prototype, a.Mixin, l),
                    i.addPoolingTo(r),
                    t.exports = r
            }, {
                108: 108,
                165: 165,
                25: 25
            }
        ],
        88: [
            function(e, t, n) {
                'use strict';
                var r = e(165),
                    o = e(36),
                    i = e(52),
                    a = e(26),
                    u = r({
                        __SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: o,
                        __SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: i
                    }, a);
                t.exports = u
            }, {
                165: 165,
                26: 26,
                36: 36,
                52: 52
            }
        ],
        89: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    a.enqueueUpdate(e)
                }

                function o(e, t) {
                    var n = i.get(e);
                    return n ? n : null
                }
                var i = (e(35), e(69)),
                    a = e(90),
                    u = e(154),
                    s = (e(164), {
                        isMounted: function(e) {
                            var t = i.get(e);
                            return t ? !!t._renderedComponent : !1
                        },
                        enqueueCallback: function(e, t, n) {
                            s.validateCallback(t, n);
                            var i = o(e);
                            return i ? (i._pendingCallbacks ? i._pendingCallbacks.push(t) : i._pendingCallbacks = [
                                t
                            ], void r(i)) : null
                        },
                        enqueueCallbackInternal: function(e, t) {
                            e._pendingCallbacks ? e._pendingCallbacks.push(t) : e._pendingCallbacks = [
                                    t
                                ],
                                r(e)
                        },
                        enqueueForceUpdate: function(e) {
                            var t = o(e, 'forceUpdate');
                            t && (t._pendingForceUpdate = !0, r(t))
                        },
                        enqueueReplaceState: function(e, t) {
                            var n = o(e, 'replaceState');
                            n && (n._pendingStateQueue = [
                                t
                            ], n._pendingReplaceState = !0, r(n))
                        },
                        enqueueSetState: function(e, t) {
                            var n = o(e, 'setState');
                            if (n) {
                                var i = n._pendingStateQueue || (n._pendingStateQueue = []);
                                i.push(t),
                                    r(n)
                            }
                        },
                        enqueueElementInternal: function(e, t) {
                            e._pendingElement = t,
                                r(e)
                        },
                        validateCallback: function(e, t) {
                            e && 'function' != typeof e ? u(!1) : void 0
                        }
                    });
                t.exports = s
            }, {
                154: 154,
                164: 164,
                35: 35,
                69: 69,
                90: 90
            }
        ],
        90: [
            function(e, t, n) {
                'use strict';

                function r() {
                    w.ReactReconcileTransaction && _ ? void 0 : m(!1)
                }

                function o() {
                    this.reinitializeTransaction(),
                        this.dirtyComponentsLength = null,
                        this.callbackQueue = p.getPooled(),
                        this.reconcileTransaction = w.ReactReconcileTransaction.getPooled(!0)
                }

                function i(e, t, n, o, i, a) {
                    r(),
                        _.batchedUpdates(e, t, n, o, i, a)
                }

                function a(e, t) {
                    return e._mountOrder - t._mountOrder
                }

                function u(e) {
                    var t = e.dirtyComponentsLength;
                    t !== g.length ? m(!1) : void 0,
                        g.sort(a),
                        y++;
                    for (var n = 0; t > n; n++) {
                        var r = g[n],
                            o = r._pendingCallbacks;
                        r._pendingCallbacks = null;
                        var i;
                        if (f.logTopLevelRenders) {
                            var u = r;
                            r._currentElement.props === r._renderedComponent._currentElement && (u = r._renderedComponent),
                                i = 'React update: ' + u.getName(),
                                console.time(i)
                        }
                        if (h.performUpdateIfNecessary(r, e.reconcileTransaction, y), i && console.timeEnd(i), o)
                            for (var s = 0; s < o.length; s++) e.callbackQueue.enqueue(o[s], r.getPublicInstance())
                    }
                }

                function s(e) {
                    return r(),
                        _.isBatchingUpdates ? (g.push(e), void(null == e._updateBatchNumber && (e._updateBatchNumber = y + 1))) : void _.batchedUpdates(s, e)
                }

                function l(e, t) {
                    _.isBatchingUpdates ? void 0 : m(!1),
                        C.enqueue(e, t),
                        b = !0
                }
                var c = e(165),
                    p = e(5),
                    d = e(25),
                    f = e(66),
                    h = (e(70), e(83)),
                    v = e(108),
                    m = e(154),
                    g = [],
                    y = 0,
                    C = p.getPooled(),
                    b = !1,
                    _ = null,
                    E = {
                        initialize: function() {
                            this.dirtyComponentsLength = g.length
                        },
                        close: function() {
                            this.dirtyComponentsLength !== g.length ? (g.splice(0, this.dirtyComponentsLength), T()) : g.length = 0
                        }
                    },
                    x = {
                        initialize: function() {
                            this.callbackQueue.reset()
                        },
                        close: function() {
                            this.callbackQueue.notifyAll()
                        }
                    },
                    N = [
                        E,
                        x
                    ];
                c(o.prototype, v.Mixin, {
                        getTransactionWrappers: function() {
                            return N
                        },
                        destructor: function() {
                            this.dirtyComponentsLength = null,
                                p.release(this.callbackQueue),
                                this.callbackQueue = null,
                                w.ReactReconcileTransaction.release(this.reconcileTransaction),
                                this.reconcileTransaction = null
                        },
                        perform: function(e, t, n) {
                            return v.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, e, t, n)
                        }
                    }),
                    d.addPoolingTo(o);
                var T = function() {
                        for (; g.length || b;) {
                            if (g.length) {
                                var e = o.getPooled();
                                e.perform(u, null, e),
                                    o.release(e)
                            }
                            if (b) {
                                b = !1;
                                var t = C;
                                C = p.getPooled(),
                                    t.notifyAll(),
                                    p.release(t)
                            }
                        }
                    },
                    P = {
                        injectReconcileTransaction: function(e) {
                            e ? void 0 : m(!1),
                                w.ReactReconcileTransaction = e
                        },
                        injectBatchingStrategy: function(e) {
                            e ? void 0 : m(!1),
                                'function' != typeof e.batchedUpdates ? m(!1) : void 0,
                                'boolean' != typeof e.isBatchingUpdates ? m(!1) : void 0,
                                _ = e
                        }
                    },
                    w = {
                        ReactReconcileTransaction: null,
                        batchedUpdates: i,
                        enqueueUpdate: s,
                        flushBatchedUpdates: T,
                        injection: P,
                        asap: l
                    };
                t.exports = w
            }, {
                108: 108,
                154: 154,
                165: 165,
                25: 25,
                5: 5,
                66: 66,
                70: 70,
                83: 83
            }
        ],
        91: [
            function(e, t, n) {
                'use strict';
                t.exports = '15.1.0'
            }, {}
        ],
        92: [
            function(e, t, n) {
                'use strict';
                var r = {
                        xlink: 'http://www.w3.org/1999/xlink',
                        xml: 'http://www.w3.org/XML/1998/namespace'
                    },
                    o = {
                        accentHeight: 'accent-height',
                        accumulate: 0,
                        additive: 0,
                        alignmentBaseline: 'alignment-baseline',
                        allowReorder: 'allowReorder',
                        alphabetic: 0,
                        amplitude: 0,
                        arabicForm: 'arabic-form',
                        ascent: 0,
                        attributeName: 'attributeName',
                        attributeType: 'attributeType',
                        autoReverse: 'autoReverse',
                        azimuth: 0,
                        baseFrequency: 'baseFrequency',
                        baseProfile: 'baseProfile',
                        baselineShift: 'baseline-shift',
                        bbox: 0,
                        begin: 0,
                        bias: 0,
                        by: 0,
                        calcMode: 'calcMode',
                        capHeight: 'cap-height',
                        clip: 0,
                        clipPath: 'clip-path',
                        clipRule: 'clip-rule',
                        clipPathUnits: 'clipPathUnits',
                        colorInterpolation: 'color-interpolation',
                        colorInterpolationFilters: 'color-interpolation-filters',
                        colorProfile: 'color-profile',
                        colorRendering: 'color-rendering',
                        contentScriptType: 'contentScriptType',
                        contentStyleType: 'contentStyleType',
                        cursor: 0,
                        cx: 0,
                        cy: 0,
                        d: 0,
                        decelerate: 0,
                        descent: 0,
                        diffuseConstant: 'diffuseConstant',
                        direction: 0,
                        display: 0,
                        divisor: 0,
                        dominantBaseline: 'dominant-baseline',
                        dur: 0,
                        dx: 0,
                        dy: 0,
                        edgeMode: 'edgeMode',
                        elevation: 0,
                        enableBackground: 'enable-background',
                        end: 0,
                        exponent: 0,
                        externalResourcesRequired: 'externalResourcesRequired',
                        fill: 0,
                        fillOpacity: 'fill-opacity',
                        fillRule: 'fill-rule',
                        filter: 0,
                        filterRes: 'filterRes',
                        filterUnits: 'filterUnits',
                        floodColor: 'flood-color',
                        floodOpacity: 'flood-opacity',
                        focusable: 0,
                        fontFamily: 'font-family',
                        fontSize: 'font-size',
                        fontSizeAdjust: 'font-size-adjust',
                        fontStretch: 'font-stretch',
                        fontStyle: 'font-style',
                        fontVariant: 'font-variant',
                        fontWeight: 'font-weight',
                        format: 0,
                        from: 0,
                        fx: 0,
                        fy: 0,
                        g1: 0,
                        g2: 0,
                        glyphName: 'glyph-name',
                        glyphOrientationHorizontal: 'glyph-orientation-horizontal',
                        glyphOrientationVertical: 'glyph-orientation-vertical',
                        glyphRef: 'glyphRef',
                        gradientTransform: 'gradientTransform',
                        gradientUnits: 'gradientUnits',
                        hanging: 0,
                        horizAdvX: 'horiz-adv-x',
                        horizOriginX: 'horiz-origin-x',
                        ideographic: 0,
                        imageRendering: 'image-rendering',
                        'in': 0,
                        in2: 0,
                        intercept: 0,
                        k: 0,
                        k1: 0,
                        k2: 0,
                        k3: 0,
                        k4: 0,
                        kernelMatrix: 'kernelMatrix',
                        kernelUnitLength: 'kernelUnitLength',
                        kerning: 0,
                        keyPoints: 'keyPoints',
                        keySplines: 'keySplines',
                        keyTimes: 'keyTimes',
                        lengthAdjust: 'lengthAdjust',
                        letterSpacing: 'letter-spacing',
                        lightingColor: 'lighting-color',
                        limitingConeAngle: 'limitingConeAngle',
                        local: 0,
                        markerEnd: 'marker-end',
                        markerMid: 'marker-mid',
                        markerStart: 'marker-start',
                        markerHeight: 'markerHeight',
                        markerUnits: 'markerUnits',
                        markerWidth: 'markerWidth',
                        mask: 0,
                        maskContentUnits: 'maskContentUnits',
                        maskUnits: 'maskUnits',
                        mathematical: 0,
                        mode: 0,
                        numOctaves: 'numOctaves',
                        offset: 0,
                        opacity: 0,
                        operator: 0,
                        order: 0,
                        orient: 0,
                        orientation: 0,
                        origin: 0,
                        overflow: 0,
                        overlinePosition: 'overline-position',
                        overlineThickness: 'overline-thickness',
                        paintOrder: 'paint-order',
                        panose1: 'panose-1',
                        pathLength: 'pathLength',
                        patternContentUnits: 'patternContentUnits',
                        patternTransform: 'patternTransform',
                        patternUnits: 'patternUnits',
                        pointerEvents: 'pointer-events',
                        points: 0,
                        pointsAtX: 'pointsAtX',
                        pointsAtY: 'pointsAtY',
                        pointsAtZ: 'pointsAtZ',
                        preserveAlpha: 'preserveAlpha',
                        preserveAspectRatio: 'preserveAspectRatio',
                        primitiveUnits: 'primitiveUnits',
                        r: 0,
                        radius: 0,
                        refX: 'refX',
                        refY: 'refY',
                        renderingIntent: 'rendering-intent',
                        repeatCount: 'repeatCount',
                        repeatDur: 'repeatDur',
                        requiredExtensions: 'requiredExtensions',
                        requiredFeatures: 'requiredFeatures',
                        restart: 0,
                        result: 0,
                        rotate: 0,
                        rx: 0,
                        ry: 0,
                        scale: 0,
                        seed: 0,
                        shapeRendering: 'shape-rendering',
                        slope: 0,
                        spacing: 0,
                        specularConstant: 'specularConstant',
                        specularExponent: 'specularExponent',
                        speed: 0,
                        spreadMethod: 'spreadMethod',
                        startOffset: 'startOffset',
                        stdDeviation: 'stdDeviation',
                        stemh: 0,
                        stemv: 0,
                        stitchTiles: 'stitchTiles',
                        stopColor: 'stop-color',
                        stopOpacity: 'stop-opacity',
                        strikethroughPosition: 'strikethrough-position',
                        strikethroughThickness: 'strikethrough-thickness',
                        string: 0,
                        stroke: 0,
                        strokeDasharray: 'stroke-dasharray',
                        strokeDashoffset: 'stroke-dashoffset',
                        strokeLinecap: 'stroke-linecap',
                        strokeLinejoin: 'stroke-linejoin',
                        strokeMiterlimit: 'stroke-miterlimit',
                        strokeOpacity: 'stroke-opacity',
                        strokeWidth: 'stroke-width',
                        surfaceScale: 'surfaceScale',
                        systemLanguage: 'systemLanguage',
                        tableValues: 'tableValues',
                        targetX: 'targetX',
                        targetY: 'targetY',
                        textAnchor: 'text-anchor',
                        textDecoration: 'text-decoration',
                        textRendering: 'text-rendering',
                        textLength: 'textLength',
                        to: 0,
                        transform: 0,
                        u1: 0,
                        u2: 0,
                        underlinePosition: 'underline-position',
                        underlineThickness: 'underline-thickness',
                        unicode: 0,
                        unicodeBidi: 'unicode-bidi',
                        unicodeRange: 'unicode-range',
                        unitsPerEm: 'units-per-em',
                        vAlphabetic: 'v-alphabetic',
                        vHanging: 'v-hanging',
                        vIdeographic: 'v-ideographic',
                        vMathematical: 'v-mathematical',
                        values: 0,
                        vectorEffect: 'vector-effect',
                        version: 0,
                        vertAdvY: 'vert-adv-y',
                        vertOriginX: 'vert-origin-x',
                        vertOriginY: 'vert-origin-y',
                        viewBox: 'viewBox',
                        viewTarget: 'viewTarget',
                        visibility: 0,
                        widths: 0,
                        wordSpacing: 'word-spacing',
                        writingMode: 'writing-mode',
                        x: 0,
                        xHeight: 'x-height',
                        x1: 0,
                        x2: 0,
                        xChannelSelector: 'xChannelSelector',
                        xlinkActuate: 'xlink:actuate',
                        xlinkArcrole: 'xlink:arcrole',
                        xlinkHref: 'xlink:href',
                        xlinkRole: 'xlink:role',
                        xlinkShow: 'xlink:show',
                        xlinkTitle: 'xlink:title',
                        xlinkType: 'xlink:type',
                        xmlBase: 'xml:base',
                        xmlLang: 'xml:lang',
                        xmlSpace: 'xml:space',
                        y: 0,
                        y1: 0,
                        y2: 0,
                        yChannelSelector: 'yChannelSelector',
                        z: 0,
                        zoomAndPan: 'zoomAndPan'
                    },
                    i = {
                        Properties: {},
                        DOMAttributeNamespaces: {
                            xlinkActuate: r.xlink,
                            xlinkArcrole: r.xlink,
                            xlinkHref: r.xlink,
                            xlinkRole: r.xlink,
                            xlinkShow: r.xlink,
                            xlinkTitle: r.xlink,
                            xlinkType: r.xlink,
                            xmlBase: r.xml,
                            xmlLang: r.xml,
                            xmlSpace: r.xml
                        },
                        DOMAttributeNames: {}
                    };
                Object.keys(o).forEach(function(e) {
                        i.Properties[e] = 0,
                            o[e] && (i.DOMAttributeNames[e] = o[e])
                    }),
                    t.exports = i
            }, {}
        ],
        93: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    if ('selectionStart' in e && l.hasSelectionCapabilities(e)) return {
                        start: e.selectionStart,
                        end: e.selectionEnd
                    };
                    if (window.getSelection) {
                        var t = window.getSelection();
                        return {
                            anchorNode: t.anchorNode,
                            anchorOffset: t.anchorOffset,
                            focusNode: t.focusNode,
                            focusOffset: t.focusOffset
                        }
                    }
                    if (document.selection) {
                        var n = document.selection.createRange();
                        return {
                            parentElement: n.parentElement(),
                            text: n.text,
                            top: n.boundingTop,
                            left: n.boundingLeft
                        }
                    }
                }

                function o(e, t) {
                    if (_ || null == y || y !== p()) return null;
                    var n = r(y);
                    if (!b || !h(b, n)) {
                        b = n;
                        var o = c.getPooled(g.select, C, e, t);
                        return o.type = 'select',
                            o.target = y,
                            a.accumulateTwoPhaseDispatches(o),
                            o
                    }
                    return null
                }
                var i = e(16),
                    a = e(20),
                    u = e(140),
                    s = e(40),
                    l = e(68),
                    c = e(99),
                    p = e(149),
                    d = e(130),
                    f = e(158),
                    h = e(163),
                    v = i.topLevelTypes,
                    m = u.canUseDOM && 'documentMode' in document && document.documentMode <= 11,
                    g = {
                        select: {
                            phasedRegistrationNames: {
                                bubbled: f({
                                    onSelect: null
                                }),
                                captured: f({
                                    onSelectCapture: null
                                })
                            },
                            dependencies: [
                                v.topBlur,
                                v.topContextMenu,
                                v.topFocus,
                                v.topKeyDown,
                                v.topMouseDown,
                                v.topMouseUp,
                                v.topSelectionChange
                            ]
                        }
                    },
                    y = null,
                    C = null,
                    b = null,
                    _ = !1,
                    E = !1,
                    x = f({
                        onSelect: null
                    }),
                    N = {
                        eventTypes: g,
                        extractEvents: function(e, t, n, r) {
                            if (!E) return null;
                            var i = t ? s.getNodeFromInstance(t) : window;
                            switch (e) {
                                case v.topFocus:
                                    (d(i) || 'true' === i.contentEditable) && (y = i, C = t, b = null);
                                    break;
                                case v.topBlur:
                                    y = null,
                                        C = null,
                                        b = null;
                                    break;
                                case v.topMouseDown:
                                    _ = !0;
                                    break;
                                case v.topContextMenu:
                                case v.topMouseUp:
                                    return _ = !1,
                                        o(n, r);
                                case v.topSelectionChange:
                                    if (m) break;
                                case v.topKeyDown:
                                case v.topKeyUp:
                                    return o(n, r)
                            }
                            return null
                        },
                        didPutListener: function(e, t, n) {
                            t === x && (E = !0)
                        }
                    };
                t.exports = N
            }, {
                130: 130,
                140: 140,
                149: 149,
                158: 158,
                16: 16,
                163: 163,
                20: 20,
                40: 40,
                68: 68,
                99: 99
            }
        ],
        94: [
            function(e, t, n) {
                'use strict';
                var r = e(16),
                    o = e(139),
                    i = e(20),
                    a = e(40),
                    u = e(95),
                    s = e(96),
                    l = e(99),
                    c = e(100),
                    p = e(102),
                    d = e(103),
                    f = e(98),
                    h = e(104),
                    v = e(105),
                    m = e(106),
                    g = e(107),
                    y = e(146),
                    C = e(119),
                    b = e(154),
                    _ = e(158),
                    E = r.topLevelTypes,
                    x = {
                        abort: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onAbort: !0
                                }),
                                captured: _({
                                    onAbortCapture: !0
                                })
                            }
                        },
                        animationEnd: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onAnimationEnd: !0
                                }),
                                captured: _({
                                    onAnimationEndCapture: !0
                                })
                            }
                        },
                        animationIteration: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onAnimationIteration: !0
                                }),
                                captured: _({
                                    onAnimationIterationCapture: !0
                                })
                            }
                        },
                        animationStart: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onAnimationStart: !0
                                }),
                                captured: _({
                                    onAnimationStartCapture: !0
                                })
                            }
                        },
                        blur: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onBlur: !0
                                }),
                                captured: _({
                                    onBlurCapture: !0
                                })
                            }
                        },
                        canPlay: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onCanPlay: !0
                                }),
                                captured: _({
                                    onCanPlayCapture: !0
                                })
                            }
                        },
                        canPlayThrough: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onCanPlayThrough: !0
                                }),
                                captured: _({
                                    onCanPlayThroughCapture: !0
                                })
                            }
                        },
                        click: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onClick: !0
                                }),
                                captured: _({
                                    onClickCapture: !0
                                })
                            }
                        },
                        contextMenu: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onContextMenu: !0
                                }),
                                captured: _({
                                    onContextMenuCapture: !0
                                })
                            }
                        },
                        copy: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onCopy: !0
                                }),
                                captured: _({
                                    onCopyCapture: !0
                                })
                            }
                        },
                        cut: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onCut: !0
                                }),
                                captured: _({
                                    onCutCapture: !0
                                })
                            }
                        },
                        doubleClick: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onDoubleClick: !0
                                }),
                                captured: _({
                                    onDoubleClickCapture: !0
                                })
                            }
                        },
                        drag: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onDrag: !0
                                }),
                                captured: _({
                                    onDragCapture: !0
                                })
                            }
                        },
                        dragEnd: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onDragEnd: !0
                                }),
                                captured: _({
                                    onDragEndCapture: !0
                                })
                            }
                        },
                        dragEnter: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onDragEnter: !0
                                }),
                                captured: _({
                                    onDragEnterCapture: !0
                                })
                            }
                        },
                        dragExit: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onDragExit: !0
                                }),
                                captured: _({
                                    onDragExitCapture: !0
                                })
                            }
                        },
                        dragLeave: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onDragLeave: !0
                                }),
                                captured: _({
                                    onDragLeaveCapture: !0
                                })
                            }
                        },
                        dragOver: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onDragOver: !0
                                }),
                                captured: _({
                                    onDragOverCapture: !0
                                })
                            }
                        },
                        dragStart: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onDragStart: !0
                                }),
                                captured: _({
                                    onDragStartCapture: !0
                                })
                            }
                        },
                        drop: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onDrop: !0
                                }),
                                captured: _({
                                    onDropCapture: !0
                                })
                            }
                        },
                        durationChange: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onDurationChange: !0
                                }),
                                captured: _({
                                    onDurationChangeCapture: !0
                                })
                            }
                        },
                        emptied: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onEmptied: !0
                                }),
                                captured: _({
                                    onEmptiedCapture: !0
                                })
                            }
                        },
                        encrypted: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onEncrypted: !0
                                }),
                                captured: _({
                                    onEncryptedCapture: !0
                                })
                            }
                        },
                        ended: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onEnded: !0
                                }),
                                captured: _({
                                    onEndedCapture: !0
                                })
                            }
                        },
                        error: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onError: !0
                                }),
                                captured: _({
                                    onErrorCapture: !0
                                })
                            }
                        },
                        focus: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onFocus: !0
                                }),
                                captured: _({
                                    onFocusCapture: !0
                                })
                            }
                        },
                        input: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onInput: !0
                                }),
                                captured: _({
                                    onInputCapture: !0
                                })
                            }
                        },
                        invalid: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onInvalid: !0
                                }),
                                captured: _({
                                    onInvalidCapture: !0
                                })
                            }
                        },
                        keyDown: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onKeyDown: !0
                                }),
                                captured: _({
                                    onKeyDownCapture: !0
                                })
                            }
                        },
                        keyPress: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onKeyPress: !0
                                }),
                                captured: _({
                                    onKeyPressCapture: !0
                                })
                            }
                        },
                        keyUp: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onKeyUp: !0
                                }),
                                captured: _({
                                    onKeyUpCapture: !0
                                })
                            }
                        },
                        load: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onLoad: !0
                                }),
                                captured: _({
                                    onLoadCapture: !0
                                })
                            }
                        },
                        loadedData: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onLoadedData: !0
                                }),
                                captured: _({
                                    onLoadedDataCapture: !0
                                })
                            }
                        },
                        loadedMetadata: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onLoadedMetadata: !0
                                }),
                                captured: _({
                                    onLoadedMetadataCapture: !0
                                })
                            }
                        },
                        loadStart: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onLoadStart: !0
                                }),
                                captured: _({
                                    onLoadStartCapture: !0
                                })
                            }
                        },
                        mouseDown: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onMouseDown: !0
                                }),
                                captured: _({
                                    onMouseDownCapture: !0
                                })
                            }
                        },
                        mouseMove: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onMouseMove: !0
                                }),
                                captured: _({
                                    onMouseMoveCapture: !0
                                })
                            }
                        },
                        mouseOut: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onMouseOut: !0
                                }),
                                captured: _({
                                    onMouseOutCapture: !0
                                })
                            }
                        },
                        mouseOver: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onMouseOver: !0
                                }),
                                captured: _({
                                    onMouseOverCapture: !0
                                })
                            }
                        },
                        mouseUp: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onMouseUp: !0
                                }),
                                captured: _({
                                    onMouseUpCapture: !0
                                })
                            }
                        },
                        paste: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onPaste: !0
                                }),
                                captured: _({
                                    onPasteCapture: !0
                                })
                            }
                        },
                        pause: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onPause: !0
                                }),
                                captured: _({
                                    onPauseCapture: !0
                                })
                            }
                        },
                        play: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onPlay: !0
                                }),
                                captured: _({
                                    onPlayCapture: !0
                                })
                            }
                        },
                        playing: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onPlaying: !0
                                }),
                                captured: _({
                                    onPlayingCapture: !0
                                })
                            }
                        },
                        progress: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onProgress: !0
                                }),
                                captured: _({
                                    onProgressCapture: !0
                                })
                            }
                        },
                        rateChange: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onRateChange: !0
                                }),
                                captured: _({
                                    onRateChangeCapture: !0
                                })
                            }
                        },
                        reset: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onReset: !0
                                }),
                                captured: _({
                                    onResetCapture: !0
                                })
                            }
                        },
                        scroll: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onScroll: !0
                                }),
                                captured: _({
                                    onScrollCapture: !0
                                })
                            }
                        },
                        seeked: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onSeeked: !0
                                }),
                                captured: _({
                                    onSeekedCapture: !0
                                })
                            }
                        },
                        seeking: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onSeeking: !0
                                }),
                                captured: _({
                                    onSeekingCapture: !0
                                })
                            }
                        },
                        stalled: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onStalled: !0
                                }),
                                captured: _({
                                    onStalledCapture: !0
                                })
                            }
                        },
                        submit: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onSubmit: !0
                                }),
                                captured: _({
                                    onSubmitCapture: !0
                                })
                            }
                        },
                        suspend: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onSuspend: !0
                                }),
                                captured: _({
                                    onSuspendCapture: !0
                                })
                            }
                        },
                        timeUpdate: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onTimeUpdate: !0
                                }),
                                captured: _({
                                    onTimeUpdateCapture: !0
                                })
                            }
                        },
                        touchCancel: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onTouchCancel: !0
                                }),
                                captured: _({
                                    onTouchCancelCapture: !0
                                })
                            }
                        },
                        touchEnd: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onTouchEnd: !0
                                }),
                                captured: _({
                                    onTouchEndCapture: !0
                                })
                            }
                        },
                        touchMove: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onTouchMove: !0
                                }),
                                captured: _({
                                    onTouchMoveCapture: !0
                                })
                            }
                        },
                        touchStart: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onTouchStart: !0
                                }),
                                captured: _({
                                    onTouchStartCapture: !0
                                })
                            }
                        },
                        transitionEnd: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onTransitionEnd: !0
                                }),
                                captured: _({
                                    onTransitionEndCapture: !0
                                })
                            }
                        },
                        volumeChange: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onVolumeChange: !0
                                }),
                                captured: _({
                                    onVolumeChangeCapture: !0
                                })
                            }
                        },
                        waiting: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onWaiting: !0
                                }),
                                captured: _({
                                    onWaitingCapture: !0
                                })
                            }
                        },
                        wheel: {
                            phasedRegistrationNames: {
                                bubbled: _({
                                    onWheel: !0
                                }),
                                captured: _({
                                    onWheelCapture: !0
                                })
                            }
                        }
                    },
                    N = {
                        topAbort: x.abort,
                        topAnimationEnd: x.animationEnd,
                        topAnimationIteration: x.animationIteration,
                        topAnimationStart: x.animationStart,
                        topBlur: x.blur,
                        topCanPlay: x.canPlay,
                        topCanPlayThrough: x.canPlayThrough,
                        topClick: x.click,
                        topContextMenu: x.contextMenu,
                        topCopy: x.copy,
                        topCut: x.cut,
                        topDoubleClick: x.doubleClick,
                        topDrag: x.drag,
                        topDragEnd: x.dragEnd,
                        topDragEnter: x.dragEnter,
                        topDragExit: x.dragExit,
                        topDragLeave: x.dragLeave,
                        topDragOver: x.dragOver,
                        topDragStart: x.dragStart,
                        topDrop: x.drop,
                        topDurationChange: x.durationChange,
                        topEmptied: x.emptied,
                        topEncrypted: x.encrypted,
                        topEnded: x.ended,
                        topError: x.error,
                        topFocus: x.focus,
                        topInput: x.input,
                        topInvalid: x.invalid,
                        topKeyDown: x.keyDown,
                        topKeyPress: x.keyPress,
                        topKeyUp: x.keyUp,
                        topLoad: x.load,
                        topLoadedData: x.loadedData,
                        topLoadedMetadata: x.loadedMetadata,
                        topLoadStart: x.loadStart,
                        topMouseDown: x.mouseDown,
                        topMouseMove: x.mouseMove,
                        topMouseOut: x.mouseOut,
                        topMouseOver: x.mouseOver,
                        topMouseUp: x.mouseUp,
                        topPaste: x.paste,
                        topPause: x.pause,
                        topPlay: x.play,
                        topPlaying: x.playing,
                        topProgress: x.progress,
                        topRateChange: x.rateChange,
                        topReset: x.reset,
                        topScroll: x.scroll,
                        topSeeked: x.seeked,
                        topSeeking: x.seeking,
                        topStalled: x.stalled,
                        topSubmit: x.submit,
                        topSuspend: x.suspend,
                        topTimeUpdate: x.timeUpdate,
                        topTouchCancel: x.touchCancel,
                        topTouchEnd: x.touchEnd,
                        topTouchMove: x.touchMove,
                        topTouchStart: x.touchStart,
                        topTransitionEnd: x.transitionEnd,
                        topVolumeChange: x.volumeChange,
                        topWaiting: x.waiting,
                        topWheel: x.wheel
                    };
                for (var T in N) N[T].dependencies = [
                    T
                ];
                var P = _({
                        onClick: null
                    }),
                    w = {},
                    S = {
                        eventTypes: x,
                        extractEvents: function(e, t, n, r) {
                            var o = N[e];
                            if (!o) return null;
                            var a;
                            switch (e) {
                                case E.topAbort:
                                case E.topCanPlay:
                                case E.topCanPlayThrough:
                                case E.topDurationChange:
                                case E.topEmptied:
                                case E.topEncrypted:
                                case E.topEnded:
                                case E.topError:
                                case E.topInput:
                                case E.topInvalid:
                                case E.topLoad:
                                case E.topLoadedData:
                                case E.topLoadedMetadata:
                                case E.topLoadStart:
                                case E.topPause:
                                case E.topPlay:
                                case E.topPlaying:
                                case E.topProgress:
                                case E.topRateChange:
                                case E.topReset:
                                case E.topSeeked:
                                case E.topSeeking:
                                case E.topStalled:
                                case E.topSubmit:
                                case E.topSuspend:
                                case E.topTimeUpdate:
                                case E.topVolumeChange:
                                case E.topWaiting:
                                    a = l;
                                    break;
                                case E.topKeyPress:
                                    if (0 === C(n)) return null;
                                case E.topKeyDown:
                                case E.topKeyUp:
                                    a = p;
                                    break;
                                case E.topBlur:
                                case E.topFocus:
                                    a = c;
                                    break;
                                case E.topClick:
                                    if (2 === n.button) return null;
                                case E.topContextMenu:
                                case E.topDoubleClick:
                                case E.topMouseDown:
                                case E.topMouseMove:
                                case E.topMouseOut:
                                case E.topMouseOver:
                                case E.topMouseUp:
                                    a = d;
                                    break;
                                case E.topDrag:
                                case E.topDragEnd:
                                case E.topDragEnter:
                                case E.topDragExit:
                                case E.topDragLeave:
                                case E.topDragOver:
                                case E.topDragStart:
                                case E.topDrop:
                                    a = f;
                                    break;
                                case E.topTouchCancel:
                                case E.topTouchEnd:
                                case E.topTouchMove:
                                case E.topTouchStart:
                                    a = h;
                                    break;
                                case E.topAnimationEnd:
                                case E.topAnimationIteration:
                                case E.topAnimationStart:
                                    a = u;
                                    break;
                                case E.topTransitionEnd:
                                    a = v;
                                    break;
                                case E.topScroll:
                                    a = m;
                                    break;
                                case E.topWheel:
                                    a = g;
                                    break;
                                case E.topCopy:
                                case E.topCut:
                                case E.topPaste:
                                    a = s
                            }
                            a ? void 0 : b(!1);
                            var y = a.getPooled(o, t, n, r);
                            return i.accumulateTwoPhaseDispatches(y),
                                y
                        },
                        didPutListener: function(e, t, n) {
                            if (t === P) {
                                var r = e._rootNodeID,
                                    i = a.getNodeFromInstance(e);
                                w[r] || (w[r] = o.listen(i, 'click', y))
                            }
                        },
                        willDeleteListener: function(e, t) {
                            if (t === P) {
                                var n = e._rootNodeID;
                                w[n].remove(),
                                    delete w[n]
                            }
                        }
                    };
                t.exports = S
            }, {
                100: 100,
                102: 102,
                103: 103,
                104: 104,
                105: 105,
                106: 106,
                107: 107,
                119: 119,
                139: 139,
                146: 146,
                154: 154,
                158: 158,
                16: 16,
                20: 20,
                40: 40,
                95: 95,
                96: 96,
                98: 98,
                99: 99
            }
        ],
        95: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n, r) {
                    return o.call(this, e, t, n, r)
                }
                var o = e(99),
                    i = {
                        animationName: null,
                        elapsedTime: null,
                        pseudoElement: null
                    };
                o.augmentClass(r, i),
                    t.exports = r
            }, {
                99: 99
            }
        ],
        96: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n, r) {
                    return o.call(this, e, t, n, r)
                }
                var o = e(99),
                    i = {
                        clipboardData: function(e) {
                            return 'clipboardData' in e ? e.clipboardData : window.clipboardData
                        }
                    };
                o.augmentClass(r, i),
                    t.exports = r
            }, {
                99: 99
            }
        ],
        97: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n, r) {
                    return o.call(this, e, t, n, r)
                }
                var o = e(99),
                    i = {
                        data: null
                    };
                o.augmentClass(r, i),
                    t.exports = r
            }, {
                99: 99
            }
        ],
        98: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n, r) {
                    return o.call(this, e, t, n, r)
                }
                var o = e(103),
                    i = {
                        dataTransfer: null
                    };
                o.augmentClass(r, i),
                    t.exports = r
            }, {
                103: 103
            }
        ],
        99: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n, r) {
                    this.dispatchConfig = e,
                        this._targetInst = t,
                        this.nativeEvent = n;
                    var o = this.constructor.Interface;
                    for (var i in o)
                        if (o.hasOwnProperty(i)) {
                            var u = o[i];
                            u ? this[i] = u(n) : 'target' === i ? this.target = r : this[i] = n[i]
                        }
                    var s = null != n.defaultPrevented ? n.defaultPrevented : n.returnValue === !1;
                    return s ? this.isDefaultPrevented = a.thatReturnsTrue : this.isDefaultPrevented = a.thatReturnsFalse,
                        this.isPropagationStopped = a.thatReturnsFalse,
                        this
                }
                var o = e(165),
                    i = e(25),
                    a = e(146),
                    u = (e(164), 'function' == typeof Proxy, [
                        'dispatchConfig',
                        '_targetInst',
                        'nativeEvent',
                        'isDefaultPrevented',
                        'isPropagationStopped',
                        '_dispatchListeners',
                        '_dispatchInstances'
                    ]),
                    s = {
                        type: null,
                        target: null,
                        currentTarget: a.thatReturnsNull,
                        eventPhase: null,
                        bubbles: null,
                        cancelable: null,
                        timeStamp: function(e) {
                            return e.timeStamp || Date.now()
                        },
                        defaultPrevented: null,
                        isTrusted: null
                    };
                o(r.prototype, {
                        preventDefault: function() {
                            this.defaultPrevented = !0;
                            var e = this.nativeEvent;
                            e && (e.preventDefault ? e.preventDefault() : e.returnValue = !1, this.isDefaultPrevented = a.thatReturnsTrue)
                        },
                        stopPropagation: function() {
                            var e = this.nativeEvent;
                            e && (e.stopPropagation ? e.stopPropagation() : e.cancelBubble = !0, this.isPropagationStopped = a.thatReturnsTrue)
                        },
                        persist: function() {
                            this.isPersistent = a.thatReturnsTrue
                        },
                        isPersistent: a.thatReturnsFalse,
                        destructor: function() {
                            var e = this.constructor.Interface;
                            for (var t in e) this[t] = null;
                            for (var n = 0; n < u.length; n++) this[u[n]] = null
                        }
                    }),
                    r.Interface = s,
                    r.augmentClass = function(e, t) {
                        var n = this,
                            r = function() {};
                        r.prototype = n.prototype;
                        var a = new r;
                        o(a, e.prototype),
                            e.prototype = a,
                            e.prototype.constructor = e,
                            e.Interface = o({}, n.Interface, t),
                            e.augmentClass = n.augmentClass,
                            i.addPoolingTo(e, i.fourArgumentPooler)
                    },
                    i.addPoolingTo(r, i.fourArgumentPooler),
                    t.exports = r
            }, {
                146: 146,
                164: 164,
                165: 165,
                25: 25
            }
        ],
        100: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n, r) {
                    return o.call(this, e, t, n, r)
                }
                var o = e(106),
                    i = {
                        relatedTarget: null
                    };
                o.augmentClass(r, i),
                    t.exports = r
            }, {
                106: 106
            }
        ],
        101: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n, r) {
                    return o.call(this, e, t, n, r)
                }
                var o = e(99),
                    i = {
                        data: null
                    };
                o.augmentClass(r, i),
                    t.exports = r
            }, {
                99: 99
            }
        ],
        102: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n, r) {
                    return o.call(this, e, t, n, r)
                }
                var o = e(106),
                    i = e(119),
                    a = e(120),
                    u = e(121),
                    s = {
                        key: a,
                        location: null,
                        ctrlKey: null,
                        shiftKey: null,
                        altKey: null,
                        metaKey: null,
                        repeat: null,
                        locale: null,
                        getModifierState: u,
                        charCode: function(e) {
                            return 'keypress' === e.type ? i(e) : 0
                        },
                        keyCode: function(e) {
                            return 'keydown' === e.type || 'keyup' === e.type ? e.keyCode : 0
                        },
                        which: function(e) {
                            return 'keypress' === e.type ? i(e) : 'keydown' === e.type || 'keyup' === e.type ? e.keyCode : 0
                        }
                    };
                o.augmentClass(r, s),
                    t.exports = r
            }, {
                106: 106,
                119: 119,
                120: 120,
                121: 121
            }
        ],
        103: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n, r) {
                    return o.call(this, e, t, n, r)
                }
                var o = e(106),
                    i = e(109),
                    a = e(121),
                    u = {
                        screenX: null,
                        screenY: null,
                        clientX: null,
                        clientY: null,
                        ctrlKey: null,
                        shiftKey: null,
                        altKey: null,
                        metaKey: null,
                        getModifierState: a,
                        button: function(e) {
                            var t = e.button;
                            return 'which' in e ? t : 2 === t ? 2 : 4 === t ? 1 : 0
                        },
                        buttons: null,
                        relatedTarget: function(e) {
                            return e.relatedTarget || (e.fromElement === e.srcElement ? e.toElement : e.fromElement)
                        },
                        pageX: function(e) {
                            return 'pageX' in e ? e.pageX : e.clientX + i.currentScrollLeft
                        },
                        pageY: function(e) {
                            return 'pageY' in e ? e.pageY : e.clientY + i.currentScrollTop
                        }
                    };
                o.augmentClass(r, u),
                    t.exports = r
            }, {
                106: 106,
                109: 109,
                121: 121
            }
        ],
        104: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n, r) {
                    return o.call(this, e, t, n, r)
                }
                var o = e(106),
                    i = e(121),
                    a = {
                        touches: null,
                        targetTouches: null,
                        changedTouches: null,
                        altKey: null,
                        metaKey: null,
                        ctrlKey: null,
                        shiftKey: null,
                        getModifierState: i
                    };
                o.augmentClass(r, a),
                    t.exports = r
            }, {
                106: 106,
                121: 121
            }
        ],
        105: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n, r) {
                    return o.call(this, e, t, n, r)
                }
                var o = e(99),
                    i = {
                        propertyName: null,
                        elapsedTime: null,
                        pseudoElement: null
                    };
                o.augmentClass(r, i),
                    t.exports = r
            }, {
                99: 99
            }
        ],
        106: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n, r) {
                    return o.call(this, e, t, n, r)
                }
                var o = e(99),
                    i = e(122),
                    a = {
                        view: function(e) {
                            if (e.view) return e.view;
                            var t = i(e);
                            if (null != t && t.window === t) return t;
                            var n = t.ownerDocument;
                            return n ? n.defaultView || n.parentWindow : window
                        },
                        detail: function(e) {
                            return e.detail || 0
                        }
                    };
                o.augmentClass(r, a),
                    t.exports = r
            }, {
                122: 122,
                99: 99
            }
        ],
        107: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n, r) {
                    return o.call(this, e, t, n, r)
                }
                var o = e(103),
                    i = {
                        deltaX: function(e) {
                            return 'deltaX' in e ? e.deltaX : 'wheelDeltaX' in e ? -e.wheelDeltaX : 0
                        },
                        deltaY: function(e) {
                            return 'deltaY' in e ? e.deltaY : 'wheelDeltaY' in e ? -e.wheelDeltaY : 'wheelDelta' in e ? -e.wheelDelta : 0
                        },
                        deltaZ: null,
                        deltaMode: null
                    };
                o.augmentClass(r, i),
                    t.exports = r
            }, {
                103: 103
            }
        ],
        108: [
            function(e, t, n) {
                'use strict';
                var r = e(154),
                    o = {
                        reinitializeTransaction: function() {
                            this.transactionWrappers = this.getTransactionWrappers(),
                                this.wrapperInitData ? this.wrapperInitData.length = 0 : this.wrapperInitData = [],
                                this._isInTransaction = !1
                        },
                        _isInTransaction: !1,
                        getTransactionWrappers: null,
                        isInTransaction: function() {
                            return !!this._isInTransaction
                        },
                        perform: function(e, t, n, o, i, a, u, s) {
                            this.isInTransaction() ? r(!1) : void 0;
                            var l,
                                c;
                            try {
                                this._isInTransaction = !0,
                                    l = !0,
                                    this.initializeAll(0),
                                    c = e.call(t, n, o, i, a, u, s),
                                    l = !1
                            } finally {
                                try {
                                    if (l) try {
                                        this.closeAll(0)
                                    } catch (p) {} else this.closeAll(0)
                                } finally {
                                    this._isInTransaction = !1
                                }
                            }
                            return c
                        },
                        initializeAll: function(e) {
                            for (var t = this.transactionWrappers, n = e; n < t.length; n++) {
                                var r = t[n];
                                try {
                                    this.wrapperInitData[n] = i.OBSERVED_ERROR,
                                        this.wrapperInitData[n] = r.initialize ? r.initialize.call(this) : null
                                } finally {
                                    if (this.wrapperInitData[n] === i.OBSERVED_ERROR) try {
                                        this.initializeAll(n + 1)
                                    } catch (o) {}
                                }
                            }
                        },
                        closeAll: function(e) {
                            this.isInTransaction() ? void 0 : r(!1);
                            for (var t = this.transactionWrappers, n = e; n < t.length; n++) {
                                var o,
                                    a = t[n],
                                    u = this.wrapperInitData[n];
                                try {
                                    o = !0,
                                        u !== i.OBSERVED_ERROR && a.close && a.close.call(this, u),
                                        o = !1
                                } finally {
                                    if (o) try {
                                        this.closeAll(n + 1)
                                    } catch (s) {}
                                }
                            }
                            this.wrapperInitData.length = 0
                        }
                    },
                    i = {
                        Mixin: o,
                        OBSERVED_ERROR: {}
                    };
                t.exports = i
            }, {
                154: 154
            }
        ],
        109: [
            function(e, t, n) {
                'use strict';
                var r = {
                    currentScrollLeft: 0,
                    currentScrollTop: 0,
                    refreshScrollValues: function(e) {
                        r.currentScrollLeft = e.x,
                            r.currentScrollTop = e.y
                    }
                };
                t.exports = r
            }, {}
        ],
        110: [
            function(e, t, n) {
                'use strict';

                function r(e, t) {
                    if (null == t ? o(!1) : void 0, null == e) return t;
                    var n = Array.isArray(e),
                        r = Array.isArray(t);
                    return n && r ? (e.push.apply(e, t), e) : n ? (e.push(t), e) : r ? [
                        e
                    ].concat(t) : [
                        e,
                        t
                    ]
                }
                var o = e(154);
                t.exports = r
            }, {
                154: 154
            }
        ],
        111: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    for (var t = 1, n = 0, r = 0, i = e.length, a = -4 & i; a > r;) {
                        for (var u = Math.min(r + 4096, a); u > r; r += 4) n += (t += e.charCodeAt(r)) + (t += e.charCodeAt(r + 1)) + (t += e.charCodeAt(r + 2)) + (t += e.charCodeAt(r + 3));
                        t %= o,
                            n %= o
                    }
                    for (; i > r; r++) n += t += e.charCodeAt(r);
                    return t %= o,
                        n %= o,
                        t | n << 16
                }
                var o = 65521;
                t.exports = r
            }, {}
        ],
        112: [
            function(e, t, n) {
                'use strict';
                var r = !1;
                t.exports = r
            }, {}
        ],
        113: [
            function(e, t, n) {
                'use strict';
                var r = function(e) {
                    return 'undefined' != typeof MSApp && MSApp.execUnsafeLocalFunction ? function(t, n, r, o) {
                            MSApp.execUnsafeLocalFunction(function() {
                                return e(t, n, r, o)
                            })
                        } :
                        e
                };
                t.exports = r
            }, {}
        ],
        114: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n) {
                    var r = null == t || 'boolean' == typeof t || '' === t;
                    if (r) return '';
                    var o = isNaN(t);
                    return o || 0 === t || i.hasOwnProperty(e) && i[e] ? '' + t : ('string' == typeof t && (t = t.trim()), t + 'px')
                }
                var o = e(3),
                    i = (e(164), o.isUnitlessNumber);
                t.exports = r
            }, {
                164: 164,
                3: 3
            }
        ],
        115: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    return i[e]
                }

                function o(e) {
                    return ('' + e).replace(a, r)
                }
                var i = {
                        '&': '&amp;',
                        '>': '&gt;',
                        '<': '&lt;',
                        '"': '&quot;',
                        '\'': '&#x27;'
                    },
                    a = /[&><"']/g;
                t.exports = o
            }, {}
        ],
        116: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    if (null == e) return null;
                    if (1 === e.nodeType) return e;
                    var t = i.get(e);
                    return t ? (t = a(t), t ? o.getNodeFromInstance(t) : null) : void u(('function' == typeof e.render, !1))
                }
                var o = (e(35), e(40)),
                    i = e(69),
                    a = e(124),
                    u = e(154);
                e(164);
                t.exports = r
            }, {
                124: 124,
                154: 154,
                164: 164,
                35: 35,
                40: 40,
                69: 69
            }
        ],
        117: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n) {
                    var r = e,
                        o = void 0 === r[n];
                    o && null != t && (r[n] = t)
                }

                function o(e) {
                    if (null == e) return e;
                    var t = {};
                    return i(e, r, t),
                        t
                }
                var i = (e(23), e(137));
                e(164);
                t.exports = o
            }, {
                137: 137,
                164: 164,
                23: 23
            }
        ],
        118: [
            function(e, t, n) {
                'use strict';
                var r = function(e, t, n) {
                    Array.isArray(e) ? e.forEach(t, n) : e && t.call(n, e)
                };
                t.exports = r
            }, {}
        ],
        119: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    var t,
                        n = e.keyCode;
                    return 'charCode' in e ? (t = e.charCode, 0 === t && 13 === n && (t = 13)) : t = n,
                        t >= 32 || 13 === t ? t : 0
                }
                t.exports = r
            }, {}
        ],
        120: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    if (e.key) {
                        var t = i[e.key] || e.key;
                        if ('Unidentified' !== t) return t
                    }
                    if ('keypress' === e.type) {
                        var n = o(e);
                        return 13 === n ? 'Enter' : String.fromCharCode(n)
                    }
                    return 'keydown' === e.type || 'keyup' === e.type ? a[e.keyCode] || 'Unidentified' : ''
                }
                var o = e(119),
                    i = {
                        Esc: 'Escape',
                        Spacebar: ' ',
                        Left: 'ArrowLeft',
                        Up: 'ArrowUp',
                        Right: 'ArrowRight',
                        Down: 'ArrowDown',
                        Del: 'Delete',
                        Win: 'OS',
                        Menu: 'ContextMenu',
                        Apps: 'ContextMenu',
                        Scroll: 'ScrollLock',
                        MozPrintableKey: 'Unidentified'
                    },
                    a = {
                        8: 'Backspace',
                        9: 'Tab',
                        12: 'Clear',
                        13: 'Enter',
                        16: 'Shift',
                        17: 'Control',
                        18: 'Alt',
                        19: 'Pause',
                        20: 'CapsLock',
                        27: 'Escape',
                        32: ' ',
                        33: 'PageUp',
                        34: 'PageDown',
                        35: 'End',
                        36: 'Home',
                        37: 'ArrowLeft',
                        38: 'ArrowUp',
                        39: 'ArrowRight',
                        40: 'ArrowDown',
                        45: 'Insert',
                        46: 'Delete',
                        112: 'F1',
                        113: 'F2',
                        114: 'F3',
                        115: 'F4',
                        116: 'F5',
                        117: 'F6',
                        118: 'F7',
                        119: 'F8',
                        120: 'F9',
                        121: 'F10',
                        122: 'F11',
                        123: 'F12',
                        144: 'NumLock',
                        145: 'ScrollLock',
                        224: 'Meta'
                    };
                t.exports = r
            }, {
                119: 119
            }
        ],
        121: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    var t = this,
                        n = t.nativeEvent;
                    if (n.getModifierState) return n.getModifierState(e);
                    var r = i[e];
                    return r ? !!n[r] : !1
                }

                function o(e) {
                    return r
                }
                var i = {
                    Alt: 'altKey',
                    Control: 'ctrlKey',
                    Meta: 'metaKey',
                    Shift: 'shiftKey'
                };
                t.exports = o
            }, {}
        ],
        122: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    var t = e.target || e.srcElement || window;
                    return t.correspondingUseElement && (t = t.correspondingUseElement),
                        3 === t.nodeType ? t.parentNode : t
                }
                t.exports = r
            }, {}
        ],
        123: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    var t = e && (o && e[o] || e[i]);
                    return 'function' == typeof t ? t : void 0
                }
                var o = 'function' == typeof Symbol && Symbol.iterator,
                    i = '@@iterator';
                t.exports = r
            }, {}
        ],
        124: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    for (var t;
                        (t = e._renderedNodeType) === o.COMPOSITE;) e = e._renderedComponent;
                    return t === o.NATIVE ? e._renderedComponent : t === o.EMPTY ? null : void 0
                }
                var o = e(76);
                t.exports = r
            }, {
                76: 76
            }
        ],
        125: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    for (; e && e.firstChild;) e = e.firstChild;
                    return e
                }

                function o(e) {
                    for (; e;) {
                        if (e.nextSibling) return e.nextSibling;
                        e = e.parentNode
                    }
                }

                function i(e, t) {
                    for (var n = r(e), i = 0, a = 0; n;) {
                        if (3 === n.nodeType) {
                            if (a = i + n.textContent.length, t >= i && a >= t) return {
                                node: n,
                                offset: t - i
                            };
                            i = a
                        }
                        n = r(o(n))
                    }
                }
                t.exports = i
            }, {}
        ],
        126: [
            function(e, t, n) {
                'use strict';

                function r() {
                    return !i && o.canUseDOM && (i = 'textContent' in document.documentElement ? 'textContent' : 'innerText'),
                        i
                }
                var o = e(140),
                    i = null;
                t.exports = r
            }, {
                140: 140
            }
        ],
        127: [
            function(e, t, n) {
                'use strict';

                function r(e, t) {
                    var n = {};
                    return n[e.toLowerCase()] = t.toLowerCase(),
                        n['Webkit' + e] = 'webkit' + t,
                        n['Moz' + e] = 'moz' + t,
                        n['ms' + e] = 'MS' + t,
                        n['O' + e] = 'o' + t.toLowerCase(),
                        n
                }

                function o(e) {
                    if (u[e]) return u[e];
                    if (!a[e]) return e;
                    var t = a[e];
                    for (var n in t)
                        if (t.hasOwnProperty(n) && n in s) return u[e] = t[n];
                    return ''
                }
                var i = e(140),
                    a = {
                        animationend: r('Animation', 'AnimationEnd'),
                        animationiteration: r('Animation', 'AnimationIteration'),
                        animationstart: r('Animation', 'AnimationStart'),
                        transitionend: r('Transition', 'TransitionEnd')
                    },
                    u = {},
                    s = {};
                i.canUseDOM && (s = document.createElement('div').style, 'AnimationEvent' in window || (delete a.animationend.animation, delete a.animationiteration.animation, delete a.animationstart.animation), 'TransitionEvent' in window || delete a.transitionend.transition),
                    t.exports = o
            }, {
                140: 140
            }
        ],
        128: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    return 'function' == typeof e && 'undefined' != typeof e.prototype && 'function' == typeof e.prototype.mountComponent && 'function' == typeof e.prototype.receiveComponent
                }

                function o(e) {
                    var t,
                        n = null === e || e === !1;
                    if (n) t = u.create(o);
                    else if ('object' == typeof e) {
                        var i = e;
                        !i || 'function' != typeof i.type && 'string' != typeof i.type ? l(!1) : void 0,
                            t = 'string' == typeof i.type ? s.createInternalComponent(i) : r(i.type) ? new i.type(i) : new c(i)
                    } else 'string' == typeof e || 'number' == typeof e ? t = s.createInstanceForText(e) : l(!1);
                    return t._mountIndex = 0,
                        t._mountImage = null,
                        t
                }
                var i = e(165),
                    a = e(34),
                    u = e(62),
                    s = e(75),
                    l = (e(70), e(154)),
                    c = (e(164), function(e) {
                        this.construct(e)
                    });
                i(c.prototype, a.Mixin, {
                    _instantiateReactComponent: o
                });
                t.exports = o
            }, {
                154: 154,
                164: 164,
                165: 165,
                34: 34,
                62: 62,
                70: 70,
                75: 75
            }
        ],
        129: [
            function(e, t, n) {
                'use strict';

                function r(e, t) {
                    if (!i.canUseDOM || t && !('addEventListener' in document)) return !1;
                    var n = 'on' + e,
                        r = n in document;
                    if (!r) {
                        var a = document.createElement('div');
                        a.setAttribute(n, 'return;'),
                            r = 'function' == typeof a[n]
                    }
                    return !r && o && 'wheel' === e && (r = document.implementation.hasFeature('Events.wheel', '3.0')),
                        r
                }
                var o,
                    i = e(140);
                i.canUseDOM && (o = document.implementation && document.implementation.hasFeature && document.implementation.hasFeature('', '') !== !0),
                    t.exports = r
            }, {
                140: 140
            }
        ],
        130: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    var t = e && e.nodeName && e.nodeName.toLowerCase();
                    return t && ('input' === t && o[e.type] || 'textarea' === t)
                }
                var o = {
                    color: !0,
                    date: !0,
                    datetime: !0,
                    'datetime-local': !0,
                    email: !0,
                    month: !0,
                    number: !0,
                    password: !0,
                    range: !0,
                    search: !0,
                    tel: !0,
                    text: !0,
                    time: !0,
                    url: !0,
                    week: !0
                };
                t.exports = r
            }, {}
        ],
        131: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    return o.isValidElement(e) ? void 0 : i(!1),
                        e
                }
                var o = e(60),
                    i = e(154);
                t.exports = r
            }, {
                154: 154,
                60: 60
            }
        ],
        132: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    return '"' + o(e) + '"'
                }
                var o = e(115);
                t.exports = r
            }, {
                115: 115
            }
        ],
        133: [
            function(e, t, n) {
                'use strict';
                var r = e(72);
                t.exports = r.renderSubtreeIntoContainer
            }, {
                72: 72
            }
        ],
        134: [
            function(e, t, n) {
                'use strict';
                var r = e(140),
                    o = /^[ \r\n\t\f]/,
                    i = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/,
                    a = e(113),
                    u = a(function(e, t) {
                        e.innerHTML = t
                    });
                if (r.canUseDOM) {
                    var s = document.createElement('div');
                    s.innerHTML = ' ',
                        '' === s.innerHTML && (u = function(e, t) {
                            if (e.parentNode && e.parentNode.replaceChild(e, e), o.test(t) || '<' === t[0] && i.test(t)) {
                                e.innerHTML = String.fromCharCode(65279) + t;
                                var n = e.firstChild;
                                1 === n.data.length ? e.removeChild(n) : n.deleteData(0, 1)
                            } else e.innerHTML = t
                        }),
                        s = null
                }
                t.exports = u
            }, {
                113: 113,
                140: 140
            }
        ],
        135: [
            function(e, t, n) {
                'use strict';
                var r = e(140),
                    o = e(115),
                    i = e(134),
                    a = function(e, t) {
                        e.textContent = t
                    };
                r.canUseDOM && ('textContent' in document.documentElement || (a = function(e, t) {
                        i(e, o(t))
                    })),
                    t.exports = a
            }, {
                115: 115,
                134: 134,
                140: 140
            }
        ],
        136: [
            function(e, t, n) {
                'use strict';

                function r(e, t) {
                    var n = null === e || e === !1,
                        r = null === t || t === !1;
                    if (n || r) return n === r;
                    var o = typeof e,
                        i = typeof t;
                    return 'string' === o || 'number' === o ? 'string' === i || 'number' === i : 'object' === i && e.type === t.type && e.key === t.key
                }
                t.exports = r
            }, {}
        ],
        137: [
            function(e, t, n) {
                'use strict';

                function r(e, t) {
                    return e && 'object' == typeof e && null != e.key ? l.escape(e.key) : t.toString(36)
                }

                function o(e, t, n, i) {
                    var d = typeof e;
                    if ('undefined' !== d && 'boolean' !== d || (e = null), null === e || 'string' === d || 'number' === d || a.isValidElement(e)) return n(i, e, '' === t ? c + r(e, 0) : t),
                        1;
                    var f,
                        h,
                        v = 0,
                        m = '' === t ? c : t + p;
                    if (Array.isArray(e))
                        for (var g = 0; g < e.length; g++) f = e[g],
                            h = m + r(f, g),
                            v += o(f, h, n, i);
                    else {
                        var y = u(e);
                        if (y) {
                            var C,
                                b = y.call(e);
                            if (y !== e.entries)
                                for (var _ = 0; !(C = b.next()).done;) f = C.value,
                                    h = m + r(f, _++),
                                    v += o(f, h, n, i);
                            else
                                for (; !(C = b.next()).done;) {
                                    var E = C.value;
                                    E && (f = E[1], h = m + l.escape(E[0]) + p + r(f, 0), v += o(f, h, n, i))
                                }
                        } else 'object' === d && (String(e), s(!1))
                    }
                    return v
                }

                function i(e, t, n) {
                    return null == e ? 0 : o(e, '', t, n)
                }
                var a = (e(35), e(60)),
                    u = e(123),
                    s = e(154),
                    l = e(23),
                    c = (e(164), '.'),
                    p = ':';
                t.exports = i
            }, {
                123: 123,
                154: 154,
                164: 164,
                23: 23,
                35: 35,
                60: 60
            }
        ],
        138: [
            function(e, t, n) {
                'use strict';
                var r = (e(165), e(146)),
                    o = (e(164), r);
                t.exports = o
            }, {
                146: 146,
                164: 164,
                165: 165
            }
        ],
        139: [
            function(e, t, n) {
                'use strict';
                var r = e(146),
                    o = {
                        listen: function(e, t, n) {
                            return e.addEventListener ? (e.addEventListener(t, n, !1), {
                                remove: function() {
                                    e.removeEventListener(t, n, !1)
                                }
                            }) : e.attachEvent ? (e.attachEvent('on' + t, n), {
                                remove: function() {
                                    e.detachEvent('on' + t, n)
                                }
                            }) : void 0
                        },
                        capture: function(e, t, n) {
                            return e.addEventListener ? (e.addEventListener(t, n, !0), {
                                remove: function() {
                                    e.removeEventListener(t, n, !0)
                                }
                            }) : {
                                remove: r
                            }
                        },
                        registerDefault: function() {}
                    };
                t.exports = o
            }, {
                146: 146
            }
        ],
        140: [
            function(e, t, n) {
                'use strict';
                var r = !('undefined' == typeof window || !window.document || !window.document.createElement),
                    o = {
                        canUseDOM: r,
                        canUseWorkers: 'undefined' != typeof Worker,
                        canUseEventListeners: r && !(!window.addEventListener && !window.attachEvent),
                        canUseViewport: r && !!window.screen,
                        isInWorker: !r
                    };
                t.exports = o
            }, {}
        ],
        141: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    return e.replace(o, function(e, t) {
                        return t.toUpperCase()
                    })
                }
                var o = /-(.)/g;
                t.exports = r
            }, {}
        ],
        142: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    return o(e.replace(i, 'ms-'))
                }
                var o = e(141),
                    i = /^-ms-/;
                t.exports = r
            }, {
                141: 141
            }
        ],
        143: [
            function(e, t, n) {
                'use strict';

                function r(e, t) {
                    return e && t ? e === t ? !0 : o(e) ? !1 : o(t) ? r(e, t.parentNode) : e.contains ? e.contains(t) : e.compareDocumentPosition ? !!(16 & e.compareDocumentPosition(t)) : !1 : !1
                }
                var o = e(156);
                t.exports = r
            }, {
                156: 156
            }
        ],
        144: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    var t = e.length;
                    if (Array.isArray(e) || 'object' != typeof e && 'function' != typeof e ? a(!1) : void 0, 'number' != typeof t ? a(!1) : void 0, 0 === t || t - 1 in e ? void 0 : a(!1), 'function' == typeof e.callee ? a(!1) : void 0, e.hasOwnProperty) try {
                        return Array.prototype.slice.call(e)
                    } catch (n) {}
                    for (var r = Array(t), o = 0; t > o; o++) r[o] = e[o];
                    return r
                }

                function o(e) {
                    return !!e && ('object' == typeof e || 'function' == typeof e) && 'length' in e && !('setInterval' in e) && 'number' != typeof e.nodeType && (Array.isArray(e) || 'callee' in e || 'item' in e)
                }

                function i(e) {
                    return o(e) ? Array.isArray(e) ? e.slice() : r(e) : [
                        e
                    ]
                }
                var a = e(154);
                t.exports = i
            }, {
                154: 154
            }
        ],
        145: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    var t = e.match(c);
                    return t && t[1].toLowerCase()
                }

                function o(e, t) {
                    var n = l;
                    l ? void 0 : s(!1);
                    var o = r(e),
                        i = o && u(o);
                    if (i) {
                        n.innerHTML = i[1] + e + i[2];
                        for (var c = i[0]; c--;) n = n.lastChild
                    } else n.innerHTML = e;
                    var p = n.getElementsByTagName('script');
                    p.length && (t ? void 0 : s(!1), a(p).forEach(t));
                    for (var d = Array.from(n.childNodes); n.lastChild;) n.removeChild(n.lastChild);
                    return d
                }
                var i = e(140),
                    a = e(144),
                    u = e(150),
                    s = e(154),
                    l = i.canUseDOM ? document.createElement('div') : null,
                    c = /^\s*<(\w+)/;
                t.exports = o
            }, {
                140: 140,
                144: 144,
                150: 150,
                154: 154
            }
        ],
        146: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    return function() {
                        return e
                    }
                }

                function o() {}
                o.thatReturns = r,
                    o.thatReturnsFalse = r(!1),
                    o.thatReturnsTrue = r(!0),
                    o.thatReturnsNull = r(null),
                    o.thatReturnsThis = function() {
                        return this
                    },
                    o.thatReturnsArgument = function(e) {
                        return e
                    },
                    t.exports = o
            }, {}
        ],
        147: [
            function(e, t, n) {
                'use strict';
                var r = {};
                t.exports = r
            }, {}
        ],
        148: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    try {
                        e.focus()
                    } catch (t) {}
                }
                t.exports = r
            }, {}
        ],
        149: [
            function(e, t, n) {
                'use strict';

                function r() {
                    if ('undefined' == typeof document) return null;
                    try {
                        return document.activeElement || document.body
                    } catch (e) {
                        return document.body
                    }
                }
                t.exports = r
            }, {}
        ],
        150: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    return a ? void 0 : i(!1),
                        d.hasOwnProperty(e) || (e = '*'),
                        u.hasOwnProperty(e) || ('*' === e ? a.innerHTML = '<link />' : a.innerHTML = '<' + e + '></' + e + '>', u[e] = !a.firstChild),
                        u[e] ? d[e] : null
                }
                var o = e(140),
                    i = e(154),
                    a = o.canUseDOM ? document.createElement('div') : null,
                    u = {},
                    s = [
                        1,
                        '<select multiple="true">',
                        '</select>'
                    ],
                    l = [
                        1,
                        '<table>',
                        '</table>'
                    ],
                    c = [
                        3,
                        '<table><tbody><tr>',
                        '</tr></tbody></table>'
                    ],
                    p = [
                        1,
                        '<svg xmlns="http://www.w3.org/2000/svg">',
                        '</svg>'
                    ],
                    d = {
                        '*': [
                            1,
                            '?<div>',
                            '</div>'
                        ],
                        area: [
                            1,
                            '<map>',
                            '</map>'
                        ],
                        col: [
                            2,
                            '<table><tbody></tbody><colgroup>',
                            '</colgroup></table>'
                        ],
                        legend: [
                            1,
                            '<fieldset>',
                            '</fieldset>'
                        ],
                        param: [
                            1,
                            '<object>',
                            '</object>'
                        ],
                        tr: [
                            2,
                            '<table><tbody>',
                            '</tbody></table>'
                        ],
                        optgroup: s,
                        option: s,
                        caption: l,
                        colgroup: l,
                        tbody: l,
                        tfoot: l,
                        thead: l,
                        td: c,
                        th: c
                    },
                    f = [
                        'circle',
                        'clipPath',
                        'defs',
                        'ellipse',
                        'g',
                        'image',
                        'line',
                        'linearGradient',
                        'mask',
                        'path',
                        'pattern',
                        'polygon',
                        'polyline',
                        'radialGradient',
                        'rect',
                        'stop',
                        'text',
                        'tspan'
                    ];
                f.forEach(function(e) {
                        d[e] = p,
                            u[e] = !0
                    }),
                    t.exports = r
            }, {
                140: 140,
                154: 154
            }
        ],
        151: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    return e === window ? {
                            x: window.pageXOffset || document.documentElement.scrollLeft,
                            y: window.pageYOffset || document.documentElement.scrollTop
                        } :
                        {
                            x: e.scrollLeft,
                            y: e.scrollTop
                        }
                }
                t.exports = r
            }, {}
        ],
        152: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    return e.replace(o, '-$1').toLowerCase()
                }
                var o = /([A-Z])/g;
                t.exports = r
            }, {}
        ],
        153: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    return o(e).replace(i, '-ms-')
                }
                var o = e(152),
                    i = /^ms-/;
                t.exports = r
            }, {
                152: 152
            }
        ],
        154: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n, r, o, i, a, u) {
                    if (!e) {
                        var s;
                        if (void 0 === t) s = new Error('Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.');
                        else {
                            var l = [
                                    n,
                                    r,
                                    o,
                                    i,
                                    a,
                                    u
                                ],
                                c = 0;
                            s = new Error(t.replace(/%s/g, function() {
                                    return l[c++]
                                })),
                                s.name = 'Invariant Violation'
                        }
                        throw s.framesToPop = 1,
                            s
                    }
                }
                t.exports = r
            }, {}
        ],
        155: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    return !(!e || !('function' == typeof Node ? e instanceof Node : 'object' == typeof e && 'number' == typeof e.nodeType && 'string' == typeof e.nodeName))
                }
                t.exports = r
            }, {}
        ],
        156: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    return o(e) && 3 == e.nodeType
                }
                var o = e(155);
                t.exports = r
            }, {
                155: 155
            }
        ],
        157: [
            function(e, t, n) {
                'use strict';
                var r = e(154),
                    o = function(e) {
                        var t,
                            n = {};
                        e instanceof Object && !Array.isArray(e) ? void 0 : r(!1);
                        for (t in e) e.hasOwnProperty(t) && (n[t] = t);
                        return n
                    };
                t.exports = o
            }, {
                154: 154
            }
        ],
        158: [
            function(e, t, n) {
                'use strict';
                var r = function(e) {
                    var t;
                    for (t in e)
                        if (e.hasOwnProperty(t)) return t;
                    return null
                };
                t.exports = r
            }, {}
        ],
        159: [
            function(e, t, n) {
                'use strict';

                function r(e, t, n) {
                    if (!e) return null;
                    var r = {};
                    for (var i in e) o.call(e, i) && (r[i] = t.call(n, e[i], i, e));
                    return r
                }
                var o = Object.prototype.hasOwnProperty;
                t.exports = r
            }, {}
        ],
        160: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    var t = {};
                    return function(n) {
                        return t.hasOwnProperty(n) || (t[n] = e.call(this, n)),
                            t[n]
                    }
                }
                t.exports = r
            }, {}
        ],
        161: [
            function(e, t, n) {
                'use strict';
                var r,
                    o = e(140);
                o.canUseDOM && (r = window.performance || window.msPerformance || window.webkitPerformance),
                    t.exports = r || {}
            }, {
                140: 140
            }
        ],
        162: [
            function(e, t, n) {
                'use strict';
                var r,
                    o = e(161);
                r = o.now ? function() {
                        return o.now()
                    } :
                    function() {
                        return Date.now()
                    },
                    t.exports = r
            }, {
                161: 161
            }
        ],
        163: [
            function(e, t, n) {
                'use strict';

                function r(e, t) {
                    return e === t ? 0 !== e || 1 / e === 1 / t : e !== e && t !== t
                }

                function o(e, t) {
                    if (r(e, t)) return !0;
                    if ('object' != typeof e || null === e || 'object' != typeof t || null === t) return !1;
                    var n = Object.keys(e),
                        o = Object.keys(t);
                    if (n.length !== o.length) return !1;
                    for (var a = 0; a < n.length; a++)
                        if (!i.call(t, n[a]) || !r(e[n[a]], t[n[a]])) return !1;
                    return !0
                }
                var i = Object.prototype.hasOwnProperty;
                t.exports = o
            }, {}
        ],
        164: [
            function(e, t, n) {
                'use strict';
                var r = e(146),
                    o = r;
                t.exports = o
            }, {
                146: 146
            }
        ],
        165: [
            function(e, t, n) {
                'use strict';

                function r(e) {
                    if (null === e || void 0 === e) throw new TypeError('Object.assign cannot be called with null or undefined');
                    return Object(e)
                }

                function o() {
                    try {
                        if (!Object.assign) return !1;
                        var e = new String('abc');
                        if (e[5] = 'de', '5' === Object.getOwnPropertyNames(e)[0]) return !1;
                        for (var t = {}, n = 0; 10 > n; n++) t['_' + String.fromCharCode(n)] = n;
                        var r = Object.getOwnPropertyNames(t).map(function(e) {
                            return t[e]
                        });
                        if ('0123456789' !== r.join('')) return !1;
                        var o = {};
                        return 'abcdefghijklmnopqrst'.split('').forEach(function(e) {
                                o[e] = e
                            }),
                            'abcdefghijklmnopqrst' === Object.keys(Object.assign({}, o)).join('')
                    } catch (i) {
                        return !1
                    }
                }
                var i = Object.prototype.hasOwnProperty,
                    a = Object.prototype.propertyIsEnumerable;
                t.exports = o() ? Object.assign : function(e, t) {
                    for (var n, o, u = r(e), s = 1; s < arguments.length; s++) {
                        n = Object(arguments[s]);
                        for (var l in n) i.call(n, l) && (u[l] = n[l]);
                        if (Object.getOwnPropertySymbols) {
                            o = Object.getOwnPropertySymbols(n);
                            for (var c = 0; c < o.length; c++) a.call(n, o[c]) && (u[o[c]] = n[o[c]])
                        }
                    }
                    return u
                }
            }, {}
        ]
    }, {}, [
        88
    ])(88)
});
! function(e) {
    if ('object' == typeof exports && 'undefined' != typeof module) module.exports = e(require('react'));
    else if ('function' == typeof define && define.amd) define(['react'], e);
    else {
        var f;
        f = 'undefined' != typeof window ? window : 'undefined' != typeof global ? global : 'undefined' != typeof self ? self : this,
            f.ReactDOM = e(f.React)
    }
}(function(e) {
    return e.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
});
! function(name, definition) {
    Mobi2Go.UI = Mobi2Go.UI || {};
    Mobi2Go.UI[name] = definition();
}('browser', function() {
    var t = true

    function detect(ua) {
        function getFirstMatch(regex) {
            var match = ua.match(regex);
            return (match && match.length > 1 && match[1]) || '';
        }
        var iosdevice = getFirstMatch(/(ipod|iphone|ipad)/i).toLowerCase(),
            likeAndroid = /like android/i.test(ua),
            android = !likeAndroid && /android/i.test(ua),
            versionIdentifier = getFirstMatch(/version\/(\d+(\.\d+)?)/i),
            tablet = /tablet/i.test(ua),
            mobile = !tablet && /[^-]mobi/i.test(ua),
            result
        if (/opera|opr/i.test(ua)) {
            result = {
                name: 'Opera',
                opera: t,
                version: versionIdentifier || getFirstMatch(/(?:opera|opr)[\s\/](\d+(\.\d+)?)/i)
            }
        } else if (/windows phone/i.test(ua)) {
            result = {
                name: 'Windows Phone',
                windowsphone: t,
                msie: t,
                version: getFirstMatch(/iemobile\/(\d+(\.\d+)?)/i)
            }
        } else if (/msie|trident/i.test(ua)) {
            result = {
                name: 'Internet Explorer',
                msie: t,
                version: getFirstMatch(/(?:msie |rv:)(\d+(\.\d+)?)/i)
            }
        } else if (/chrome|crios|crmo/i.test(ua)) {
            result = {
                name: 'Chrome',
                chrome: t,
                version: getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i)
            }
        } else if (iosdevice) {
            result = {
                name: iosdevice == 'iphone' ? 'iPhone' : iosdevice == 'ipad' ? 'iPad' : 'iPod'
            }
            if (versionIdentifier) {
                result.version = versionIdentifier
            }
        } else if (/sailfish/i.test(ua)) {
            result = {
                name: 'Sailfish',
                sailfish: t,
                version: getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i)
            }
        } else if (/seamonkey\//i.test(ua)) {
            result = {
                name: 'SeaMonkey',
                seamonkey: t,
                version: getFirstMatch(/seamonkey\/(\d+(\.\d+)?)/i)
            }
        } else if (/firefox|iceweasel/i.test(ua)) {
            result = {
                name: 'Firefox',
                firefox: t,
                version: getFirstMatch(/(?:firefox|iceweasel)[ \/](\d+(\.\d+)?)/i)
            }
            if (/\((mobile|tablet);[^\)]*rv:[\d\.]+\)/i.test(ua)) {
                result.firefoxos = t
            }
        } else if (/silk/i.test(ua)) {
            result = {
                name: 'Amazon Silk',
                silk: t,
                version: getFirstMatch(/silk\/(\d+(\.\d+)?)/i)
            }
        } else if (android) {
            result = {
                name: 'Android',
                version: versionIdentifier
            }
        } else if (/phantom/i.test(ua)) {
            result = {
                name: 'PhantomJS',
                phantom: t,
                version: getFirstMatch(/phantomjs\/(\d+(\.\d+)?)/i)
            }
        } else if (/blackberry|\bbb\d+/i.test(ua) || /rim\stablet/i.test(ua)) {
            result = {
                name: 'BlackBerry',
                blackberry: t,
                version: versionIdentifier || getFirstMatch(/blackberry[\d]+\/(\d+(\.\d+)?)/i)
            }
        } else if (/(web|hpw)os/i.test(ua)) {
            result = {
                name: 'WebOS',
                webos: t,
                version: versionIdentifier || getFirstMatch(/w(?:eb)?osbrowser\/(\d+(\.\d+)?)/i)
            };
            /touchpad\//i.test(ua) && (result.touchpad = t)
        } else if (/bada/i.test(ua)) {
            result = {
                name: 'Bada',
                bada: t,
                version: getFirstMatch(/dolfin\/(\d+(\.\d+)?)/i)
            };
        } else if (/tizen/i.test(ua)) {
            result = {
                name: 'Tizen',
                tizen: t,
                version: getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.\d+)?)/i) || versionIdentifier
            };
        } else if (/safari/i.test(ua)) {
            result = {
                name: 'Safari',
                safari: t,
                version: versionIdentifier
            }
        } else result = {}
        if (/(apple)?webkit/i.test(ua)) {
            result.name = result.name || 'Webkit'
            result.webkit = t
            if (!result.version && versionIdentifier) {
                result.version = versionIdentifier
            }
        } else if (!result.opera && /gecko\//i.test(ua)) {
            result.name = result.name || 'Gecko'
            result.gecko = t
            result.version = result.version || getFirstMatch(/gecko\/(\d+(\.\d+)?)/i)
        }
        if (android || result.silk) {
            result.android = t
        } else if (iosdevice) {
            result[iosdevice] = t
            result.ios = t
        }
        var osVersion = '';
        if (iosdevice) {
            osVersion = getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i);
            osVersion = osVersion.replace(/[_\s]/g, '.');
        } else if (android) {
            osVersion = getFirstMatch(/android[ \/-](\d+(\.\d+)*)/i);
        } else if (result.windowsphone) {
            osVersion = getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i);
        } else if (result.webos) {
            osVersion = getFirstMatch(/(?:web|hpw)os\/(\d+(\.\d+)*)/i);
        } else if (result.blackberry) {
            osVersion = getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i);
        } else if (result.bada) {
            osVersion = getFirstMatch(/bada\/(\d+(\.\d+)*)/i);
        } else if (result.tizen) {
            osVersion = getFirstMatch(/tizen[\/\s](\d+(\.\d+)*)/i);
        }
        if (osVersion) {
            result.osversion = osVersion;
        }
        var osMajorVersion = osVersion.split('.')[0];
        if (tablet || iosdevice == 'ipad' || (android && (osMajorVersion == 3 || (osMajorVersion == 4 && !mobile))) || result.silk) {
            result.tablet = t
        } else if (mobile || iosdevice == 'iphone' || iosdevice == 'ipod' || android || result.blackberry || result.webos || result.bada) {
            result.mobile = t
        }
        if ((result.msie && result.version >= 10) || (result.chrome && result.version >= 20) || (result.firefox && result.version >= 20) || (result.safari && result.version >= 6) || (result.opera && result.version >= 10) || (result.ios && result.osversion && result.osversion.split('.')[0] >= 6) || (result.blackberry && result.version >= 10.1)) {
            result.a = t;
        } else if ((result.msie && result.version < 10) || (result.chrome && result.version < 20) || (result.firefox && result.version < 20) || (result.safari && result.version < 6) || (result.opera && result.version < 10) || (result.ios && result.osversion && result.osversion.split('.')[0] < 6)) {
            result.c = t
        } else result.x = t
        return result
    }
    var bowser = detect(typeof navigator !== 'undefined' ? navigator.userAgent : '')
    bowser._detect = detect;
    return bowser
});
(function(Mobi2Go, $, _, window) {
    'use strict';
    var helpers = Mobi2Go.UI.helpers = Mobi2Go.UI.helpers || {};
    var browser = Mobi2Go.UI.browser;
    helpers.spinner = function($el, status) {
        if (status) {
            $el.html('<div class="m2g-icon m2g-icon--large m2g-icon--spinner m2g-loader"></div>');
        } else {
            $el.html('');
        }
    };
    var $body = $('html, body'),
        $window = $(window);
    helpers.scrollTo = function(selector, callback, force_scroll, margin) {
        var $el = $(selector),
            window_height = $window.height() - Mobi2Go.UI.global_page_scroll_offset,
            scrolltop = $window.scrollTop(),
            element_scrolltop = $el.offset().top,
            duration = 240;
        margin = +margin || 0;
        margin -= Mobi2Go.UI.global_page_scroll_offset;
        if (_.isNumber(margin)) {
            element_scrolltop += margin;
        }
        if (scrolltop < element_scrolltop && (window_height + scrolltop) > element_scrolltop && !force_scroll) {
            _.isFunction(callback) && callback();
            return;
        }
        $body.animate({
            scrollTop: element_scrolltop
        });
        _.isFunction(callback) && _.delay(callback, duration);
    };
    var $m2g_view = $('#m2g-view.m2g-view--ie');
    helpers.placeholderText = function(selector) {
        $m2g_view.find(selector + ' input').placeholder();
    };
    var animation_events = [
        'webkitAnimationEnd',
        'oAnimationEnd',
        'msAnimationEnd',
        'animationend'
    ].join(' ');
    helpers.setAnimation = function(element, animation, remove_on_complete, callback) {
        var $element = $(element);
        element.style.webkitAnimationName = element.style.MozAnimationName = '';
        _.defer(function() {
            element.style.webkitAnimationName = element.style.MozAnimationName = animation;
            if (remove_on_complete || _.isFunction(callback)) {
                $element.bind(animation_events, onComplete);
            }
        });

        function onComplete() {
            _.isFunction(callback) && callback();
            if (remove_on_complete) {
                element.style.webkitAnimationName = '';
                element.style.MozAnimationName = '';
            }
            $element.unbind(animation_events, onComplete);
        }
    };
    helpers.highlightElement = function($element) {
        $element.addClass('m2g-highlighted');
        clearTimeout($element.__highlight_timeout);
        $element.__highlight_timeout = setTimeout(function() {
            $element.removeClass('m2g-highlighted');
        }, 3600);
    };
    helpers.getPageYOffset = function() {
        return (window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;
    };
    $(function() {
        try {
            FastClick && document.getElementById('m2g-view') && new FastClick(document.getElementById('m2g-view'));
        } catch (Error) {}
    });
    (function() {
        var lastTime = 0;
        var vendors = [
            'webkit',
            'moz'
        ];
        for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
            window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];
            window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];
        }
        if (!window.requestAnimationFrame)
            window.requestAnimationFrame = function(callback, element) {
                var currTime = new Date().getTime();
                var timeToCall = Math.max(0, 16 - (currTime - lastTime));
                var id = window.setTimeout(function() {
                    callback(currTime + timeToCall);
                }, timeToCall);
                lastTime = currTime + timeToCall;
                return id;
            };
        if (!window.cancelAnimationFrame)
            window.cancelAnimationFrame = function(id) {
                clearTimeout(id);
            };
    }());
    if (!Element.prototype.scrollIntoViewIfNeeded) {
        Element.prototype.scrollIntoViewIfNeeded = function(centerIfNeeded) {
            centerIfNeeded = arguments.length === 0 ? true : !!centerIfNeeded;
            var parent = this.parentNode,
                parentComputedStyle = window.getComputedStyle(parent, null),
                parentBorderTopWidth = parseInt(parentComputedStyle.getPropertyValue('border-top-width')),
                parentBorderLeftWidth = parseInt(parentComputedStyle.getPropertyValue('border-left-width')),
                overTop = this.offsetTop - parent.offsetTop < parent.scrollTop,
                overBottom = (this.offsetTop - parent.offsetTop + this.clientHeight - parentBorderTopWidth) > (parent.scrollTop + parent.clientHeight),
                overLeft = this.offsetLeft - parent.offsetLeft < parent.scrollLeft,
                overRight = (this.offsetLeft - parent.offsetLeft + this.clientWidth - parentBorderLeftWidth) > (parent.scrollLeft + parent.clientWidth),
                alignWithTop = overTop && !overBottom;
            if ((overTop || overBottom) && centerIfNeeded) {
                parent.scrollTop = this.offsetTop - parent.offsetTop - parent.clientHeight / 2 - parentBorderTopWidth + this.clientHeight / 2;
            }
            if ((overLeft || overRight) && centerIfNeeded) {
                parent.scrollLeft = this.offsetLeft - parent.offsetLeft - parent.clientWidth / 2 - parentBorderLeftWidth + this.clientWidth / 2;
            }
            if ((overTop || overBottom || overLeft || overRight) && !centerIfNeeded) {
                this.scrollIntoView(alignWithTop);
            }
        };
    }
}(Mobi2Go, jQuery, this._ || exports._, this));
(function(window, Mobi2Go, $, _) {
    'use strict';
    var UI = Mobi2Go.UI || {},
        helpers = UI.helpers,
        $window = $(window),
        $body = $('body'),
        $view_container = $('#m2g-view'),
        instance = 0,
        currently_open_modal = null,
        $overlay = $('#m2g-view .m2g-modal-overlay'),
        should_animate = false,
        getPageYOffset = helpers.getPageYOffset;
    UI.Modal = function($element) {
        this.$element = $element;
        this.allow_close = true;
        this.is_open = false;
        this.is_forced_open = false;
        $element.addClass('m2g-modal m2g-modal--modal-closed').find('[data-dismiss="modal"]').click(_.bind(this.close, this));
        Mobi2Go.app.mixinEvents('UIModal#' + (instance++), this);
    };
    UI.Modal.isOpen = function() {
        return currently_open_modal;
    };
    UI.Modal.prototype.isOpen = function() {
        return this.is_open;
    };
    UI.Modal.prototype.freeze = function() {
        this.$element.addClass('m2g-modal--modal-frozen');
        $view_container.addClass('m2g-view--modal-frozen');
        $body.addClass('m2g-open-modal--frozen');
        this.allow_close = false;
        return this;
    };
    UI.Modal.prototype.unfreeze = function() {
        this.$element.removeClass('m2g-modal--modal-frozen');
        $view_container.removeClass('m2g-view--modal-frozen');
        $body.removeClass('m2g-open-modal--frozen');
        this.allow_close = true;
        return this;
    };
    UI.Modal.prototype.isFrozen = function() {
        return !this.allow_close;
    };
    UI.Modal.prototype.open = function() {
        this.$element.removeClass('m2g-modal--modal-closed').addClass('m2g-modal--modal-open');
        this.updatePosition({
            no_animation: true
        });
        $view_container.removeClass('m2g-view--modal-closed').addClass('m2g-view--modal-open');
        $overlay.removeClass('m2g-modal-overlay--modal-closed').addClass('m2g-modal-overlay--modal-open');
        $body.addClass('m2g-open-modal');
        currently_open_modal = this;
        this.is_open = true;
        UI.trigger('modalOpen', this);
        return this;
    };
    UI.Modal.prototype.close = function() {
        if (!this.allow_close) return;
        this.$element.removeClass('m2g-modal--modal-open').addClass('m2g-modal--modal-closed');
        $view_container.removeClass('m2g-view--modal-open m2g-view--modal-frozen').addClass('m2g-view--modal-closed');
        $overlay.removeClass('m2g-modal-overlay--modal-open').addClass('m2g-modal-overlay--modal-closed');
        $body.removeClass('m2g-open-modal');
        currently_open_modal = null;
        this.is_open = false;
        UI.trigger('modalClose', this);
        return this;
    };
    var prev_page_offset = 0,
        modal_offset = 0,
        margin = 18;
    UI.Modal.prototype.updatePosition = function(options) {
        var window_height = $window.height(),
            view_height = $view_container.height(),
            view_offset = $view_container.offset().top,
            modal_height = this.$element.height(),
            page_offset = getPageYOffset(),
            new_modal_offset = page_offset - view_offset,
            max_offset = view_height - modal_height,
            is_scrolling_down = page_offset >= prev_page_offset;
        prev_page_offset = page_offset;
        if (window_height > modal_height) {
            new_modal_offset += ((window_height - modal_height) / 2);
        } else {
            var modal_offset_top = modal_offset - margin,
                modal_offset_bottom = modal_offset_top + modal_height + (margin * 2),
                viewport_top = page_offset - view_offset,
                viewport_bottom = page_offset + window_height - view_offset;
            if (viewport_top >= modal_offset_top && viewport_bottom <= modal_offset_bottom) {
                return;
            }
            if (new_modal_offset && is_scrolling_down) {
                new_modal_offset -= modal_height + (margin * 2) - window_height;
            }
            new_modal_offset += margin;
        }
        if (new_modal_offset > max_offset) {
            new_modal_offset = max_offset;
        }
        if (new_modal_offset < 0) {
            new_modal_offset = 0;
        }
        if (options && options.no_animation) {
            this.setOffsetWithoutAnimation(new_modal_offset);
        } else if (options && options.force_animation) {
            this.setOffsetWithAnimation(new_modal_offset);
        } else {
            this.setOffset(new_modal_offset);
        }
    };
    UI.Modal.prototype.setOffset = function(y) {
        if (should_animate) {
            this.setOffsetWithAnimation(y);
        } else {
            this.setOffsetWithoutAnimation(y);
        };
    };
    UI.Modal.prototype.setOffsetWithoutAnimation = function(offset) {
        if (should_animate) {
            this.$element.attr('style', '-webkit-transform: translate3d(0,' + offset + 'px, 0);');
        } else {
            this.$element.attr('style', 'top: ' + offset + 'px;');
        }
        modal_offset = offset;
    };
    UI.Modal.prototype.setOffsetWithAnimation = function(offset) {
        var style;
        if (should_animate) {
            style = 'transition: -webkit-transform .33s ease-in-out;' + '-webkit-transform: translate3d(0,' + offset + 'px,0)';
        } else {
            style = 'transition: top .33s ease-in-out;' + 'top: ' + offset + 'px;';
        }
        this.$element.attr('style', style);
        modal_offset = offset;
    };
    UI.Modal.prototype.showBottom = function() {
        var window_height = $window.height(),
            view_offset = $view_container.offset().top,
            modal_height = this.$element.height(),
            page_offset = getPageYOffset(),
            new_modal_offset = page_offset - view_offset;
        if (window_height > modal_height) {
            return;
        }
        new_modal_offset -= modal_height + (margin * 2) - window_height;
        this.setOffsetWithAnimation(new_modal_offset);
    };
    $overlay.click(function() {
        currently_open_modal && currently_open_modal.close();
    });
    $('body').keyup(function(e) {
        currently_open_modal && e.which === 27 && currently_open_modal.close();
    });
    $window.scroll(centerCurrentlyOpenModal);
    $window.resize(_.debounce(centerCurrentlyOpenModal, 50));

    function centerCurrentlyOpenModal() {
        if (currently_open_modal && currently_open_modal.isOpen()) {
            currently_open_modal.updatePosition();
        }
    }
}(window, Mobi2Go, jQuery, this._ || exports._));
(function(window, Mobi2Go, $, _) {
    var $window = $(window),
        $view_container = $('#m2g-view'),
        $alert = $('[data-view="alert"]'),
        template = _.template($alert.find('[data-template]').html()),
        default_options = {
            title: 'Achtung!',
            body: '',
            footer: true,
            primary_button: 'OK',
            onPrimaryButtonClick: null,
            secondary_button: null,
            onSecondaryButtonClick: null,
            close_button: true,
            onClose: null,
            temp: false,
            temp_duration: 5600,
            show_progress_bar: false,
            el: null,
            placement: 'left',
            highlight_element: false
        },
        options = default_options,
        close_timeout,
        is_open = false,
        css_class = [
            'm2g-modal',
            'm2g-modal--small',
            'm2g-modal--alert',
            'm2g-modal--alert--closed'
        ].join(' '),
        UI = Mobi2Go.UI;
    $alert.delegate('[data-primary-button]', 'click', function() {
        close();
        if (_.isFunction(options.onPrimaryButtonClick)) {
            options.onPrimaryButtonClick();
        }
    });
    $alert.delegate('[data-secondary-button]', 'click', function() {
        close();
        if (_.isFunction(options.onSecondaryButtonClick)) {
            options.onSecondaryButtonClick();
        }
    });
    $alert.delegate('[data-close]', 'click', close);
    Mobi2Go.UI.bind({
        'modalOpen': close,
        'closeAlert': close,
        'pageLeave': function() {
            if (UI.page && !UI.page.isFrozen()) {
                close();
            }
        }
    });
    Mobi2Go.UI.alert = function(new_options) {
        if (is_open && _.isFunction(options.onClose)) {
            options.onClose();
        }
        options = _.extend({}, default_options, new_options);
        reset();
        render();
        scheduleClose();
        updatePosition();
        highlightElement();
        open();
    };
    Mobi2Go.UI.closeAlert = close;

    function render() {
        var html = template(options);
        $alert.html(html);
        if (options.show_progress_bar) {
            startProgressBarAnimation();
        }
        $alert.attr('data-title', options.title);
    }

    function scheduleClose() {
        clearTimeout(close_timeout);
        if (options.temp) {
            close_timeout = setTimeout(close, options.temp_duration);
        }
    }

    function reset() {
        $alert.attr({
            'style': '',
            'class': css_class
        });
    }

    function open() {
        $alert[0].offsetWidth;
        $alert.addClass('m2g-modal--alert--open').removeClass('m2g-modal--alert--closed');
        UI.trigger('alertOpen');
        bindUpdatePositionOnScroll();
        is_open = true;
    }

    function highlightElement() {
        if (options.highlight_element && options.el) {
            UI.helpers.highlightElement($(options.el));
        }
    }

    function close() {
        if (!is_open) {
            return;
        }
        is_open = false;
        $alert[0].offsetWidth;
        $alert.addClass('m2g-modal--alert--closed').removeClass('m2g-modal--alert--open');
        unbindUpdatePositionOnScroll();
        var onClose = options.onClose;
        options.onClose = null;
        if (_.isFunction(onClose)) {
            onClose();
        }
    }

    function updatePosition() {
        options.el ? positionToElement() : positionCenter();
    }

    function positionCenter() {
        var window_height = $window.height(),
            view_height = $view_container.height(),
            view_offset = $view_container.offset().top,
            modal_height = $alert.height(),
            offset = 0,
            max_offset = view_height - modal_height;
        if (!Mobi2Go.app.isMobileUI()) {
            offset = ($window.scrollTop() - view_offset);
        }
        if (window_height > modal_height) {
            offset += (window_height - modal_height) / 2;
        }
        if (offset < 0) offset = 0;
        if (offset > max_offset) offset = max_offset;
        setPosition({
            top: offset
        });
    }

    function positionToElement() {
        if (!options.el) return;
        var $el = $(options.el),
            position = $el.position(),
            el_width = $el[0].offsetWidth,
            el_height = $el[0].offsetHeight,
            alert_height,
            alert_width;
        alert_height = $alert[0].offsetHeight,
            alert_width = $alert[0].offsetWidth;
        switch (options.placement) {
            case 'left':
                position.left -= alert_width;
                position.top -= (alert_height / 2) - (el_height / 2);
                break;
            case 'top':
                position.left -= (alert_width - el_width) / 2;
                position.top -= alert_height;
                break;
            case 'bottom':
                position.left -= (alert_width - el_width) / 2;
                position.top += el_height;
                break;
        }
        $alert.attr('class', [
            'm2g-modal',
            'm2g-modal--small',
            'm2g-modal--alert',
            'm2g-modal--alert--open',
            ' m2g-modal--positioned',
            'm2g-modal--positioned--' + options.placement
        ].join(' '));
        setPosition(position);
    }

    function startProgressBarAnimation() {
        _.defer(function() {
            $alert.find('[data-progress-bar]').css('width', '100%');
        });
    }

    function onScrollUpdatePosition() {
        window.requestAnimationFrame(updatePosition);
    }

    function bindUpdatePositionOnScroll() {
        $window.bind('scroll', onScrollUpdatePosition);
    }

    function unbindUpdatePositionOnScroll() {
        $window.unbind('scroll', onScrollUpdatePosition);
    }

    function setPosition(position) {
        $alert.css(position);
    }
}(window, Mobi2Go, jQuery, this._ || exports._));
(function(Mobi2Go, $, _) {
    'use strict';
    var UI = Mobi2Go.UI || {},
        instance = 0;
    UI.ScrollSpy = function($content) {
        this.$content = $content;
        this.targets = [];
        this.current_target = null;
        Mobi2Go.app.mixinEvents('UIScrollSpy#' + (instance++), this);
        findContentTargets.call(this);
        addContentFiller.call(this);
        updateTarget.call(this);
        this.$content.bind('scroll', _.bind(updateTarget, this));
    };
    UI.ScrollSpy.prototype.scrollTo = function(target, callback) {
        var offset,
            i;
        for (i in this.targets)
            if (this.targets.hasOwnProperty(i) && this.targets[i].id == target) {
                offset = this.targets[i].offset + 1;
            }
        if (offset === undefined) return;
        this.$content.animate({
            scrollTop: offset
        }, 100, callback);
    }

    function findContentTargets() {
        var that = this;
        this.$content[0].scrollTop = 0;
        this.$content.find('[data-scrollspy-target]').each(function() {
            var $this = $(this);
            that.targets.push({
                id: $this.data('scrollspy-target'),
                offset: $this.position().top
            });
        });
        this.targets.push({
            id: 'end',
            offset: this.$content[0].scrollHeight
        });
        this.targets.sort(function(a, b) {
            return a.offset - b.offset;
        });
    }

    function updateTarget() {
        var scroll_top = this.$content[0].scrollTop,
            i,
            target,
            prev = this.targets[0];
        for (i in this.targets)
            if (this.targets.hasOwnProperty(i)) {
                target = this.targets[i];
                if (scroll_top >= prev.offset && scroll_top < target.offset && this.current_target !== prev.id) {
                    this.trigger('updateTarget', this.current_target = prev.id);
                    return;
                }
                prev = target;
            }
    }

    function addContentFiller() {
        var filler_height = this.$content.height() - (this.$content[0].scrollHeight -
            this.targets[this.targets.length - 2].offset) + 1;
        if (filler_height > 0) {
            this.$content.append('<div class="m2g-scrollspy-content-filler"' + ' style="height:' + filler_height + 'px"><div>');
        }
    }
}(Mobi2Go, jQuery, this._ || exports._));;
(function(window, document, $) {
    var isInputSupported = 'placeholder' in document.createElement('input'),
        isTextareaSupported = 'placeholder' in document.createElement('textarea'),
        prototype = $.fn,
        valHooks = $.valHooks,
        hooks,
        placeholder;
    if (isInputSupported && isTextareaSupported) {
        placeholder = prototype.placeholder = function() {
            return this;
        };
        placeholder.input = placeholder.textarea = true;
    } else {
        placeholder = prototype.placeholder = function() {
            var $this = this;
            $this.filter((isInputSupported ? 'textarea' : ':input') + '[placeholder]').not('.placeholder').bind({
                'focus.placeholder': clearPlaceholder,
                'blur.placeholder': setPlaceholder
            }).data('placeholder-enabled', true).trigger('blur.placeholder');
            return $this;
        };
        placeholder.input = isInputSupported;
        placeholder.textarea = isTextareaSupported;
        hooks = {
            'get': function(element) {
                var $element = $(element);
                return $element.data('placeholder-enabled') && $element.hasClass('placeholder') ? '' : element.value;
            },
            'set': function(element, value) {
                var $element = $(element);
                if (!$element.data('placeholder-enabled')) {
                    return element.value = value;
                }
                if (value == '') {
                    element.value = value;
                    if (element != document.activeElement) {
                        setPlaceholder.call(element);
                    }
                } else if ($element.hasClass('placeholder')) {
                    clearPlaceholder.call(element, true, value) || (element.value = value);
                } else {
                    element.value = value;
                }
                return $element;
            }
        };
        isInputSupported || (valHooks.input = hooks);
        isTextareaSupported || (valHooks.textarea = hooks);
        $(function() {
            $(document).delegate('form', 'submit.placeholder', function() {
                var $inputs = $('.placeholder', this).each(clearPlaceholder);
                setTimeout(function() {
                    $inputs.each(setPlaceholder);
                }, 10);
            });
        });
        $(window).bind('beforeunload.placeholder', function() {
            $('.placeholder').each(function() {
                this.value = '';
            });
        });
    }

    function args(elem) {
        var newAttrs = {},
            rinlinejQuery = /^jQuery\d+$/;
        $.each(elem.attributes, function(i, attr) {
            if (attr.specified && !rinlinejQuery.test(attr.name)) {
                newAttrs[attr.name] = attr.value;
            }
        });
        return newAttrs;
    }

    function clearPlaceholder(event, value) {
        var input = this,
            $input = $(input);
        if (input.value == $input.attr('placeholder') && $input.hasClass('placeholder')) {
            if ($input.data('placeholder-password')) {
                $input = $input.hide().next().show().attr('id', $input.removeAttr('id').data('placeholder-id'));
                if (event === true) {
                    return $input[0].value = value;
                }
                $input.focus();
            } else {
                input.value = '';
                $input.removeClass('placeholder');
                input == document.activeElement && input.select();
            }
        }
    }

    function setPlaceholder() {
        var $replacement,
            input = this,
            $input = $(input),
            $origInput = $input,
            id = this.id;
        if (input.value == '') {
            if (input.type == 'password') {
                if (!$input.data('placeholder-textinput')) {
                    $replacement = $('<input type="text">').attr({
                        'class': $input.attr('class'),
                        'placeholder': $input.attr('placeholder'),
                        'value': $input.val()
                    });
                    $replacement.removeAttr('name').data({
                        'placeholder-password': true,
                        'placeholder-id': id
                    }).bind('focus.placeholder', clearPlaceholder);
                    $input.data({
                        'placeholder-textinput': $replacement,
                        'placeholder-id': id
                    }).before($replacement);
                }
                $input = $input.removeAttr('id').hide().prev().attr('id', id).show();
            }
            $input.addClass('placeholder');
            $input[0].value = $input.attr('placeholder');
        } else {
            $input.removeClass('placeholder');
        }
    }
}(this, document, jQuery));
(function() {
    var $,
        cardFromNumber,
        cardFromType,
        cards,
        defaultFormat,
        formatBackCardNumber,
        formatBackExpiry,
        formatCardNumber,
        formatExpiry,
        formatForwardExpiry,
        formatForwardSlashAndSpace,
        hasTextSelected,
        luhnCheck,
        reFormatCardNumber,
        reFormatExpiry,
        restrictCVC,
        restrictCardNumber,
        restrictExpiry,
        restrictNumeric,
        setCardType,
        __slice = [].slice,
        __indexOf = [].indexOf || function(item) {
            for (var i = 0, l = this.length; i < l; i++) {
                if (i in this && this[i] === item) return i;
            }
            return -1;
        };
    $ = jQuery;
    $.payment = {};
    $.payment.fn = {};
    $.fn.payment = function() {
        var args,
            method;
        method = arguments[0],
            args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
        return $.payment.fn[method].apply(this, args);
    };
    defaultFormat = /(\d{1,4})/g;
    cards = [{
        type: 'visaelectron',
        pattern: /^4(026|17500|405|508|844|91[37])/,
        format: defaultFormat,
        length: [
            16
        ],
        cvcLength: [
            3
        ],
        luhn: true
    }, {
        type: 'maestro',
        pattern: /^(5(018|0[23]|[68])|6(39|7))/,
        format: defaultFormat,
        length: [
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19
        ],
        cvcLength: [
            3
        ],
        luhn: true
    }, {
        type: 'forbrugsforeningen',
        pattern: /^600/,
        format: defaultFormat,
        length: [
            16
        ],
        cvcLength: [
            3
        ],
        luhn: true
    }, {
        type: 'dankort',
        pattern: /^5019/,
        format: defaultFormat,
        length: [
            16
        ],
        cvcLength: [
            3
        ],
        luhn: true
    }, {
        type: 'visa',
        pattern: /^4/,
        format: defaultFormat,
        length: [
            13,
            16
        ],
        cvcLength: [
            3
        ],
        luhn: true
    }, {
        type: 'mastercard',
        pattern: /^5[0-5]/,
        format: defaultFormat,
        length: [
            16
        ],
        cvcLength: [
            3
        ],
        luhn: true
    }, {
        type: 'amex',
        pattern: /^3[47]/,
        format: /(\d{1,4})(\d{1,6})?(\d{1,5})?/,
        length: [
            15
        ],
        cvcLength: [
            3,
            4
        ],
        luhn: true
    }, {
        type: 'dinersclub',
        pattern: /^3[0689]/,
        format: defaultFormat,
        length: [
            14
        ],
        cvcLength: [
            3
        ],
        luhn: true
    }, {
        type: 'discover',
        pattern: /^6([045]|22)/,
        format: defaultFormat,
        length: [
            16
        ],
        cvcLength: [
            3
        ],
        luhn: true
    }, {
        type: 'unionpay',
        pattern: /^(62|88)/,
        format: defaultFormat,
        length: [
            16,
            17,
            18,
            19
        ],
        cvcLength: [
            3
        ],
        luhn: false
    }, {
        type: 'jcb',
        pattern: /^35/,
        format: defaultFormat,
        length: [
            16
        ],
        cvcLength: [
            3
        ],
        luhn: true
    }];
    cardFromNumber = function(num) {
        var card,
            _i,
            _len;
        num = (num + '').replace(/\D/g, '');
        for (_i = 0, _len = cards.length; _i < _len; _i++) {
            card = cards[_i];
            if (card.pattern.test(num)) {
                return card;
            }
        }
    };
    cardFromType = function(type) {
        var card,
            _i,
            _len;
        for (_i = 0, _len = cards.length; _i < _len; _i++) {
            card = cards[_i];
            if (card.type === type) {
                return card;
            }
        }
    };
    luhnCheck = function(num) {
        var digit,
            digits,
            odd,
            sum,
            _i,
            _len;
        odd = true;
        sum = 0;
        digits = (num + '').split('').reverse();
        for (_i = 0, _len = digits.length; _i < _len; _i++) {
            digit = digits[_i];
            digit = parseInt(digit, 10);
            if ((odd = !odd)) {
                digit *= 2;
            }
            if (digit > 9) {
                digit -= 9;
            }
            sum += digit;
        }
        return sum % 10 === 0;
    };
    hasTextSelected = function($target) {
        var _ref;
        if (($target.prop('selectionStart') != null) && $target.prop('selectionStart') !== $target.prop('selectionEnd')) {
            return true;
        }
        if (typeof document !== 'undefined' && document !== null ? (_ref = document.selection) != null ? typeof _ref.createRange === 'function' ? _ref.createRange().text : void 0 : void 0 : void 0) {
            return true;
        }
        return false;
    };
    reFormatCardNumber = function(e) {
        return setTimeout(function() {
            var $target,
                value;
            $target = $(e.currentTarget);
            value = $target.val();
            value = $.payment.formatCardNumber(value);
            return $target.val(value);
        });
    };
    formatCardNumber = function(e) {
        var $target,
            card,
            digit,
            length,
            re,
            upperLength,
            value;
        digit = String.fromCharCode(e.which);
        if (!/^\d+$/.test(digit)) {
            return;
        }
        $target = $(e.currentTarget);
        value = $target.val();
        card = cardFromNumber(value + digit);
        length = (value.replace(/\D/g, '') + digit).length;
        upperLength = 16;
        if (card) {
            upperLength = card.length[card.length.length - 1];
        }
        if (length >= upperLength) {
            return;
        }
        if (($target.prop('selectionStart') != null) && $target.prop('selectionStart') !== value.length) {
            return;
        }
        if (card && card.type === 'amex') {
            re = /^(\d{4}|\d{4}\s\d{6})$/;
        } else {
            re = /(?:^|\s)(\d{4})$/;
        }
        if (re.test(value)) {
            e.preventDefault();
            return setTimeout(function() {
                return $target.val(value + ' ' + digit);
            });
        } else if (re.test(value + digit)) {
            e.preventDefault();
            return setTimeout(function() {
                return $target.val(value + digit + ' ');
            });
        }
    };
    formatBackCardNumber = function(e) {
        var $target,
            value;
        $target = $(e.currentTarget);
        value = $target.val();
        if (e.which !== 8) {
            return;
        }
        if (($target.prop('selectionStart') != null) && $target.prop('selectionStart') !== value.length) {
            return;
        }
        if (/\d\s$/.test(value)) {
            e.preventDefault();
            return setTimeout(function() {
                return $target.val(value.replace(/\d\s$/, ''));
            });
        } else if (/\s\d?$/.test(value)) {
            e.preventDefault();
            return setTimeout(function() {
                return $target.val(value.replace(/\s\d?$/, ''));
            });
        }
    };
    reFormatExpiry = function(e) {
        return setTimeout(function() {
            var $target,
                value;
            $target = $(e.currentTarget);
            value = $target.val();
            value = $.payment.formatExpiry(value);
            return $target.val(value);
        });
    };
    formatExpiry = function(e) {
        var $target,
            digit,
            val;
        digit = String.fromCharCode(e.which);
        if (!/^\d+$/.test(digit)) {
            return;
        }
        $target = $(e.currentTarget);
        val = $target.val() + digit;
        if (/^\d$/.test(val) && (val !== '0' && val !== '1')) {
            e.preventDefault();
            return setTimeout(function() {
                return $target.val('0' + val + ' / ');
            });
        } else if (/^\d\d$/.test(val)) {
            e.preventDefault();
            return setTimeout(function() {
                return $target.val('' + val + ' / ');
            });
        }
    };
    formatForwardExpiry = function(e) {
        var $target,
            digit,
            val;
        digit = String.fromCharCode(e.which);
        if (!/^\d+$/.test(digit)) {
            return;
        }
        $target = $(e.currentTarget);
        val = $target.val();
        if (/^\d\d$/.test(val)) {
            return $target.val('' + val + ' / ');
        }
    };
    formatForwardSlashAndSpace = function(e) {
        var $target,
            val,
            which;
        which = String.fromCharCode(e.which);
        if (!(which === '/' || which === ' ')) {
            return;
        }
        $target = $(e.currentTarget);
        val = $target.val();
        if (/^\d$/.test(val) && val !== '0') {
            return $target.val('0' + val + ' / ');
        }
    };
    formatBackExpiry = function(e) {
        var $target,
            value;
        $target = $(e.currentTarget);
        value = $target.val();
        if (e.which !== 8) {
            return;
        }
        if (($target.prop('selectionStart') != null) && $target.prop('selectionStart') !== value.length) {
            return;
        }
        if (/\s\/\s\d?$/.test(value)) {
            e.preventDefault();
            return setTimeout(function() {
                return $target.val(value.replace(/\s\/\s\d?$/, ''));
            });
        }
    };
    restrictNumeric = function(e) {
        var input;
        if (e.metaKey || e.ctrlKey) {
            return true;
        }
        if (e.which === 32) {
            return false;
        }
        if (e.which === 0) {
            return true;
        }
        if (e.which < 33) {
            return true;
        }
        input = String.fromCharCode(e.which);
        return !!/[\d\s]/.test(input);
    };
    restrictCardNumber = function(e) {
        var $target,
            card,
            digit,
            value;
        $target = $(e.currentTarget);
        digit = String.fromCharCode(e.which);
        if (!/^\d+$/.test(digit)) {
            return;
        }
        if (hasTextSelected($target)) {
            return;
        }
        value = ($target.val() + digit).replace(/\D/g, '');
        card = cardFromNumber(value);
        if (card) {
            return value.length <= card.length[card.length.length - 1];
        } else {
            return value.length <= 16;
        }
    };
    restrictExpiry = function(e) {
        var $target,
            digit,
            value;
        $target = $(e.currentTarget);
        digit = String.fromCharCode(e.which);
        if (!/^\d+$/.test(digit)) {
            return;
        }
        if (hasTextSelected($target)) {
            return;
        }
        value = $target.val() + digit;
        value = value.replace(/\D/g, '');
        if (value.length > 6) {
            return false;
        }
    };
    restrictCVC = function(e) {
        var $target,
            digit,
            val;
        $target = $(e.currentTarget);
        digit = String.fromCharCode(e.which);
        if (!/^\d+$/.test(digit)) {
            return;
        }
        if (hasTextSelected($target)) {
            return;
        }
        val = $target.val() + digit;
        return val.length <= 4;
    };
    setCardType = function(e) {
        var $target,
            allTypes,
            card,
            cardType,
            val;
        $target = $(e.currentTarget);
        val = $target.val();
        cardType = $.payment.cardType(val) || 'unknown';
        if (!$target.hasClass(cardType)) {
            allTypes = (function() {
                var _i,
                    _len,
                    _results;
                _results = [];
                for (_i = 0, _len = cards.length; _i < _len; _i++) {
                    card = cards[_i];
                    _results.push(card.type);
                }
                return _results;
            })();
            $target.removeClass('unknown');
            $target.removeClass(allTypes.join(' '));
            $target.addClass(cardType);
            $target.toggleClass('identified', cardType !== 'unknown');
            return $target.trigger('payment.cardType', cardType);
        }
    };
    $.payment.fn.formatCardCVC = function() {
        this.payment('restrictNumeric');
        this.on('keypress', restrictCVC);
        return this;
    };
    $.payment.fn.formatCardExpiry = function() {
        this.payment('restrictNumeric');
        this.on('keypress', restrictExpiry);
        this.on('keypress', formatExpiry);
        this.on('keypress', formatForwardSlashAndSpace);
        this.on('keypress', formatForwardExpiry);
        this.on('keydown', formatBackExpiry);
        this.on('change', reFormatExpiry);
        this.on('input', reFormatExpiry);
        return this;
    };
    $.payment.fn.formatCardNumber = function() {
        this.payment('restrictNumeric');
        this.on('keypress', restrictCardNumber);
        this.on('keypress', formatCardNumber);
        this.on('keydown', formatBackCardNumber);
        this.on('keyup', setCardType);
        this.on('paste', reFormatCardNumber);
        this.on('change', reFormatCardNumber);
        this.on('input', reFormatCardNumber);
        this.on('input', setCardType);
        return this;
    };
    $.payment.fn.restrictNumeric = function() {
        this.on('keypress', restrictNumeric);
        return this;
    };
    $.payment.fn.cardExpiryVal = function() {
        return $.payment.cardExpiryVal($(this).val());
    };
    $.payment.cardExpiryVal = function(value) {
        var month,
            prefix,
            year,
            _ref;
        value = value.replace(/\s/g, '');
        _ref = value.split('/', 2),
            month = _ref[0],
            year = _ref[1];
        if ((year != null ? year.length : void 0) === 2 && /^\d+$/.test(year)) {
            prefix = (new Date).getFullYear();
            prefix = prefix.toString().slice(0, 2);
            year = prefix + year;
        }
        month = parseInt(month, 10);
        year = parseInt(year, 10);
        return {
            month: month,
            year: year
        };
    };
    $.payment.validateCardNumber = function(num) {
        var card,
            _ref;
        num = (num + '').replace(/\s+|-/g, '');
        if (!/^\d+$/.test(num)) {
            return false;
        }
        card = cardFromNumber(num);
        if (!card) {
            return false;
        }
        return (_ref = num.length, __indexOf.call(card.length, _ref) >= 0) && (card.luhn === false || luhnCheck(num));
    };
    $.payment.validateCardExpiry = function(month, year) {
        var currentTime,
            expiry,
            _ref;
        if (typeof month === 'object' && 'month' in month) {
            _ref = month,
                month = _ref.month,
                year = _ref.year;
        }
        if (!(month && year)) {
            return false;
        }
        month = $.trim(month);
        year = $.trim(year);
        if (!/^\d+$/.test(month)) {
            return false;
        }
        if (!/^\d+$/.test(year)) {
            return false;
        }
        if (!((1 <= month && month <= 12))) {
            return false;
        }
        if (year.length === 2) {
            if (year < 70) {
                year = '20' + year;
            } else {
                year = '19' + year;
            }
        }
        if (year.length !== 4) {
            return false;
        }
        expiry = new Date(year, month);
        currentTime = new Date;
        expiry.setMonth(expiry.getMonth() - 1);
        expiry.setMonth(expiry.getMonth() + 1, 1);
        return expiry > currentTime;
    };
    $.payment.validateCardCVC = function(cvc, type) {
        var card,
            _ref;
        cvc = $.trim(cvc);
        if (!/^\d+$/.test(cvc)) {
            return false;
        }
        card = cardFromType(type);
        if (card != null) {
            return _ref = cvc.length,
                __indexOf.call(card.cvcLength, _ref) >= 0;
        } else {
            return cvc.length >= 3 && cvc.length <= 4;
        }
    };
    $.payment.cardType = function(num) {
        var _ref;
        if (!num) {
            return null;
        }
        return ((_ref = cardFromNumber(num)) != null ? _ref.type : void 0) || null;
    };
    $.payment.formatCardNumber = function(num) {
        var card,
            groups,
            upperLength,
            _ref;
        card = cardFromNumber(num);
        if (!card) {
            return num;
        }
        upperLength = card.length[card.length.length - 1];
        num = num.replace(/\D/g, '');
        num = num.slice(0, upperLength);
        if (card.format.global) {
            return (_ref = num.match(card.format)) != null ? _ref.join(' ') : void 0;
        } else {
            groups = card.format.exec(num);
            if (groups == null) {
                return;
            }
            groups.shift();
            groups = $.grep(groups, function(n) {
                return n;
            });
            return groups.join(' ');
        }
    };
    $.payment.formatExpiry = function(expiry) {
        var mon,
            parts,
            sep,
            year;
        parts = expiry.match(/^\D*(\d{1,2})(\D+)?(\d{1,4})?/);
        if (!parts) {
            return '';
        }
        mon = parts[1] || '';
        sep = parts[2] || '';
        year = parts[3] || '';
        if (year.length > 0 || (sep.length > 0 && !(/\ \/?\ ?/.test(sep)))) {
            sep = ' / ';
        }
        if (mon.length === 1 && (mon !== '0' && mon !== '1')) {
            mon = '0' + mon;
            sep = ' / ';
        }
        return mon + sep + year;
    };
}).call(this);;
(function() {
    'use strict';

    function FastClick(layer, options) {
        var oldOnClick;
        options = options || {};
        this.trackingClick = false;
        this.trackingClickStart = 0;
        this.targetElement = null;
        this.touchStartX = 0;
        this.touchStartY = 0;
        this.lastTouchIdentifier = 0;
        this.touchBoundary = options.touchBoundary || 10;
        this.layer = layer;
        this.tapDelay = options.tapDelay || 200;
        this.tapTimeout = options.tapTimeout || 700;
        if (FastClick.notNeeded(layer)) {
            return;
        }

        function bind(method, context) {
            return function() {
                return method.apply(context, arguments);
            };
        }
        var methods = [
            'onMouse',
            'onClick',
            'onTouchStart',
            'onTouchMove',
            'onTouchEnd',
            'onTouchCancel'
        ];
        var context = this;
        for (var i = 0, l = methods.length; i < l; i++) {
            context[methods[i]] = bind(context[methods[i]], context);
        }
        if (deviceIsAndroid) {
            layer.addEventListener('mouseover', this.onMouse, true);
            layer.addEventListener('mousedown', this.onMouse, true);
            layer.addEventListener('mouseup', this.onMouse, true);
        }
        layer.addEventListener('click', this.onClick, true);
        layer.addEventListener('touchstart', this.onTouchStart, false);
        layer.addEventListener('touchmove', this.onTouchMove, false);
        layer.addEventListener('touchend', this.onTouchEnd, false);
        layer.addEventListener('touchcancel', this.onTouchCancel, false);
        if (!Event.prototype.stopImmediatePropagation) {
            layer.removeEventListener = function(type, callback, capture) {
                var rmv = Node.prototype.removeEventListener;
                if (type === 'click') {
                    rmv.call(layer, type, callback.hijacked || callback, capture);
                } else {
                    rmv.call(layer, type, callback, capture);
                }
            };
            layer.addEventListener = function(type, callback, capture) {
                var adv = Node.prototype.addEventListener;
                if (type === 'click') {
                    adv.call(layer, type, callback.hijacked || (callback.hijacked = function(event) {
                        if (!event.propagationStopped) {
                            callback(event);
                        }
                    }), capture);
                } else {
                    adv.call(layer, type, callback, capture);
                }
            };
        }
        if (typeof layer.onclick === 'function') {
            oldOnClick = layer.onclick;
            layer.addEventListener('click', function(event) {
                oldOnClick(event);
            }, false);
            layer.onclick = null;
        }
    }
    var deviceIsWindowsPhone = navigator.userAgent.indexOf('Windows Phone') >= 0;
    var deviceIsAndroid = navigator.userAgent.indexOf('Android') > 0 && !deviceIsWindowsPhone;
    var deviceIsIOS = /iP(ad|hone|od)/.test(navigator.userAgent) && !deviceIsWindowsPhone;
    var deviceIsIOS4 = deviceIsIOS && (/OS 4_\d(_\d)?/).test(navigator.userAgent);
    var deviceIsIOSWithBadTarget = deviceIsIOS && (/OS [6-7]_\d/).test(navigator.userAgent);
    var deviceIsBlackBerry10 = navigator.userAgent.indexOf('BB10') > 0;
    FastClick.prototype.needsClick = function(target) {
        switch (target.nodeName.toLowerCase()) {
            case 'button':
            case 'select':
            case 'textarea':
                if (target.disabled) {
                    return true;
                }
                break;
            case 'input':
                if ((deviceIsIOS && target.type === 'file') || target.disabled) {
                    return true;
                }
                break;
            case 'label':
            case 'iframe':
            case 'video':
                return true;
        }
        return (/\bneedsclick\b/).test(target.className);
    };
    FastClick.prototype.needsFocus = function(target) {
        switch (target.nodeName.toLowerCase()) {
            case 'textarea':
                return true;
            case 'select':
                return !deviceIsAndroid;
            case 'input':
                switch (target.type) {
                    case 'button':
                    case 'checkbox':
                    case 'file':
                    case 'image':
                    case 'radio':
                    case 'submit':
                        return false;
                }
                return !target.disabled && !target.readOnly;
            default:
                return (/\bneedsfocus\b/).test(target.className);
        }
    };
    FastClick.prototype.sendClick = function(targetElement, event) {
        var clickEvent,
            touch;
        if (document.activeElement && document.activeElement !== targetElement) {
            document.activeElement.blur();
        }
        touch = event.changedTouches[0];
        clickEvent = document.createEvent('MouseEvents');
        clickEvent.initMouseEvent(this.determineEventType(targetElement), true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null);
        clickEvent.forwardedTouchEvent = true;
        targetElement.dispatchEvent(clickEvent);
    };
    FastClick.prototype.determineEventType = function(targetElement) {
        if (deviceIsAndroid && targetElement.tagName.toLowerCase() === 'select') {
            return 'mousedown';
        }
        return 'click';
    };
    FastClick.prototype.focus = function(targetElement) {
        var length;
        if (deviceIsIOS && targetElement.setSelectionRange && targetElement.type.indexOf('date') !== 0 && targetElement.type !== 'time' && targetElement.type !== 'month') {
            length = targetElement.value.length;
            targetElement.setSelectionRange(length, length);
        } else {
            targetElement.focus();
        }
    };
    FastClick.prototype.updateScrollParent = function(targetElement) {
        var scrollParent,
            parentElement;
        scrollParent = targetElement.fastClickScrollParent;
        if (!scrollParent || !scrollParent.contains(targetElement)) {
            parentElement = targetElement;
            do {
                if (parentElement.scrollHeight > parentElement.offsetHeight) {
                    scrollParent = parentElement;
                    targetElement.fastClickScrollParent = parentElement;
                    break;
                }
                parentElement = parentElement.parentElement;
            } while (parentElement);
        }
        if (scrollParent) {
            scrollParent.fastClickLastScrollTop = scrollParent.scrollTop;
        }
    };
    FastClick.prototype.getTargetElementFromEventTarget = function(eventTarget) {
        if (eventTarget.nodeType === Node.TEXT_NODE) {
            return eventTarget.parentNode;
        }
        return eventTarget;
    };
    FastClick.prototype.onTouchStart = function(event) {
        var targetElement,
            touch,
            selection;
        if (event.targetTouches.length > 1) {
            return true;
        }
        targetElement = this.getTargetElementFromEventTarget(event.target);
        touch = event.targetTouches[0];
        if (deviceIsIOS) {
            selection = window.getSelection();
            if (selection.rangeCount && !selection.isCollapsed) {
                return true;
            }
            if (!deviceIsIOS4) {
                if (touch.identifier && touch.identifier === this.lastTouchIdentifier) {
                    event.preventDefault();
                    return false;
                }
                this.lastTouchIdentifier = touch.identifier;
                this.updateScrollParent(targetElement);
            }
        }
        this.trackingClick = true;
        this.trackingClickStart = event.timeStamp;
        this.targetElement = targetElement;
        this.touchStartX = touch.pageX;
        this.touchStartY = touch.pageY;
        if ((event.timeStamp - this.lastClickTime) < this.tapDelay) {
            event.preventDefault();
        }
        return true;
    };
    FastClick.prototype.touchHasMoved = function(event) {
        var touch = event.changedTouches[0],
            boundary = this.touchBoundary;
        if (Math.abs(touch.pageX - this.touchStartX) > boundary || Math.abs(touch.pageY - this.touchStartY) > boundary) {
            return true;
        }
        return false;
    };
    FastClick.prototype.onTouchMove = function(event) {
        if (!this.trackingClick) {
            return true;
        }
        if (this.targetElement !== this.getTargetElementFromEventTarget(event.target) || this.touchHasMoved(event)) {
            this.trackingClick = false;
            this.targetElement = null;
        }
        return true;
    };
    FastClick.prototype.findControl = function(labelElement) {
        if (labelElement.control !== undefined) {
            return labelElement.control;
        }
        if (labelElement.htmlFor) {
            return document.getElementById(labelElement.htmlFor);
        }
        return labelElement.querySelector('button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea');
    };
    FastClick.prototype.onTouchEnd = function(event) {
        var forElement,
            trackingClickStart,
            targetTagName,
            scrollParent,
            touch,
            targetElement = this.targetElement;
        if (!this.trackingClick) {
            return true;
        }
        if ((event.timeStamp - this.lastClickTime) < this.tapDelay) {
            this.cancelNextClick = true;
            return true;
        }
        if ((event.timeStamp - this.trackingClickStart) > this.tapTimeout) {
            return true;
        }
        this.cancelNextClick = false;
        this.lastClickTime = event.timeStamp;
        trackingClickStart = this.trackingClickStart;
        this.trackingClick = false;
        this.trackingClickStart = 0;
        if (deviceIsIOSWithBadTarget) {
            touch = event.changedTouches[0];
            targetElement = document.elementFromPoint(touch.pageX - window.pageXOffset, touch.pageY - window.pageYOffset) || targetElement;
            targetElement.fastClickScrollParent = this.targetElement.fastClickScrollParent;
        }
        targetTagName = targetElement.tagName.toLowerCase();
        if (targetTagName === 'label') {
            forElement = this.findControl(targetElement);
            if (forElement) {
                this.focus(targetElement);
                if (deviceIsAndroid) {
                    return false;
                }
                targetElement = forElement;
            }
        } else if (this.needsFocus(targetElement)) {
            if ((event.timeStamp - trackingClickStart) > 100 || (deviceIsIOS && window.top !== window && targetTagName === 'input')) {
                this.targetElement = null;
                return false;
            }
            this.focus(targetElement);
            this.sendClick(targetElement, event);
            if (!deviceIsIOS || targetTagName !== 'select') {
                this.targetElement = null;
                event.preventDefault();
            }
            return false;
        }
        if (deviceIsIOS && !deviceIsIOS4) {
            scrollParent = targetElement.fastClickScrollParent;
            if (scrollParent && scrollParent.fastClickLastScrollTop !== scrollParent.scrollTop) {
                return true;
            }
        }
        if (!this.needsClick(targetElement)) {
            event.preventDefault();
            this.sendClick(targetElement, event);
        }
        return false;
    };
    FastClick.prototype.onTouchCancel = function() {
        this.trackingClick = false;
        this.targetElement = null;
    };
    FastClick.prototype.onMouse = function(event) {
        if (!this.targetElement) {
            return true;
        }
        if (event.forwardedTouchEvent) {
            return true;
        }
        if (!event.cancelable) {
            return true;
        }
        if (!this.needsClick(this.targetElement) || this.cancelNextClick) {
            if (event.stopImmediatePropagation) {
                event.stopImmediatePropagation();
            } else {
                event.propagationStopped = true;
            }
            event.stopPropagation();
            event.preventDefault();
            return false;
        }
        return true;
    };
    FastClick.prototype.onClick = function(event) {
        var permitted;
        if (this.trackingClick) {
            this.targetElement = null;
            this.trackingClick = false;
            return true;
        }
        if (event.target.type === 'submit' && event.detail === 0) {
            return true;
        }
        permitted = this.onMouse(event);
        if (!permitted) {
            this.targetElement = null;
        }
        return permitted;
    };
    FastClick.prototype.destroy = function() {
        var layer = this.layer;
        if (deviceIsAndroid) {
            layer.removeEventListener('mouseover', this.onMouse, true);
            layer.removeEventListener('mousedown', this.onMouse, true);
            layer.removeEventListener('mouseup', this.onMouse, true);
        }
        layer.removeEventListener('click', this.onClick, true);
        layer.removeEventListener('touchstart', this.onTouchStart, false);
        layer.removeEventListener('touchmove', this.onTouchMove, false);
        layer.removeEventListener('touchend', this.onTouchEnd, false);
        layer.removeEventListener('touchcancel', this.onTouchCancel, false);
    };
    FastClick.notNeeded = function(layer) {
        var metaViewport;
        var chromeVersion;
        var blackberryVersion;
        var firefoxVersion;
        if (typeof window.ontouchstart === 'undefined') {
            return true;
        }
        chromeVersion = +(/Chrome\/([0-9]+)/.exec(navigator.userAgent) || [,
            0
        ])[1];
        if (chromeVersion) {
            if (deviceIsAndroid) {
                metaViewport = document.querySelector('meta[name=viewport]');
                if (metaViewport) {
                    if (metaViewport.content.indexOf('user-scalable=no') !== -1) {
                        return true;
                    }
                    if (chromeVersion > 31 && document.documentElement.scrollWidth <= window.outerWidth) {
                        return true;
                    }
                }
            } else {
                return true;
            }
        }
        if (deviceIsBlackBerry10) {
            blackberryVersion = navigator.userAgent.match(/Version\/([0-9]*)\.([0-9]*)/);
            if (blackberryVersion[1] >= 10 && blackberryVersion[2] >= 3) {
                metaViewport = document.querySelector('meta[name=viewport]');
                if (metaViewport) {
                    if (metaViewport.content.indexOf('user-scalable=no') !== -1) {
                        return true;
                    }
                    if (document.documentElement.scrollWidth <= window.outerWidth) {
                        return true;
                    }
                }
            }
        }
        if (layer.style.msTouchAction === 'none' || layer.style.touchAction === 'manipulation') {
            return true;
        }
        firefoxVersion = +(/Firefox\/([0-9]+)/.exec(navigator.userAgent) || [,
            0
        ])[1];
        if (firefoxVersion >= 27) {
            metaViewport = document.querySelector('meta[name=viewport]');
            if (metaViewport && (metaViewport.content.indexOf('user-scalable=no') !== -1 || document.documentElement.scrollWidth <= window.outerWidth)) {
                return true;
            }
        }
        if (layer.style.touchAction === 'none' || layer.style.touchAction === 'manipulation') {
            return true;
        }
        return false;
    };
    FastClick.attach = function(layer, options) {
        return new FastClick(layer, options);
    };
    if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {
        define(function() {
            return FastClick;
        });
    } else if (typeof module !== 'undefined' && module.exports) {
        module.exports = FastClick.attach;
        module.exports.FastClick = FastClick;
    } else {
        window.FastClick = FastClick;
    }
}());
(function(Mobi2Go, $, _, document) {
    'use strict';
    if ('ontouchstart' in document.documentElement) {
        var reset_timeouts = {},
            DELAY = 60,
            RESET = 1000,
            events = {
                touchstart: function(e) {
                    reset_timeouts[e.currentTarget] = setTimeout(function() {
                        $(e.currentTarget).addClass('m2g-touching');
                        reset_timeouts[e.currentTarget] = setTimeout(function() {
                            events.touchend(e);
                        }, RESET);
                    }, DELAY);
                },
                touchend: function(e) {
                    clearTimeout(reset_timeouts[e.currentTarget]);
                    $(e.currentTarget).removeClass('m2g-touching');
                }
            };
        $('#m2g-view').delegate('.m2g-touchable', events).addClass('m2g-view--touch');
    }
}(Mobi2Go, jQuery, this._ || exports._, document));
(function(Mobi2Go, $, _) {
    'use strict';
    var UI = Mobi2Go.UI;
    Mobi2Go.bind('app', 'serverRequestError', function(xhr, message, endpoint) {
        var error_title = 'Service Unavailable',
            error_message = 'Sorry, it seems there was a problem completing a ' + ' request to the ordering system service',
            status = xhr.status || 0;
        switch (status) {
            case 500:
                error_title += ' - 500';
                break;
            case 401:
                error_title += ' - 401';
                break;
            case 400:
                error_title += ' - 400';
                break;
            case 404:
                error_title += ' - 404';
                break;
            case 0:
                handleTimeoutErrorAlert();
                return;
                break;
        }
        UI.alert({
            title: error_title,
            body: error_message,
            temp: true,
            duration: 15000
        });
    });
    var error_count = 0;

    function handleTimeoutErrorAlert() {
        error_count++;
        setTimeout(function() {
            error_count--;
        }, 25000);
        if (error_count > 3) {
            UI.alert({
                title: 'Service Unavailable - Timeout',
                body: 'Could not reach ordering system service, please ' + 'check your internet connecton',
                temp: true,
                duration: 10000
            });
        }
    }
}(Mobi2Go, jQuery, this._ || exports._));
(function(window, $, Mobi2Go, _) {
    var browser = Mobi2Go.UI.browser;
    Mobi2Go.UI.stickyAside = (function() {
        var $aside = $('[data-sticky-aside]'),
            $content = $('[data-sticky-content]'),
            $window = $(window),
            aside_offset,
            aside_original_offset,
            aside_max_offset,
            aside_height,
            content_height,
            window_height,
            previous_scroll,
            margin,
            should_animate = browser.ios || browser.android || browser.msie || browser.safari;
        Mobi2Go.Order.onReady(initiate);
        $window.resize(_.debounce(function() {
            window_height = $window.height() - Mobi2Go.UI.global_page_scroll_offset;
            updatePosition();
        }, 50));

        function initiate() {
            window_height = $window.height() - Mobi2Go.UI.global_page_scroll_offset;
            margin = 18 + Mobi2Go.UI.global_page_scroll_offset;
            setOffset(0);
            _.delay(updateDimensions, 300);
            setInterval(updateDimensions, 800);
            bindUpdatePositionToScrollEvent();
            updateAsideOriginalOffset();
        }

        function bindUpdatePositionToScrollEvent() {
            $window.scroll(function() {
                window.requestAnimationFrame(updatePosition);
            });
        }

        function updateDimensions() {
            aside_height = $aside.height();
            content_height = $content.height();
            aside_max_offset = content_height - aside_height;
            updatePosition();
        }
        var prev_scroll;

        function updatePosition() {
            var scroll = $window.scrollTop();
            var new_offset;
            var is_scrolling_down = scroll >= previous_scroll;
            if (scroll === prev_scroll) {
                return;
            }
            prev_scroll = scroll;
            previous_scroll = scroll;
            new_offset = scroll - aside_original_offset + margin;
            if (aside_height > window_height) {
                var offset_top = aside_offset + aside_original_offset - margin,
                    offset_bottom = offset_top + aside_height + (margin * 2),
                    viewport_top = scroll,
                    viewport_bottom = scroll + window_height;
                if (viewport_top >= offset_top && viewport_bottom <= offset_bottom) {
                    return;
                }
                if (new_offset && is_scrolling_down) {
                    new_offset -= aside_height + (margin * 2) - window_height;
                }
            }
            if (new_offset > aside_max_offset) {
                new_offset = aside_max_offset;
            }
            if (new_offset < 0) {
                new_offset = 0;
            }
            setOffset(new_offset);
        }
        if (should_animate) {
            var timeout = 150;
            if (browser.ios && browser.chrome) {
                timeout = 50;
            } else if (browser.android) {
                timeout = 50;
            } else if (browser.msie) {
                timeout = 50;
            }
            updatePosition = _.debounce(updatePosition, timeout);
        }

        function setOffset(y) {
            var style;
            if (should_animate) {
                var transition = 'all .25s ease-out';
                style = '-webkit-transition: ' + transition + ';' + 'transition: ' + transition + ';';
                if (browser.ios || browser.android) {
                    style += '-webkit-transform: translate3d(0,' + y + 'px,0);' + 'transform: translate3d(0,' + y + 'px,0);';
                } else {
                    style += 'margin-top: ' + y + 'px;';
                }
            } else {
                style = 'margin-top: ' + y + 'px; ';
            }
            $aside.attr('style', style);
            aside_offset = y;
            if (aside_offset === 0 && !should_animate) {
                updateAsideOriginalOffset();
            }
        }

        function updateAsideOriginalOffset() {
            aside_original_offset = $aside.offset().top;
        }
        return {
            $aside: $aside,
            $content: $content,
            setOffset: setOffset
        };
    }());
}(window, jQuery, Mobi2Go, this._ || exports._));
(function(Mobi2Go, $, _, window) {
    'use strict';
    var Order = Mobi2Go.Order;
    var Menu = Mobi2Go.Menu;
    var UI = Mobi2Go.UI;
    Mobi2Go.onReady(function() {
        if (Mobi2Go.app.isMobileUI()) {
            return;
        }
        $('[data-m2g-set-location]').click(function() {
            var location = $(this).attr('data-m2g-set-location');
            setLocationByNameAndScroll(location);
        });
        $('a[href="#set-location"]').click(function() {
            var location = $(this).attr('title');
            setLocationByNameAndScroll(location);
            return false;
        });

        function setLocationByNameAndScroll(name) {
            Order.setLocationByName(name);
            if (Order.getLocation()) {
                UI.helpers.scrollTo('[data-view="order-location"]', function() {
                    setTimeout(function() {
                        UI.alert({
                            title: 'Store set',
                            body: 'Ordering from  ' + Order.getLocation().name,
                            el: $('[data-view="order-location"] [data-order-location]'),
                            placement: 'left',
                            primary_button: null,
                            temp: true,
                            highlight_element: true
                        });
                    }, 250);
                }, true, -150);
            }
        }
        $('[data-m2g-add-product]').click(function() {
            var $this = $(this);
            var id = $this.attr('data-m2g-add-product');
            var active_menu = Menu.getActiveMenu();
            var product = active_menu.getProductByName(id) || active_menu.getProductByDisplayName(id) || active_menu.getProductById(id);
            if (product) {
                var modifiers_string = $this.attr('data-m2g-add-product-modifiers');
                var modifiers = [];
                if (modifiers_string) {
                    var modifiers = _.map(modifiers_string.split(','), function(modifier_string) {
                        return {
                            menu_modifier: {
                                name: $.trim(modifier_string)
                            },
                            selection_state: 'on'
                        };
                    });
                }
                product = product.createOrderProductInstance();
                if (modifiers.length) {
                    product.set({
                        modifiers: modifiers
                    });
                }
                Order.addProduct(product);
            }
        });
        $('a[href="#add-product"]').click(function() {
            var id = $(this).attr('title');
            var active_menu = Menu.getActiveMenu();
            var product = active_menu.getProductByName(id) || active_menu.getProductByDisplayName(id) || active_menu.getProductById(id);
            if (product) {
                Order.addProduct(product.createOrderProductInstance());
            }
            return false;
        });
        $('[data-m2g-open-product]').click(function() {
            var $this = $(this);
            var id = $this.attr('data-m2g-open-product');
            var active_menu = Menu.getActiveMenu();
            var product = active_menu.getProductByName(id) || active_menu.getProductByDisplayName(id) || active_menu.getProductById(id);
            if (product) {
                var modifiers_string = $this.attr('data-m2g-open-product-modifiers');
                var modifiers = [];
                if (modifiers_string) {
                    var modifiers = _.map(modifiers_string.split(','), function(modifier_string) {
                        return {
                            menu_modifier: {
                                name: $.trim(modifier_string)
                            },
                            selection_state: 'on'
                        };
                    });
                }
                product = product.createOrderProductInstance();
                if (modifiers.length) {
                    product.set({
                        modifiers: modifiers
                    });
                }
                UI.trigger('editProduct', product);
            }
        });
        $('a[href="#open-product"]').click(function() {
            var id = $(this).attr('title');
            var active_menu = Menu.getActiveMenu();
            var product = active_menu.getProductByName(id) || active_menu.getProductByDisplayName(id) || active_menu.getProductById(id);
            if (product) {
                UI.trigger('editProduct', product.createOrderProductInstance());
            }
            return false;
        });
        $('[data-m2g-show-menu-category]').click(function() {
            var $this = $(this);
            var id = $this.attr('data-m2g-show-menu-category');
            var selected_class = $this.attr('data-m2g-show-menu-category-selected-class');
            var categories = Menu.getActiveMenuCategories();
            var category = categories.getById(id) || categories.getByName(id);
            if (category) {
                UI.trigger('showCategory', category.id);
                UI.trigger('scrollToCategory', category.id, true);
                if (selected_class) {
                    $('[data-m2g-show-menu-category]').removeClass(selected_class);
                    $this.addClass(selected_class);
                }
            }
        });
        $('a[href="#show-menu-category"]').click(function() {
            var id = $(this).attr('title');
            var categories = Menu.getActiveMenuCategories();
            var category = categories.getById(id) || categories.getByName(id);
            if (category) {
                UI.trigger('showCategory', category.id);
                UI.trigger('scrollToCategory', category.id, true);
            }
            return false;
        });
        $('[data-m2g-set-voucher-code]').click(function() {
            var voucher_view = UI.views.order_voucher;
            var voucher_code = $(this).attr('data-m2g-set-voucher-code');
            Order.setVoucherCode(voucher_code);
            UI.helpers.scrollTo(voucher_view.$el, null, null, -50);
        });
        $('a[href="#set-voucher-code"]').click(function() {
            var voucher_view = UI.views.order_voucher;
            var voucher_code = $(this).attr('title');;
            Order.setVoucherCode(voucher_code);
            UI.helpers.scrollTo(voucher_view.$el, null, null, -50);
        });
    });
}(Mobi2Go, jQuery, this._ || exports._, this));
(function(Mobi2Go, $, _, window) {
    'use strict';
    var Locations = Mobi2Go.Locations;
    var UI = Mobi2Go.UI;
    Mobi2Go.Order.onReady(function() {
        if ('locations' in Mobi2Go.helpers.getQueryStringAsObject()) {
            UI.trigger('showLocations');
        }
    });
    Mobi2Go.Menu.onReady(function() {
        var query = Mobi2Go.helpers.getQueryStringAsObject();
        if ('category' in query) {
            _.delay(function() {
                UI.trigger('showCategory', query.category);
                UI.trigger('scrollToCategory', query.category);
                $('[data-m2g-show-menu-category="' + query.category + '"]').click();
            }, 500);
        }
    });
}(Mobi2Go, jQuery, this._ || exports._, this));
(function(Mobi2Go, $, _, window) {
    'use strict';
    var UI = Mobi2Go.UI || {};
    UI.OrderSection = function(el) {
        this.$element = $(el);
        this.$status = this.$element.find('[data-order-section-status]');
        this.$status_icon = this.$element.find('[data-order-section-status-icon]');
    };
    _.extend(UI.OrderSection.prototype, {
        setStatus: function(html, icon) {
            this.$status.html(html || '');
            this.setStatusIcon(icon || '');
        },
        setStatusIcon: function(icon_class) {
            if (icon_class) {
                var class_name = 'm2g-order-section-status-icon m2g-icon' + ' m2g-icon--' + icon_class;
                this.$status_icon.attr('class', class_name);
            } else {
                this.$status_icon.attr('class', 'm2g-hidden');
            }
        },
        clearStatus: function() {
            this.setStatus('');
            this.setStatusIcon();
        },
        animateTitle: function() {
            this.$element.addClass('m2g-order-section--warning');
        },
        fade: function(is_faded) {
            this.$element[is_faded ? 'addClass' : 'removeClass']('m2g-order-section--fade');
            if (is_faded) {
                this.ensureSectionUnfades();
            }
        },
        unfade: function() {
            this.fade(false);
        },
        ensureSectionUnfades: function() {
            var that = this;
            clearTimeout(this.ensureSectionUnfades.timeout);
            this.ensureSectionUnfades.timeout = setTimeout(function() {
                that.unfade();
            }, 3600);
        },
        complete: function(is_complete) {
            this.$element[is_complete ? 'addClass' : 'removeClass']('m2g-order-section--complete');
            this.$element.removeClass('m2g-order-section--warning');
        }
    });
}(Mobi2Go, jQuery, this._ || exports._, window));
(function(Mobi2Go, $) {
    'use strict';
    var Order = Mobi2Go.Order,
        Locations = Mobi2Go.Locations,
        UI = Mobi2Go.UI;
    Mobi2Go.UI.View({
        name: 'locations_browser',
        model: 'Locations',
        el: '[data-view="locations-browser"]',
        templates: {
            location_list: $('[data-template="locations-list"]').html(),
            nearest_location_list: $('[data-template="nearest-locations-list"]').html(),
            location_info: $('[data-template="location-info"]').html()
        },
        initialise: function() {
            this.modal = new Mobi2Go.UI.Modal(this.$el);
            this.$list = this.$('[data-locations]');
            this.$nearest = this.$('[data-nearest-locations]');
            this.$info = this.$('[data-location-info]');
            Mobi2Go.UI.helpers.spinner(this.$list, true);
            Locations.onReady(this.renderLocationList);
            Mobi2Go.UI.bind('showLocations', this.show);
        },
        selectLocation: function(id) {
            var that = this;
            this.$('.m2g-nav-list-item[data-location]').removeClass('m2g-nav-list-item--active').filter('[data-location="' + id + '"]').addClass('m2g-nav-list-item--active');
            this.current_location = Locations.getById(id);
            if (!this.current_location.hasLoadedRecently()) {
                Mobi2Go.UI.helpers.spinner(this.$info, true);
            }
            if (this.current_location.isInactive() || this.current_location.isLockedOut()) {
                this.$('[data-set]').removeClass('m2g-button--primary').addClass('m2g-button--disabled');
            } else {
                this.$('[data-set]').addClass('m2g-button--primary').removeClass('m2g-button--disabled');
            }
            this.current_location.load(function() {
                var html = that.templates.location_info(that.current_location);
                that.$info.html(html);
                that.$info.attr('data-location', that.current_location.id);
                that.$info.attr('data-location-name', that.current_location.name);
            });
        },
        renderLocationList: function() {
            var data = {
                    regions: Locations.getByRegion()
                },
                html = this.templates.location_list(data);
            this.$list.html(html);
            if (Locations.hasOnlyOne()) {
                this.setDisplaySingleLocation();
            }
        },
        renderNearestLocationList: function() {
            var data = {
                    nearest_locations: Locations.getSortedByDistance().slice(0, 5)
                },
                html = this.templates.nearest_location_list(data);
            this.$nearest.html(html);
        },
        setDisplaySingleLocation: function() {
            this.$('[data-nav]').hide();
            this.$('[data-location-info]').addClass('m2g-location-info--single-store');
            this.$('[data-title]').text('Store info');
            this.$('[data-set]').text('Close');
        },
        show: function(location_obj) {
            this.modal.open();
            if (location_obj) {
                this.selectLocation(location_obj.id);
                this.focusLocationById(location_obj.id);
            } else if (!this.current_location) {
                var location = Locations.getFirstNotHidden();
                this.selectLocation(location.id);
                this.focusLocationById(location.id);
            }
        },
        hide: function() {
            this.modal.close();
        },
        focusLocationById: function(id) {
            this.$('[data-location="' + id + '"]').focus();
        },
        DOM_listeners: {
            'click .m2g-nav-list-item[data-location]': function(e) {
                var id = $(e.currentTarget).data('location');
                this.selectLocation(id);
            },
            'keydown .m2g-nav-list-item[data-location]': function(e) {
                if (e.keyCode !== 13) {
                    return;
                }
                var id = $(e.currentTarget).data('location');
                if (id !== this.current_location.id) {
                    this.selectLocation(id);
                } else {
                    this.$('[data-set]').focus();
                }
            },
            'click [data-set]': 'chooseLocationButtonClickHandler'
        },
        chooseLocationButtonClickHandler: function() {
            if (!this.current_location || !this.current_location.isActive()) {
                return;
            }
            var that = this;
            var location_name = this.current_location.name;
            var basket_products_to_be_removed = Order.getUnavailableAndOutOfStockProductsForLocation(this.current_location);
            if (basket_products_to_be_removed.length) {
                var title = 'Items unavailable',
                    body = 'Some items in your order are unavailable at ' +
                    location_name + ', would you still like to order from ' +
                    location_name + '?';
                if (basket_products_to_be_removed.length === 1) {
                    var menu_product = basket_products_to_be_removed[0].menu_product;
                    title = menu_product.name + ' unavailable';
                    body = menu_product.name + ' is unavailable at ' +
                        location_name + ', would you still like to order from ' +
                        location_name + '?';
                } else if (basket_products_to_be_removed.length === 2) {
                    var menu_product_names = basket_products_to_be_removed[0].menu_product + ' and ' +
                        basket_products_to_be_removed[1].menu_product;
                    body = menu_product_names + ' are unavailable at ' +
                        location_name + ', would you still like to order from ' +
                        location_name + '?';
                }
                UI.alert({
                    title: title,
                    body: body,
                    primary_button: 'Yes',
                    onPrimaryButtonClick: function() {
                        that.setCurrentLocationAndClose();
                    },
                    secondary_button: 'Cancel'
                });
            } else {
                this.setCurrentLocationAndClose();
            }
        },
        setCurrentLocationAndClose: function() {
            var that = this;
            Order.setLocationById(this.current_location.id, true);
            this.modal.close();
            _.defer(function() {
                if (!UI.Modal.isOpen()) {
                    UI.helpers.scrollTo('[data-view="order-location"]', function() {
                        setTimeout(function() {
                            UI.alert({
                                title: 'Store set',
                                body: 'Ordering from  ' + that.current_location.name,
                                el: $('[data-view="order-location"] [data-order-location]'),
                                placement: 'left',
                                primary_button: null,
                                temp: true,
                                highlight_element: true
                            });
                        }, 250);
                    }, true, -150);
                }
            });
        }
    });
})(Mobi2Go, jQuery);
'use strict';
var _createClass = function() {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ('value' in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError('Cannot call a class as a function');
    }
}

function _possibleConstructorReturn(self, call) {
    if (!self) {
        throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
    }
    return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}(function(Mobi2Go, $, _) {
    'use strict';
    var UI = Mobi2Go.UI;
    var Order = Mobi2Go.Order;
    var Locations = Mobi2Go.Locations;
    var Customer = Mobi2Go.Customer;
    var MapService = Mobi2Go.MapsService;
    var PropTypes = React.PropTypes;
    var CustomerAddress = Mobi2Go._class.CustomerAddress;
    var classNames = Mobi2Go.helpers.classNames;
    var LocationsFinder = function(_React$Component) {
        _inherits(LocationsFinder, _React$Component);

        function LocationsFinder() {
            _classCallCheck(this, LocationsFinder);
            var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(LocationsFinder).call(this));
            _this.state = {
                method: Locations.getDefaultOrderMethod(),
                should_show_method_selector: Locations.getPickupAvailableCount() > 0 && Locations.getDeliveryAvailableCount() > 0,
                should_show_pickup_search: Locations.getPickupAvailableCount() > 4,
                search_query: '',
                force_search_autocomplete_hide: false,
                is_search_input_focused: false,
                is_mouseover_search: false,
                search_autocomplete_highlighted_item: null,
                search_autocomplete_selected_item: null,
                search_autocomplete_list: [],
                location_list: [],
                address_list: [],
                address: null,
                is_address_available: null,
                is_previous_address_available: null,
                emphasis_address_unavailable_message: false,
                region_list: _.map(Locations.getByRegion(), function(locations, region) {
                    return {
                        id: region,
                        type: 'region',
                        description: region,
                        locations: locations,
                        subtext: React.createElement('span', null, React.createElement('span', {
                            className: 'm2g-icon m2g-icon--location m2g-autocomplete-item-subtext-icon'
                        }), locations.length === 1 ? '1 store' : locations.length + ' stores')
                    };
                })
            };
            _this.componentWillMount = function() {
                _this.updateLocationList();
            };
            _this.onMethodChange = function(method) {
                var state = {
                    method: method
                };
                if (method !== _this.state.method) {
                    state.search_query = '';
                    state.search_autocomplete_selected_item = null;
                }
                _this.setState(state, function() {
                    _this.updateAutocompleteList();
                    _this.updateLocationList(function() {
                        _this.updateIsAddressAvailable();
                    });
                });
            };
            _this.onSearchQueryChange = function(search_query) {
                return _this.setState({
                    search_query: search_query,
                    force_search_autocomplete_hide: false,
                    search_autocomplete_selected_item: search_query !== '' ? _this.state.search_autocomplete_selected_item : null
                }, function() {
                    _this.debouncedUpdateAutocompleteList();
                    _this.updateIsAddressAvailable();
                });
            };
            _this.onSearchInputFocusChange = function(is_search_input_focused) {
                return _this.setState({
                    is_search_input_focused: is_search_input_focused,
                    force_search_autocomplete_hide: false
                }, function() {
                    return _this.updateAutocompleteList();
                });
            };
            _this.onSearchMouseEnterChange = function(is_mouseover_search) {
                _this.setState({
                    is_mouseover_search: is_mouseover_search
                });
            };
            _this.onSelectedItemChange = function(search_autocomplete_selected_item) {
                return _this.setState({
                    search_autocomplete_selected_item: search_autocomplete_selected_item,
                    search_query: search_autocomplete_selected_item ? search_autocomplete_selected_item.description : _this.state.search_query,
                    force_search_autocomplete_hide: true
                }, function() {
                    _this.updateAutocompleteList();
                    _this.updateLocationList(function() {
                        _this.updateIsAddressAvailable();
                    });
                });
            };
            _this.onHighlightedItemChange = function(search_autocomplete_highlighted_item) {
                if (search_autocomplete_highlighted_item.type === 'address') {
                    MapService.getPlaceDetails(search_autocomplete_highlighted_item);
                }
                _this.setState({
                    search_autocomplete_highlighted_item: search_autocomplete_highlighted_item
                });
            };
            _this.onLocationClick = function(location, method) {
                var basket_products_to_be_removed = Order.getUnavailableAndOutOfStockProductsForLocation(location);
                if (basket_products_to_be_removed.length) {
                    var title = 'Items unavailable',
                        body = 'Some items in your order are unavailable at ' + location.name + ', would you still like to order from ' + location.name + '?';
                    if (basket_products_to_be_removed.length === 1) {
                        var menu_product = basket_products_to_be_removed[0].menu_product;
                        title = menu_product.name + ' unavailable';
                        body = menu_product.name + ' is unavailable at ' + location.name + ', would you still like to order from ' + location.name + '?';
                    } else if (basket_products_to_be_removed.length === 2) {
                        var menu_product_names = basket_products_to_be_removed[0].menu_product + ' and ' + basket_products_to_be_removed[1].menu_product;
                        body = menu_product_names + ' are unavailable at ' + location.name + ', would you still like to order from ' + location.name + '?';
                    }
                    UI.alert({
                        title: title,
                        body: body,
                        primary_button: 'Yes',
                        onPrimaryButtonClick: function onPrimaryButtonClick() {
                            _this.setOrderLocationAndMethodAndClose(location, method);
                        },
                        secondary_button: 'Cancel'
                    });
                } else {
                    _this.setOrderLocationAndMethodAndClose(location, method);
                }
            };
            _this.setOrderLocationAndMethodAndClose = function(location, method) {
                Order.set({
                    location: location,
                    method: method
                });
                if (method === 'delivery') {
                    Order.setAddressAfterCustomerSet(_this.state.address);
                }
                location_finder.hide();
                _.defer(function() {
                    if (!UI.Modal.isOpen()) {
                        UI.helpers.scrollTo('[data-view="order-location"]', function() {
                            setTimeout(function() {
                                UI.alert({
                                    title: 'Store set',
                                    body: 'Ordering from  ' + location.name,
                                    el: $('[data-view="order-location"] [data-order-location]'),
                                    placement: 'left',
                                    primary_button: null,
                                    temp: true,
                                    highlight_element: true
                                });
                            }, 250);
                        }, true, -150);
                    }
                });
            };
            _this.onSavedAddressDeleteClick = function(saved_address) {
                Customer.removeAddressById(saved_address.id);
                _this.updateAutocompleteList();
                _this.updateIsAddressAvailable();
            };
            _this.updateLocationList = function(callback) {
                var selected_item = _this.state.search_autocomplete_selected_item;
                var location_list = [];
                var transformLocationsForDelivery = function transformLocationsForDelivery(locations) {
                    locations = _.filter(locations, function(location) {
                        return location.status === 'active';
                    });
                    locations = locations.sort(function(a_location, b_location) {
                        var a_minutes_to_asap_order = a_location.getMinutesToAsapOrderDatetime('delivery');
                        var b_minutes_to_asap_order = b_location.getMinutesToAsapOrderDatetime('delivery');
                        var a_is_open = a_location.isOpenForMethod('delivery') && a_minutes_to_asap_order !== 0 && a_minutes_to_asap_order < 120;
                        var b_is_open = b_location.isOpenForMethod('delivery') && b_minutes_to_asap_order !== 0 && b_minutes_to_asap_order < 120;;
                        var a_wait_time = a_location.wait_times.delivery;
                        var b_wait_time = b_location.wait_times.delivery;
                        if (!a_is_open && !b_is_open) {
                            return 0;
                        }
                        if (!a_is_open) {
                            return 1;
                        }
                        if (!b_is_open) {
                            return -1;
                        }
                        if (a_minutes_to_asap_order === b_minutes_to_asap_order) {
                            if (_this.state.address) {
                                var a_distance_to_address = a_location.getDistanceFromPoint(_this.state.address);
                                var b_distance_to_address = b_location.getDistanceFromPoint(_this.state.address);
                                if (a_distance_to_address < b_distance_to_address) {
                                    return -1;
                                } else {
                                    return 1;
                                }
                            }
                            return Math.random() <= 0.5 ? 1 : -1;
                        }
                        if (a_minutes_to_asap_order < b_minutes_to_asap_order) {
                            return -1;
                        } else {
                            return 1;
                        }
                    });
                    return locations;
                };
                var transformLocationsForPickUp = function transformLocationsForPickUp(locations) {
                    var locations_by_distance = _.sortBy(locations, function(location) {
                        return location.distance_to_customer;
                    });
                    var should_sort_by_distance = locations_by_distance.length && locations_by_distance[0].distance_to_customer && locations_by_distance[0].distance_to_customer < 50;
                    if (should_sort_by_distance) {
                        locations = locations.sort(function(a_location, b_location) {
                            var a_wait_time = a_location.wait_times.pickup;
                            var b_wait_time = b_location.wait_times.pickup;
                            if (a_location.distance_to_customer || b_location.distance_to_customer) {
                                if (a_location.distance_to_customer < b_location.distance_to_customer) {
                                    return -1;
                                }
                                if (a_location.distance_to_customer > b_location.distance_to_customer) {
                                    return 1;
                                }
                            }
                        });
                    }
                    return locations;
                };
                if (selected_item) {
                    switch (selected_item.type) {
                        case 'location':
                            location_list = [
                                Locations.getById(selected_item.id)
                            ];
                            break;
                        case 'region':
                            location_list = transformLocationsForPickUp(selected_item.locations);
                            break;
                        case 'address':
                            MapService.getPlaceDetails(selected_item, function(details) {
                                var address = CustomerAddress.prototype.mapGmapsPlaceDetailFields(details);
                                var location_list = Locations.getAllWithDeliveryAvailableToAddress(address);
                                location_list = transformLocationsForDelivery(location_list);
                                _this.setState({
                                    location_list: location_list,
                                    address: address
                                }, callback);
                            });
                            return;
                        case 'saved_address':
                            var location_list = Locations.getAllWithDeliveryAvailableToAddress(selected_item.address);
                            location_list = transformLocationsForDelivery(location_list);
                            _this.setState({
                                location_list: location_list,
                                address: selected_item.address
                            }, callback);
                            return;
                    }
                } else {
                    location_list = transformLocationsForPickUp(Locations.getAllNotHidden());
                }
                _this.setState({
                    location_list: location_list
                }, callback);
            };
            _this.updateAutocompleteList = function() {
                var list = [];
                var locations = [];
                var matching_search_item_count = 0;
                var search_query = _this.state.search_query.toLowerCase();
                if (search_query.trim) {
                    search_query = search_query.trim();
                }
                if (_this.state.method === 'pickup') {
                    var regions = _.map(_this.state.region_list, function(region) {
                        var matched_substrings = [];
                        if (search_query) {
                            var index = region.description.toLowerCase().indexOf(search_query);
                            if (index !== -1) {
                                matched_substrings.push({
                                    offset: index,
                                    length: search_query.length
                                });
                                matching_search_item_count++;
                            }
                        }
                        return _.extend(region, {
                            matched_substrings: matched_substrings
                        });
                    });
                    list = list.concat(regions);
                    if (_this.state.search_query) {
                        locations = _.map(Locations.search({
                            name: _this.state.search_query,
                            method: 'pickup',
                            status: 'active'
                        }), function(location) {
                            var index = location.name.toLowerCase().indexOf(search_query);
                            var matched_substrings = [];
                            if (index !== -1) {
                                matched_substrings.push({
                                    offset: index,
                                    length: _this.state.search_query.length
                                });
                                matching_search_item_count++;
                            }
                            var is_open = location.isOpenForMethod(_this.state.method);
                            var subtext = '';
                            if (is_open) {
                                if (_this.state.method === 'pickup') {
                                    subtext = 'Pick up in ' + location.wait_times.pickup + ' minutes';
                                } else {
                                    subtext = 'Delivers in ' + location.wait_times.pickup + ' minutes';
                                }
                            } else {
                                subtext = location.getClosingTimeSentence();
                            }
                            list = _.filter(list, function(region) {
                                return region.locations.length !== 1 || region.locations[0].id !== location.id || region.description !== location.name;
                            });
                            return _.extend(location, {
                                id: location.id,
                                type: 'location',
                                description: location.name,
                                subtext: subtext,
                                matched_substrings: matched_substrings,
                                is_open: is_open
                            });
                        });
                        list = list.concat(locations);
                    }
                    if (locations.length && matching_search_item_count !== 0) {
                        list = _.filter(list, function(item) {
                            return item.matched_substrings.length;
                        });
                    }
                    list = list.sort(function(a, b) {
                        var a_substrings = a.matched_substrings;
                        var b_substrings = b.matched_substrings;
                        if (a_substrings.length && b_substrings.length) {
                            if (a_substrings[0].length === b_substrings[0].length) {
                                if (a.type === b.type) {
                                    return a_substrings[0].offset > b_substrings[0].offset ? 1 : a_substrings[0].offset < b_substrings[0].offset ? -1 : 0;
                                }
                                return a.type === 'region' ? -1 : 1;
                            }
                            return a_substrings[0].length > b_substrings[0].length ? -1 : a_substrings[0].length < b_substrings[0].length ? 1 : 0;
                        }
                        if (!a_substrings.length || !b_substrings.length) {
                            if (!a_substrings.length && !b_substrings.length) {
                                if (a.type === b.type) {
                                    return a.description.toLowerCase() < b.description.toLowerCase() ? -1 : a.description.toLowerCase() > b.description.toLowerCase() ? 1 : 0;
                                } else {
                                    return a.type === 'region' ? -1 : b.type === 'region' ? 1 : 0;
                                }
                            }
                            return a_substrings.length ? -1 : b_substrings.length ? 1 : 0;
                        }
                        if (a.type === b.type) {
                            return a.description.toLowerCase() < b.description.toLowerCase() ? -1 : a.description.toLowerCase() > b.description.toLowerCase() ? 1 : 0;
                        }
                        return 0;
                    });
                    _this.setState({
                        search_autocomplete_list: list,
                        search_autocomplete_highlighted_item: list.length && (!_this.state.search_autocomplete_highlighted_item || _this.hasAutocompleteListChanged(list)) ? list[0] : _this.state.search_autocomplete_highlighted_item
                    });
                } else if (_this.state.method === 'delivery') {
                    var customer_addresses = [];
                    if (Order.getCustomer()) {
                        var addresses = Order.getCustomer().getAddresses().filter(function(address) {
                            return address.id;
                        });
                        customer_addresses = _.map(addresses, function(address) {
                            var matched_substrings = [];
                            if (search_query) {
                                var index = address.toString().toLowerCase().indexOf(search_query);
                                if (index !== -1) {
                                    matched_substrings.push({
                                        offset: index,
                                        length: _this.state.search_query.length
                                    });
                                }
                            }
                            return {
                                id: address.id,
                                type: 'saved_address',
                                description: address.toString(),
                                address: address,
                                matched_substrings: matched_substrings
                            };
                        });
                    }
                    MapService.getPlacePredictions(search_query, function(list) {
                        list = list || [];
                        list = _.map(list, function(item) {
                            return _.extend(item, {
                                type: 'address'
                            });
                        });
                        list = customer_addresses.concat(list);
                        list = list.sort(function(a, b) {
                            if (a.type === 'saved_address' && a.matched_substrings.length > 0) {
                                return -1;
                            }
                            if (a.type === 'saved_address' && b.matched_substrings.length > 0) {
                                return 1;
                            }
                            return -1;
                        });
                        _this.setState({
                            search_autocomplete_list: list,
                            search_autocomplete_highlighted_item: list.length && (!_this.state.search_autocomplete_highlighted_item || _this.hasAutocompleteListChanged(list)) ? list[0] : _this.state.search_autocomplete_highlighted_item
                        });
                    });
                }
            };
            _this.debouncedUpdateAutocompleteList = _.debounce(_this.updateAutocompleteList, 50, {
                maxWait: 500
            });
            _this.updateIsAddressAvailable = function() {
                var is_address_available = _this.state.method === 'delivery' && _this.state.search_autocomplete_selected_item && (_this.state.search_autocomplete_selected_item.type === 'address' || _this.state.search_autocomplete_selected_item.type === 'saved_address') && _this.state.location_list.length > 0;
                if (!is_address_available) {
                    setTimeout(_this.emphasisAddressUnavailableMessage, 320);
                }
                _this.setState({
                    is_address_available: is_address_available,
                    is_prev_address_available: _this.state.is_address_available
                });
            };
            _this.emphasisAddressUnavailableMessage = function() {
                _this.setState({
                    emphasis_address_unavailable_message: true
                });
                clearTimeout(_this.emphasisAddressUnavailableMessage.animation_timeout);
                _this.emphasisAddressUnavailableMessage.animation_timeout = setTimeout(function() {
                    _this.setState({
                        emphasis_address_unavailable_message: false
                    });
                }, 330);
            };
            _this.render = function() {
                var show_search_prompt_message = _this.state.method === 'delivery' && !_this.state.search_autocomplete_selected_item;
                var show_address_unavailable_message = _this.state.search_autocomplete_selected_item && (_this.state.search_autocomplete_selected_item.type === 'address' || _this.state.search_autocomplete_selected_item.type === 'saved_address') && _this.state.location_list.length === 0;
                return React.createElement('div', {
                    className: 'm2g-locations-finder',
                    'data-delivery-only': !_this.state.should_show_method_selector && _this.state.method === 'delivery',
                    'data-method': _this.state.method
                }, React.createElement('div', {
                    className: 'm2g-modal-header'
                }, React.createElement('button', {
                    className: 'm2g-modal-close-button',
                    onClick: location_finder.hide,
                    'data-dismiss': 'modal'
                }, '×'), React.createElement('h2', {
                    className: 'm2g-h2 m2g-modal-title',
                    'data-title': true
                }, 'Find your store')), React.createElement('div', {
                    className: 'm2g-modal-body'
                }, _this.state.should_show_method_selector && React.createElement(MethodSelector, {
                    method: _this.state.method,
                    onChange: _this.onMethodChange
                }), (_this.state.method === 'delivery' || _this.state.should_show_pickup_search && _this.state.method === 'pickup') && React.createElement(Search, {
                    method: _this.state.method,
                    search_query: _this.state.search_query,
                    autocomplete_list: _this.state.search_autocomplete_list,
                    selected_item: _this.state.search_autocomplete_selected_item,
                    highlighted_item: _this.state.search_autocomplete_highlighted_item,
                    force_autocomplete_hide: _this.state.force_search_autocomplete_hide,
                    is_search_input_focused: _this.state.is_search_input_focused,
                    is_mouseover_search: _this.state.is_mouseover_search,
                    onMethodChange: _this.onMethodChange,
                    onItemSelect: _this.onSelectedItemChange,
                    onItemHighlight: _this.onHighlightedItemChange,
                    onInputFocusChange: _this.onSearchInputFocusChange,
                    onMouseEnterChange: _this.onSearchMouseEnterChange,
                    onSearchQueryChange: _this.onSearchQueryChange,
                    onSelectedRegionChange: _this.onSelectedRegionChange,
                    onSavedAddressDeleteClick: _this.onSavedAddressDeleteClick
                }), _this.state.method === 'pickup' && React.createElement(LocationsList, {
                    method: _this.state.method,
                    onLocationClick: _this.onLocationClick,
                    list: _this.state.location_list
                }), React.createElement('div', {
                    className: classNames('m2g-locations-finder-message', 'm2g-locations-finder-message--prompt-search', {
                        'm2g-locations-finder-message--hidden': !show_search_prompt_message
                    })
                }, React.createElement('div', {
                    className: 'm2g-locations-finder-message-icon m2g-icon m2g-icon--search'
                }), React.createElement('div', {
                    className: 'm2g-locations-finder-message-content'
                }, React.createElement('strong', {
                    className: 'm2g-locations-finder-message-content-title'
                }, 'Address search'), React.createElement('br', null), React.createElement('div', {
                    className: 'm2g-locations-finder-message-content-message'
                }, 'Enter your address above')), !_this.state.is_search_input_focused && React.createElement('div', {
                    className: 'm2g-locations-finder-message-arrow-icon m2g-icon m2g-icon--up'
                })), React.createElement('div', {
                    className: classNames('m2g-locations-finder-message', 'm2g-locations-finder-message--address-unavailable', {
                        'm2g-locations-finder-message--hidden': !show_address_unavailable_message,
                        'm2g-locations-finder-message--emphasis': _this.state.emphasis_address_unavailable_message
                    })
                }, React.createElement('div', {
                    className: 'm2g-locations-finder-message-icon m2g-icon m2g-icon--alert'
                }), React.createElement('div', {
                    className: 'm2g-locations-finder-message-content'
                }, React.createElement('strong', {
                    className: 'm2g-locations-finder-message-content-title'
                }, 'Delivery unavailable'), React.createElement('br', null), React.createElement('div', {
                    className: 'm2g-locations-finder-message-content-message'
                }, 'Address is outside delivery area')), React.createElement('div', {
                    className: 'm2g-locations-finder-message-arrow-icon m2g-icon m2g-icon--up'
                })), _this.state.method === 'delivery' && React.createElement(AddressForm, {
                    onTypeChange: function onTypeChange(type) {
                        var address = _this.state.address;
                        address.type = type;
                        _this.setState({
                            address: address
                        });
                    },
                    onNameChange: function onNameChange(name) {
                        var address = _this.state.address;
                        address.name = name;
                        _this.setState({
                            address: address
                        });
                    },
                    onSpecificNumberChange: function onSpecificNumberChange(specific_number) {
                        var address = _this.state.address;
                        address.specific_number = specific_number;
                        _this.setState({
                            address: address
                        });
                    },
                    onCommentChange: function onCommentChange(comment) {
                        var address = _this.state.address;
                        address.comment = comment;
                        _this.setState({
                            address: address
                        });
                    },
                    is_showing: _this.state.is_address_available,
                    address: _this.state.address
                }), React.createElement('div', {
                    className: classNames('m2g-locations-finder-delivery-location', 'm2g-well', {
                        'm2g-locations-finder-delivery-location--hidden': _this.state.method !== 'delivery' || _this.state.location_list.length === 0 || !_this.state.search_autocomplete_selected_item || !_.contains(['address',
                            'saved_address'
                        ], _this.state.search_autocomplete_selected_item.type)
                    })
                }, _this.state.location_list.length && React.createElement(LocationListing, {
                    method: 'delivery',
                    onMethodClick: function onMethodClick() {
                        _this.onLocationClick(_this.state.location_list[0], 'delivery');
                    },
                    location: _this.state.location_list[0]
                }))));
            };
            Mobi2Go.bind('MapsService', 'coordinatesAvailable', function() {
                if (_this.state.method === 'pickup') {
                    _this.updateLocationList();
                }
            });
            return _this;
        }
        _createClass(LocationsFinder, [{
            key: 'hasAutocompleteListChanged',
            value: function hasAutocompleteListChanged(list) {
                var list_signature = _.reduce(list, function(ids, list) {
                    return ids + list.id;
                }, '');
                if (list_signature !== this.hasAutocompleteListChanged.prev_list_signature) {
                    this.hasAutocompleteListChanged.prev_list_signature = list_signature;
                    return true;
                }
                return false;
            }
        }]);
        return LocationsFinder;
    }(React.Component);
    var MethodSelector = function(_React$Component2) {
        _inherits(MethodSelector, _React$Component2);

        function MethodSelector() {
            var _Object$getPrototypeO;
            var _temp,
                _this2,
                _ret;
            _classCallCheck(this, MethodSelector);
            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }
            return _ret = (_temp = (_this2 = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(MethodSelector)).call.apply(_Object$getPrototypeO, [
                    this
                ].concat(args))), _this2), _this2.shouldComponentUpdate = function(props) {
                    return props.method !== _this2.props.method;
                }, _this2.render = function() {
                    return React.createElement('div', {
                        className: 'm2g-locations-finder-method-selector'
                    }, React.createElement('span', {
                        className: classNames('m2g-locations-finder-method-selector-item', 'm2g-touchable', 'm2g-button', 'm2g-button--checkbox', 'm2g-button--left-align', 'm2g-button--right-join', {
                            'm2g-button--active': _this2.props.method === 'pickup',
                            'm2g-button--primary': _this2.props.method === 'pickup'
                        }),
                        style: _this2.props.method === 'pickup' ? {
                                pointerEvents: 'none'
                            } :
                            {},
                        'data-checked': _this2.props.method === 'pickup',
                        onClick: function onClick() {
                            return _this2.props.onChange('pickup');
                        }
                    }, React.createElement('span', {
                        className: 'm2g-locations-finder-method-selector-item-checkbox m2g-icon m2g-icon--checkbox m2g-icon--tick'
                    }), React.createElement('span', {
                        className: 'm2g-locations-finder-method-selector-item-label'
                    }, 'Pick up')), React.createElement('span', {
                        className: classNames('m2g-locations-finder-method-selector-item', 'm2g-touchable', 'm2g-button', 'm2g-button--checkbox', 'm2g-button--left-align', 'm2g-button--left-join', {
                            'm2g-button--active': _this2.props.method === 'delivery',
                            'm2g-button--primary': _this2.props.method === 'delivery'
                        }),
                        style: _this2.props.method === 'delivery' ? {
                                pointerEvents: 'none'
                            } :
                            {},
                        'data-checked': _this2.props.method === 'delivery',
                        onClick: function onClick() {
                            return _this2.props.onChange('delivery');
                        }
                    }, React.createElement('span', {
                        className: 'm2g-locations-finder-method-selector-item-checkbox m2g-icon m2g-icon--checkbox m2g-icon--tick'
                    }), React.createElement('span', {
                        className: 'm2g-locations-finder-method-selector-item-label'
                    }, 'Delivery')));
                }, _temp),
                _possibleConstructorReturn(_this2, _ret);
        }
        return MethodSelector;
    }(React.Component);
    MethodSelector.propTypes = {
        method: React.PropTypes.oneOf(['delivery',
            'pickup'
        ]),
        onChange: React.PropTypes.func
    };
    var Search = function(_React$Component3) {
        _inherits(Search, _React$Component3);

        function Search() {
            var _Object$getPrototypeO2;
            var _temp2,
                _this3,
                _ret2;
            _classCallCheck(this, Search);
            for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                args[_key2] = arguments[_key2];
            }
            return _ret2 = (_temp2 = (_this3 = _possibleConstructorReturn(this, (_Object$getPrototypeO2 = Object.getPrototypeOf(Search)).call.apply(_Object$getPrototypeO2, [
                    this
                ].concat(args))), _this3), _this3.onSearchQueryChange = function(e) {
                    _this3.props.onSearchQueryChange(e.target.value);
                }, _this3.onInputKeyDown = function(event) {
                    var key_code = event.keyCode;
                    var next = key_code === 40;
                    var prev = key_code === 38;
                    var enter = key_code === 13;
                    if (_this3.isAutocompleteShowing()) {
                        if (enter) {
                            event.target.blur();
                            _this3.props.onItemSelect(_this3.props.highlighted_item);
                        } else if (next || prev) {
                            _this3.movePredictionCursor(next);
                        }
                    }
                }, _this3.movePredictionCursor = function() {
                    var next = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];
                    var list = _this3.props.autocomplete_list;
                    var current_item = _this3.props.highlighted_item;
                    var current_index = _.findIndex(list, {
                        id: current_item.id
                    });
                    var new_index = current_index + (next ? 1 : -1);
                    if (new_index < 0) {
                        new_index = list.length - 1;
                    } else if (new_index > list.length - 1) {
                        new_index = 0;
                    }
                    _this3.props.onItemHighlight(list[new_index]);
                }, _this3.isAutocompleteShowing = function() {
                    return !_this3.props.force_autocomplete_hide && (_this3.props.is_search_input_focused || _this3.props.is_mouseover_search) && _this3.props.autocomplete_list.length > 0;
                }, _this3.render = function() {
                    return React.createElement('div', {
                        className: 'm2g-locations-finder-address-search',
                        'data-autocomplete-showing': _this3.isAutocompleteShowing()
                    }, React.createElement('div', {
                        className: 'm2g-locations-finder-address-search-label'
                    }, _this3.props.method === 'pickup' ? 'Search' : 'Delivery Address'), React.createElement('div', {
                        className: 'm2g-locations-finder-address-search-input-container m2g-input-container m2g-form-element--full-width',
                        'data-icon-before': true,
                        'data-icon-after': true
                    }, React.createElement('input', {
                        className: 'm2g-locations-finder-address-search-input m2g-input',
                        value: _this3.props.search_query,
                        onKeyDown: _this3.onInputKeyDown,
                        onChange: _this3.onSearchQueryChange,
                        onFocus: function onFocus(e) {
                            _this3.input.select();
                            _this3.props.onInputFocusChange(true);
                        },
                        onBlur: function onBlur() {
                            return _this3.props.onInputFocusChange(false);
                        },
                        placeholder: _this3.props.method === 'pickup' ? 'Enter your town or city' : 'Start typing your delivery address',
                        ref: function ref(e) {
                            return _this3.input = e;
                        }
                    }), React.createElement('span', {
                        className: 'm2g-icon m2g-icon--search',
                        'data-before': true
                    }), _this3.props.autocomplete_list.length > 0 && React.createElement('span', {
                        className: 'm2g-icon m2g-icon--chevron-down',
                        'data-after': true
                    })), _this3.isAutocompleteShowing() && React.createElement(Autocomplete, {
                        search_query: _this3.props.search_query,
                        show_logo: _this3.props.method === 'delivery',
                        onItemSelect: _this3.props.onItemSelect,
                        onItemHighlight: _this3.props.onItemHighlight,
                        onSavedAddressDeleteClick: _this3.props.onSavedAddressDeleteClick,
                        selected_item: _this3.props.selected_item,
                        highlighted_item: _this3.props.highlighted_item,
                        list: _this3.props.autocomplete_list,
                        onMouseEnter: function onMouseEnter() {
                            return _this3.props.onMouseEnterChange(true);
                        },
                        onMouseLeave: function onMouseLeave() {
                            return _this3.props.onMouseEnterChange(false);
                        }
                    }));
                }, _temp2),
                _possibleConstructorReturn(_this3, _ret2);
        }
        return Search;
    }(React.Component);
    Search.propTypes = {
        method: PropTypes.string,
        search_query: PropTypes.string,
        selected_item: PropTypes.any,
        highlighted_item: PropTypes.any,
        autocomplete_list: PropTypes.array,
        force_autocomplete_hide: PropTypes.bool,
        is_search_input_focused: PropTypes.bool,
        is_mouseover_search: PropTypes.bool,
        onMethodChange: PropTypes.func,
        onItemSelect: PropTypes.func,
        onItemHighlight: PropTypes.func,
        onSelectedRegionChange: PropTypes.func,
        onSearchQueryChange: PropTypes.func,
        onSavedAddressDeleteClick: PropTypes.func,
        onInputFocusChange: PropTypes.func,
        onMouseEnterChange: PropTypes.func
    };
    var Autocomplete = function(_React$Component4) {
        _inherits(Autocomplete, _React$Component4);

        function Autocomplete() {
            var _Object$getPrototypeO3;
            var _temp3,
                _this4,
                _ret3;
            _classCallCheck(this, Autocomplete);
            for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
                args[_key3] = arguments[_key3];
            }
            return _ret3 = (_temp3 = (_this4 = _possibleConstructorReturn(this, (_Object$getPrototypeO3 = Object.getPrototypeOf(Autocomplete)).call.apply(_Object$getPrototypeO3, [
                    this
                ].concat(args))), _this4), _this4.emphasisMatchedStrings = function(description, matched_substrings) {
                    var sections_to_replace = _.map(matched_substrings, function(match) {
                        return description.substr(match.offset, match.length);
                    });
                    _.each(sections_to_replace, function(section) {
                        description = description.replace(section, '<strong>' + section + '</strong>');
                    });
                    return React.createElement('span', {
                        dangerouslySetInnerHTML: {
                            __html: description
                        }
                    });
                }, _this4.shouldShowNoResults = function() {
                    return _this4.props.search_query && _.filter(_this4.props.list, function(item) {
                        return item.matched_substrings.length;
                    }).length === 0;
                }, _this4.componentDidUpdate = function() {
                    _this4.highlighted_element.scrollIntoViewIfNeeded();
                }, _this4.render = function() {
                    return React.createElement('div', {
                        className: 'm2g-autocomplete-container',
                        onMouseEnter: _this4.props.onMouseEnter,
                        onMouseLeave: _this4.props.onMouseLeave
                    }, React.createElement('div', {
                        className: 'm2g-locations-finder-address-search-autocomplete m2g-autocomplete'
                    }, React.createElement('div', {
                        className: 'm2g-autocomplete-list',
                        ref: function ref(element) {
                            return _this4.list_element = element;
                        }
                    }, _this4.shouldShowNoResults() && React.createElement('div', {
                        className: 'm2g-locations-finder-address-search-autocomplete-no-results m2g-text--small m2g-text--offset'
                    }, 'No matches found for', ' "', React.createElement('span', {
                        className: 'm2g-text--italic'
                    }, _this4.props.search_query), '"'), _this4.props.list.map(function(item, i) {
                        return React.createElement('div', {
                            key: i,
                            tabindex: '0',
                            onClick: _this4.props.onItemSelect.bind(_this4, item),
                            onFocus: _this4.props.onItemHighlight.bind(_this4, item),
                            onMouseEnter: _this4.props.onItemHighlight.bind(_this4, item),
                            onTouchStart: _this4.props.onItemSelect.bind(_this4, item),
                            ref: _this4.props.highlighted_item && _this4.props.highlighted_item.id === item.id ? function(element) {
                                    return _this4.highlighted_element = element;
                                } :
                                null,
                            className: classNames('m2g-autocomplete-item', {
                                'm2g-autocomplete-item--no-icon': item.type === 'region',
                                'm2g-autocomplete-item--highlighted': _this4.props.highlighted_item && _this4.props.highlighted_item.id === item.id
                            })
                        }, item.type !== 'region' && React.createElement('span', {
                            className: classNames('m2g-icon', 'm2g-autocomplete-item-icon', {
                                'm2g-icon--star': item.type === 'saved_address',
                                'm2g-icon--location': item.type !== 'saved_address'
                            })
                        }), React.createElement('span', {
                            className: 'm2g-autocomplete-item-text'
                        }, _this4.emphasisMatchedStrings(item.description, item.matched_substrings)), item.subtext && React.createElement('div', {
                            className: 'm2g-autocomplete-item-subtext m2g-text--offset m2g-text--small'
                        }, item.subtext), item.type === 'saved_address' && React.createElement('span', {
                            className: classNames('m2g-icon', 'm2g-icon--cross', 'm2g-autocomplete-item-icon-right'),
                            onClick: function onClick(e) {
                                _this4.props.onSavedAddressDeleteClick(item.address);
                                e.stopPropagation();
                            }
                        }));
                    }, _this4)), _this4.props.show_logo && React.createElement('div', {
                        className: 'm2g-autocomplete-logo-container'
                    }, React.createElement('img', {
                        className: 'm2g-autocomplete-logo m2g-autocomplete-logo--on-light',
                        src: Mobi2Go.app.base_url + '/store/application/ui/components/img/maps/powered-by-google-on-white.png',
                        alt: 'Powered by google'
                    }), React.createElement('img', {
                        className: 'm2g-autocomplete-logo m2g-autocomplete-logo--on-dark',
                        src: Mobi2Go.app.base_url + '/store/application/ui/components/img/maps/powered-by-google-on-non-white.png',
                        alt: 'Powered by google'
                    }))));
                }, _temp3),
                _possibleConstructorReturn(_this4, _ret3);
        }
        return Autocomplete;
    }(React.Component);
    Autocomplete.propTypes = {
        search_query: PropTypes.string,
        show_logo: PropTypes.bool,
        highlighted_item: PropTypes.any,
        list: PropTypes.arrayOf(PropTypes.shape({
            description: PropTypes.string,
            sub_text: PropTypes.string,
            matched_substrings: PropTypes.array,
            terms: PropTypes.array
        })),
        onItemSelect: PropTypes.func,
        onItemHighlight: PropTypes.func,
        onMouseEnter: PropTypes.func,
        onMouseLeave: PropTypes.func,
        onSavedAddressDeleteClick: PropTypes.func
    };
    var LocationsList = function(_React$Component5) {
        _inherits(LocationsList, _React$Component5);

        function LocationsList() {
            var _Object$getPrototypeO4;
            var _temp4,
                _this5,
                _ret4;
            _classCallCheck(this, LocationsList);
            for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
                args[_key4] = arguments[_key4];
            }
            return _ret4 = (_temp4 = (_this5 = _possibleConstructorReturn(this, (_Object$getPrototypeO4 = Object.getPrototypeOf(LocationsList)).call.apply(_Object$getPrototypeO4, [
                    this
                ].concat(args))), _this5), _this5.shouldComponentUpdate = function(props) {
                    return props.method !== _this5.props.method || _.reduce(props.list, function(ids, item) {
                        return ids + item.id;
                    }, '') !== _.reduce(_this5.props.list, function(ids, item) {
                        return ids + item.id;
                    }, '') || _.reduce(props.list, function(distance, item) {
                        return distance + item.distance_to_customer;
                    }, '') !== _.reduce(_this5.props.list, function(distance, item) {
                        return distance + item.distance_to_customer;
                    }, '');
                }, _this5.render = function() {
                    var last_region = null;
                    var elements = [];
                    var num_locations = _this5.props.list.length;
                    var num_regions = _.uniq(_.map(_this5.props.list, function(location) {
                        return location.address.region;
                    })).length;
                    if (num_regions === 1) {
                        elements.push(React.createElement('div', {
                            key: _this5.props.list[0].address.region + ' ' + _this5.props.list[0].id,
                            className: 'm2g-locations-finder-list-region-heading'
                        }, React.createElement('div', {
                            className: 'm2g-locations-finder-list-region-heading-content'
                        }, _this5.props.list[0].address.region)));
                        elements.push(React.createElement('div', {
                            className: 'm2g-locations-finder-list-region-list',
                            key: 'region-list'
                        }, _.map(_this5.props.list, function(location) {
                            return React.createElement(LocationListing, {
                                method: _this5.props.method,
                                onMethodClick: function onMethodClick(method) {
                                    return _this5.props.onLocationClick(location, method);
                                },
                                key: location.id + ' ' + location.distance_to_customer,
                                location: location
                            });
                        })));
                    } else {
                        _.each(_this5.props.list, function(location) {
                            if (location.address.region !== last_region) {
                                elements.push(React.createElement('div', {
                                    key: location.address.region + ' ' + location.id,
                                    className: 'm2g-locations-finder-list-region-heading'
                                }, React.createElement('div', {
                                    className: 'm2g-locations-finder-list-region-heading-content'
                                }, last_region = location.address.region)));
                            }
                            elements.push(React.createElement(LocationListing, {
                                method: _this5.props.method,
                                onMethodClick: function onMethodClick(method) {
                                    return _this5.props.onLocationClick(location, method);
                                },
                                key: location.id + ' ' + location.distance_to_customer,
                                location: location
                            }));
                        });
                    }
                    return React.createElement('div', {
                        className: 'm2g-locations-finder-list',
                        'data-num-regions': num_regions,
                        'data-num-locations': num_locations
                    }, elements);
                }, _temp4),
                _possibleConstructorReturn(_this5, _ret4);
        }
        return LocationsList;
    }(React.Component);
    LocationsList.propTypes = {
        list: PropTypes.any,
        method: PropTypes.string,
        onLocationClick: PropTypes.func
    };
    var LocationListing = function(_React$Component6) {
        _inherits(LocationListing, _React$Component6);

        function LocationListing() {
            var _Object$getPrototypeO5;
            var _temp5,
                _this6,
                _ret5;
            _classCallCheck(this, LocationListing);
            for (var _len5 = arguments.length, args = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
                args[_key5] = arguments[_key5];
            }
            return _ret5 = (_temp5 = (_this6 = _possibleConstructorReturn(this, (_Object$getPrototypeO5 = Object.getPrototypeOf(LocationListing)).call.apply(_Object$getPrototypeO5, [
                    this
                ].concat(args))), _this6), _this6.shouldComponentUpdate = function(next_props) {
                    return _this6.props.location.id !== next_props.location.id || _this6.props.location.distance_to_customer !== next_props.location.distance_to_customer || _this6.props.method !== next_props.method;
                }, _this6.render = function() {
                    var location = _this6.props.location;
                    var minutes_to_asap_order = location.getMinutesToAsapOrderDatetime(_this6.props.method);
                    var time_to_order = location.current_time.to(location.getAsapOrderDatetime(_this6.props.method));
                    return React.createElement('div', {
                        className: 'm2g-locations-finder-location-listing',
                        'data-is-open': location.isOpen() && location.isActive() && !location.isLockedOut()
                    }, React.createElement('div', {
                        className: 'm2g-icon m2g-icon--location m2g-locations-finder-location-listing-marker-icon'
                    }), React.createElement('div', {
                        className: 'm2g-locations-finder-location-listing-name'
                    }, React.createElement('div', {
                        className: 'm2g-locations-finder-location-listing-name-text'
                    }, location.name)), React.createElement('div', {
                        className: 'm2g-text--offset m2g-locations-finder-location-listing-address'
                    }, location.getAddressString()), _this6.props.method === 'pickup' && location.distance_to_customer !== null && location.distance_to_customer <= 25 && React.createElement('div', {
                        className: classNames('m2g-locations-finder-location-listing-distance', 'm2g-text--small', 'm2g-text--offset')
                    }, location.distance_to_customer_formatted, ' away'), location.address.phone_number && React.createElement('div', {
                        className: 'm2g-locations-finder-location-listing-phone-number'
                    }, React.createElement('div', {
                        className: 'm2g-icon m2g-icon--phone m2g-locations-finder-location-listing-phone-number-icon'
                    }), React.createElement('a', {
                        href: 'tel:' + location.address.phone_number,
                        className: 'm2g-text--link m2g-locations-finder-location-listing-phone-number-text'
                    }, location.address.phone_number)), _this6.props.method === 'delivery' && minutes_to_asap_order !== 0 && minutes_to_asap_order < 240 && React.createElement('div', {
                        className: 'm2g-locations-finder-location-listing-order-time'
                    }, React.createElement('div', {
                        className: 'm2g-icon m2g-icon--clock m2g-locations-finder-location-listing-order-time-icon'
                    }), React.createElement('div', {
                        className: 'm2g-locations-finder-location-listing-order-time-text m2g-text--small m2g-text--offset'
                    }, 'Delivers ', time_to_order)), React.createElement('div', {
                        className: 'm2g-locations-finder-location-listing-open-status'
                    }, React.createElement('div', {
                        className: 'm2g-locations-finder-location-listing-open-status-text'
                    }, function() {
                        if (location.isLockedOut()) {
                            return 'Disabled';
                        } else if (location.isInactive()) {
                            return 'Offline';
                        } else if (location.isOpen()) {
                            return 'Open now';
                        } else {
                            return 'Closed';
                        }
                    }()), !location.isLockedOut() && !location.isInactive() && React.createElement('div', {
                        className: 'm2g-locations-finder-location-listing-open-status-message m2g-text--offset m2g-text--small'
                    }, location.getClosingTimeSentence())), React.createElement('div', {
                        style: {
                            display: 'none'
                        },
                        className: 'm2g-locations-finder-location-listing-opening-hours-link m2g-text--small'
                    }, React.createElement('span', {
                        className: 'm2g-locations-finder-location-listing-opening-hours-link-icon m2g-icon m2g-icon--clock'
                    }), 'Opening Hours'), !location.isInactive() && !location.isLockedOut() && React.createElement('div', {
                        className: 'm2g-locations-finder-location-listing-order-methods'
                    }, _this6.props.method === 'delivery' && location.order_methods.delivery && React.createElement('div', {
                        className: 'm2g-locations-finder-location-listing-order-methods-delivery m2g-button m2g-button--fat m2g-button--primary',
                        onClick: function onClick() {
                            return _this6.props.onMethodClick('delivery');
                        }
                    }, React.createElement('div', {
                        className: 'm2g-button-text'
                    }, location.isOpen() && minutes_to_asap_order < 120 ? 'Order here' : 'Schedule order')), _this6.props.method === 'pickup' && location.order_methods.pickup && React.createElement('div', {
                        className: 'm2g-locations-finder-location-listing-order-methods-pickup m2g-button m2g-button--primary',
                        onClick: function onClick() {
                            return _this6.props.onMethodClick('pickup');
                        }
                    }, React.createElement('div', {
                        className: 'm2g-button-text'
                    }, location.isOpen() && minutes_to_asap_order < 120 ? 'Order here' : 'Schedule order'))));
                }, _temp5),
                _possibleConstructorReturn(_this6, _ret5);
        }
        return LocationListing;
    }(React.Component);
    LocationListing.propTypes = {
        method: PropTypes.string,
        onMethodClick: PropTypes.func,
        location: PropTypes.instanceOf(Mobi2Go._class.Location)
    };
    var AddressForm = function(_React$Component7) {
        _inherits(AddressForm, _React$Component7);

        function AddressForm() {
            var _Object$getPrototypeO6;
            var _temp6,
                _this7,
                _ret6;
            _classCallCheck(this, AddressForm);
            for (var _len6 = arguments.length, args = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
                args[_key6] = arguments[_key6];
            }
            return _ret6 = (_temp6 = (_this7 = _possibleConstructorReturn(this, (_Object$getPrototypeO6 = Object.getPrototypeOf(AddressForm)).call.apply(_Object$getPrototypeO6, [
                    this
                ].concat(args))), _this7), _this7.render = function() {
                    var address = _this7.props.address;
                    return React.createElement('div', {
                        className: classNames('m2g-customer-address', 'm2g-customer-address--v2', {
                            'm2g-customer-address--hidden': !_this7.props.is_showing
                        })
                    }, React.createElement('div', {
                        className: 'm2g-customer-address-animation-container'
                    }, React.createElement('div', {
                        'data-type-group': true,
                        className: 'm2g-customer-address-type m2g-customer-address-form-group'
                    }, React.createElement('div', {
                        'data-type-label': true,
                        className: 'm2g-customer-address-form-group-label'
                    }, 'Type'), React.createElement('div', {
                        className: 'm2g-input-container m2g-customer-address-form-group-controls m2g-form-element-group',
                        'data-icon-after': 'select'
                    }, React.createElement('select', {
                        'data-type': true,
                        'data-field': 'type',
                        value: address ? address.type : '',
                        onChange: function onChange(e) {
                            return _this7.props.onTypeChange(e.target.value);
                        },
                        className: 'm2g-customer-address-type-select m2g-select m2g-form-element--full-width'
                    }, React.createElement('option', {
                        value: 'residential'
                    }, 'Residential Address'), React.createElement('option', {
                        value: 'business'
                    }, 'Business Address'), React.createElement('option', {
                        value: 'apartment'
                    }, 'Apartment'), React.createElement('option', {
                        value: 'hotel'
                    }, 'Hotel')))), React.createElement('div', {
                        'data-name-group': true,
                        className: classNames('m2g-customer-address-line-1', 'm2g-customer-address-form-group', {
                            'm2g-hidden': !address || address.type === 'residential'
                        })
                    }, React.createElement('div', {
                        'data-name-label': true,
                        className: 'm2g-customer-address-form-group-label'
                    }, !address ? '' : address.type === 'business' ? 'Business' : 'Building'), React.createElement('div', {
                        className: 'm2g-customer-address-form-group-controls m2g-form-element-group'
                    }, React.createElement('input', {
                        'data-name': true,
                        'data-field': 'name',
                        className: 'm2g-customer-address-name-input m2g-input m2g-form-element--three-quarter-width m2g-form-element--right-join',
                        value: address ? address.name || '' : '',
                        onChange: function onChange(e) {
                            return _this7.props.onNameChange(e.target.value);
                        },
                        placeholder: !address ? '' : address.type == 'business' ? 'Business name' : address.type == 'hotel' ? 'Hotel/Lodging' : 'Building name'
                    }), React.createElement('input', {
                        'data-specific-number': true,
                        'data-field': 'specific_number',
                        className: 'm2g-customer-address-specific-number-input m2g-input m2g-form-element--one-quarter-width m2g-form-element--left-join',
                        value: !address ? '' : address.specific_number || '',
                        onChange: function onChange(e) {
                            return _this7.props.onSpecificNumberChange(e.target.value);
                        },
                        placeholder: !address ? '' : address.type == 'business' ? 'Level' : address.type == 'hotel' ? 'Room' : 'Apt.'
                    }))), React.createElement('div', {
                        'data-street-group': true,
                        className: 'm2g-customer-address-line-2 m2g-customer-address-form-group'
                    }, React.createElement('div', {
                        'data-street-label': true,
                        className: 'm2g-customer-address-form-group-label'
                    }, 'Street'), address && address.type === 'residential' ? React.createElement('div', {
                        className: 'm2g-customer-address-form-group-controls m2g-form-element-group'
                    }, React.createElement('input', {
                        'data-specific-number': true,
                        'data-field': 'specific_number',
                        className: 'm2g-customer-address-specific-number-input m2g-input m2g-form-element--one-quarter-width m2g-form-element--right-join',
                        value: !address ? '' : address.specific_number || '',
                        onChange: function onChange(e) {
                            return _this7.props.onSpecificNumberChange(e.target.value);
                        },
                        placeholder: '(Unit)'
                    }), React.createElement('input', {
                        'data-street-number': true,
                        'data-field': 'street_number',
                        readOnly: true,
                        className: 'm2g-customer-address-street-number-input m2g-input m2g-form-element--one-quarter-width m2g-form-element--center-join',
                        value: !address ? '' : address.street_number || '',
                        placeholder: 'Number'
                    }), React.createElement('input', {
                        'data-street-name': true,
                        'data-field': 'street_name',
                        readOnly: true,
                        className: 'm2g-customer-address-street-name-input m2g-input m2g-form-element--half-width m2g-form-element--left-join',
                        value: !address ? '' : address.street_name || '',
                        placeholder: 'Street name'
                    })) : React.createElement('div', {
                        className: 'm2g-customer-address-form-group-controls m2g-form-element-group'
                    }, React.createElement('input', {
                        'data-street-number': true,
                        'data-field': 'street_number',
                        readOnly: true,
                        className: 'm2g-customer-address-street-number-input m2g-input m2g-form-element--one-quarter-width m2g-form-element--right-join',
                        value: !address ? '' : address.street_number || '',
                        placeholder: 'Number'
                    }), React.createElement('input', {
                        'data-street-name': true,
                        'data-field': 'street_name',
                        readOnly: true,
                        className: 'm2g-customer-address-street-name-input m2g-input m2g-form-element--three-quarter-width m2g-form-element--left-join',
                        value: !address ? '' : address.street_name || '',
                        placeholder: 'Street name'
                    }))), React.createElement('div', {
                        'data-suburb-group': true,
                        className: 'm2g-customer-address-line-3 m2g-customer-address-form-group  m2g-customer-address-form-group--suburb'
                    }, React.createElement('div', {
                        'data-suburb-label': true,
                        className: 'm2g-customer-address-form-group-label'
                    }, 'Town/City'), React.createElement('div', {
                        className: 'm2g-input-container m2g-customer-address-suburb m2g-customer-address-form-group-controls'
                    }, React.createElement('input', {
                        'data-suburb': true,
                        'data-field': 'suburb',
                        readOnly: true,
                        className: 'm2g-customer-address-suburb-input m2g-input m2g-form-element--one-quarter-width m2g-form-element--right-join',
                        value: !address ? '' : address.suburb || '',
                        placeholder: 'Town/City'
                    }), React.createElement('input', {
                        'data-post-code': true,
                        'data-field': 'post_code',
                        className: 'm2g-customer-address-post-code-input m2g-input m2g-form-element--left-join',
                        value: !address ? '' : address.post_code || '',
                        placeholder: 'Post code'
                    }))), React.createElement('div', {
                        'data-comment-group': true,
                        className: 'm2g-customer-address-form-group m2g-customer-address-form-group--comment'
                    }, React.createElement('div', {
                        'data-comment-label': true,
                        className: 'm2g-customer-address-form-group-label'
                    }, 'Note'), React.createElement('div', {
                        className: 'm2g-customer-address-form-group-controls m2g-form-element-group'
                    }, React.createElement('textarea', {
                        'data-comment': true,
                        'data-field': 'comment',
                        className: 'm2g-customer-address-comment-textarea m2g-textarea m2g-form-element--full-width',
                        placeholder: 'Enter any special delivery instructions',
                        onChange: function onChange(e) {
                            return _this7.props.onCommentChange(e.target.value);
                        },
                        value: !address ? '' : address.comment || ''
                    })))));
                }, _temp6),
                _possibleConstructorReturn(_this7, _ret6);
        }
        return AddressForm;
    }(React.Component);
    AddressForm.propTypes = {
        address: PropTypes.any,
        is_showing: PropTypes.bool,
        onTypeChange: PropTypes.func,
        onSpecificNumberChange: PropTypes.func,
        onNameChange: PropTypes.func,
        onCommentChange: PropTypes.func
    };
    var location_finder = Mobi2Go.UI.View({
        name: 'locations_finder',
        model: Locations,
        el: '[data-view="locations-finder"]',
        is_enabled: false,
        initialise: function initialise() {
            var _this8 = this;
            this.modal = new Mobi2Go.UI.Modal(this.$el);
            Locations.onReady(function() {
                var is_enabled = false;
                var delivery_available_count = Locations.getDeliveryAvailableCount();
                if (delivery_available_count === 0) {
                    is_enabled = true;
                } else {
                    var locations_with_delivery_mapping = Locations.search({
                        method: 'delivery',
                        status: 'active',
                        delivery_mode: 'map_polygons'
                    });
                    if (delivery_available_count === locations_with_delivery_mapping.length) {
                        is_enabled = true;
                    }
                }
                if (is_enabled) {
                    MapService.requestCoordinates();
                }
                Mobi2Go.UI.bind('showLocationsFinder', function() {
                    if ((is_enabled || _this8.isForciblyEnabled()) && !_this8.isForciblyDisabled()) {
                        MapService.requestCoordinates();
                        _this8.show();
                    } else {
                        Mobi2Go.UI.trigger('showLocations');
                    }
                });
                Mobi2Go.UI.bind('forceShowLocationsFinder', function() {
                    _this8.show();
                });
                ReactDOM.render(React.createElement(LocationsFinder, null), _this8.$el[0]);
            });
        },
        isForciblyEnabled: function isForciblyEnabled() {
            return UI.locations_finder_enabled || Mobi2Go.helpers.getQueryStringAsObject().enable_locations_finder;
        },
        isForciblyDisabled: function isForciblyDisabled() {
            return UI.locations_finder_disabled || Mobi2Go.helpers.getQueryStringAsObject().disable_locations_finder;
        },
        show: function show() {
            var _this9 = this;
            Locations.onReady(function() {
                return _this9.modal.open();
            });
        },
        hide: function hide() {
            this.modal.close();
        }
    });
})(Mobi2Go, jQuery, window._ || window.exports._);
(function(Mobi2Go, $, _) {
    'use strict';
    var UI = Mobi2Go.UI;
    new UI.View({
        name: 'customer_message',
        model: 'Order',
        el: '[data-view="customer-message"]',
        template: $('[data-template="customer-message"]').html(),
        initialise: function() {
            var html = this.template(Mobi2Go.headoffice);
            this.$el.html(html);
        },
        model_listeners: {},
        DOM_listeners: {}
    });
})(Mobi2Go, jQuery, this._ || exports._);
(function(Mobi2Go, $) {
    'use strict';
    var Menu = Mobi2Go.Menu;
    Mobi2Go.UI.View({
        name: 'menu_categories',
        model: Menu,
        el: '[data-view="menu-categories"]',
        template: $('[data-template="menu-categories"]').html(),
        initialise: function() {
            Mobi2Go.UI.bind('showCategory', this.setActiveCategory);
            Menu.onReady(this.render);
        },
        model_listeners: {
            updateMenu: 'render'
        },
        render: function() {
            var html = this.template(Menu);
            this.$el.html(html).removeClass('m2g-loading');
            this.$categories = this.$('[data-category]');
            this.current_category = this.model.getActiveMenuCategories().first().id;
        },
        current_category: 0,
        setActiveCategory: function(id) {
            if (!_.isNumber(id)) {
                var name = id;
                var category = Mobi2Go.Menu.getActiveMenuCategories().getByName(name);
                if (category) {
                    id = category.id;
                }
            }
            this.$categories.filter('[data-category="' + this.current_category + '"]').removeClass('m2g-nav-list-item--active');
            this.current_category = +id;
            this.$categories.filter('[data-category="' + this.current_category + '"]').addClass('m2g-nav-list-item--active');
        },
        DOM_listeners: {
            'click [data-category]': function(e) {
                var id = $(e.currentTarget).data('category');
                Mobi2Go.UI.trigger('showCategory', id);
            }
        }
    });
})(Mobi2Go, jQuery);
(function(Mobi2Go, $) {
    'use strict';
    var Menu = Mobi2Go.Menu,
        Order = Mobi2Go.Order,
        Locations = Mobi2Go.Locations,
        UI = Mobi2Go.UI;
    UI.View({
        name: 'menu_products',
        model: 'Menu',
        el: '[data-view="menu-products"]',
        template: $('[data-template="menu-products"]').html(),
        initialise: function() {
            Mobi2Go.UI.bind('showCategory', this.showCategory);
            Mobi2Go.UI.bind('scrollToCategory', this.scrollToCategory);
            Order.bind('updateOutOfStocks', this.render);
            Menu.onReady(this.render);
            this.equaliseProductElementHeightsOnWindowResize();
        },
        model_listeners: {
            updateMenu: 'render'
        },
        selected_category_id: null,
        render: function() {
            var categories = Menu.getActiveMenuCategories();
            if (!this.selected_category_id || !categories.find({
                    id: this.selected_category_id
                })) {
                this.selected_category_id = categories.first().id;
            }
            var data = {
                    categories: categories,
                    inStock: Order.isProductInStock,
                    selected_category_id: this.selected_category_id
                },
                html = this.template(data);
            this.$el.html(html);
            this.showCategory(this.selected_category_id);
            this.equaliseProductElementHeights();
            $('#m2g-view .m2g-menu [data-menu-loader]').remove();
        },
        showCategory: function(id) {
            if (!_.isNumber(id)) {
                var name = id;
                var category = Mobi2Go.Menu.getActiveMenuCategories().getByName(name);
                if (category) {
                    id = category.id;
                }
            }
            this.selected_category_id = +id;
            var $category = this.$('[data-category]').removeClass('m2g-menu-category--selected').filter('[data-category="' + this.selected_category_id + '"]');
            $category.addClass('m2g-menu-category--selected');
            var category = Menu.getActiveMenuCategories().find({
                id: id
            });
            if (category) {
                this.$el.attr('data-showing-category', category.id);
                this.$el.attr('data-showing-category-name', category.backend_name);
            }
            this.equaliseProductElementHeights();
        },
        scrollToCategory: function(id, force_scroll) {
            if (!_.isNumber(id)) {
                var name = id;
                var category = Mobi2Go.Menu.getActiveMenuCategories().getByName(name);
                if (category) {
                    id = category.id;
                }
            }
            var $category = this.$('[data-category="' + id + '"]');
            if ($category) {
                UI.helpers.scrollTo($category, null, !!force_scroll, -100);
            }
        },
        DOM_listeners: {
            'click [data-product][data-in-stock="true"]': 'productClickHandler',
            'keydown [data-product][data-in-stock="true"]': 'productKeydownHandler'
        },
        productClickHandler: function(e) {
            var id = $(e.currentTarget).data('product');
            this.addProductById(id);
        },
        productKeydownHandler: function(e) {
            if (e.keyCode !== 13) {
                return;
            }
            var id = $(e.currentTarget).data('product');
            this.addProductById(id);
        },
        addProductById: function(id) {
            var should_prompt_for_location_choice = !Order.getLocation() && Locations.hasLocationFirstOrderFlow();
            var product = Menu.getProducts().find({
                id: id
            });
            if (!product) {
                throw new Error('Product not found');
            }
            var order_product = product.createOrderProductInstance();
            if (order_product.shouldQuickAddToOrder()) {
                if (should_prompt_for_location_choice) {
                    UI.trigger('showLocationsFinder');
                    _.defer(function() {
                        Order.addProduct(order_product);
                    });
                } else {
                    Order.addProduct(order_product);
                }
                return;
            }
            if (should_prompt_for_location_choice) {
                UI.trigger('showLocationsFinder');
                _.defer(function() {
                    Order.addProduct(order_product);
                    UI.once('modalClose', function() {
                        _.defer(function() {
                            if (Order.containsProduct(order_product)) {
                                UI.trigger('editProduct', order_product);
                            }
                        });
                    });
                });
            } else {
                UI.trigger('editProduct', order_product);
            }
        },
        equaliseProductElementHeights: function() {
            this.doEqualisationOfProductElementHeights();
            this.timeouts = this.timeouts || [];
            _.each(this.timesouts, clearTimeout);
            this.timeouts[0] = setTimeout(this.doEqualisationOfProductElementHeights, 500);
            this.timeouts[1] = setTimeout(this.doEqualisationOfProductElementHeights, 1000);
            this.timeouts[2] = setTimeout(this.doEqualisationOfProductElementHeights, 3500);
            this.timeouts[3] = setTimeout(this.doEqualisationOfProductElementHeights, 5500);
            this.timeouts[4] = setTimeout(this.doEqualisationOfProductElementHeights, 7500);
            this.timeouts[5] = setTimeout(this.doEqualisationOfProductElementHeights, 10000);
            this.timeouts[6] = setTimeout(this.doEqualisationOfProductElementHeights, 14000);
        },
        doEqualisationOfProductElementHeights: function() {
            if (!this.shouldEqualiseProductElementHeights()) {
                return;
            }
            var that = this;
            Menu.getActiveMenuCategories().each(function(category) {
                var height = that.getMaxHeightOfCategory(category);
                that.setHeightOfCategoryProducts(category, height);
            });
        },
        setHeightOfCategoryProducts: function(category, height) {
            var selector = '[data-category="' + category.id + '"] .m2g-menu-product';
            var $elements = this.$(selector);
            $elements.css('minHeight', height);
        },
        getMaxHeightOfCategory: function(category) {
            var height = 0;
            this.$('[data-category="' + category.id + '"] .m2g-menu-product-container .m2g-menu-product').each(function() {
                var $element = $(this);
                $element.css('minHeight', 'auto');
                var element_height = $element.outerHeight(true);
                if (height < element_height) {
                    height = element_height;
                }
            });
            if (height < 130) {
                height = 130;
            }
            return height;
        },
        shouldEqualiseProductElementHeights: function() {
            return this.$('[data-product-equalise-size]').is(':visible');
        },
        equaliseProductElementHeightsOnWindowResize: function() {
            $(window).resize(_.debounce(this.doEqualisationOfProductElementHeights, 5));
        }
    });
})(Mobi2Go, jQuery);
(function(Mobi2Go, $) {
    'use strict';
    var validateEmailHelper = Mobi2Go.helpers.validator.email,
        UI = Mobi2Go.UI,
        Customer = Mobi2Go.Customer,
        helpers = Mobi2Go.helpers,
        sanitiser = Mobi2Go.helpers.sanitiser,
        $view = $('[data-view="customer"]'),
        $email_input_container = $('[data-email-input]', $view),
        $email_input = $('[data-email-input] input', $view),
        $email_logged_in = $('[data-email-logged-in]', $view),
        $name_input = $('[data-name] input', $view),
        $phone_input = $('[data-phone-number] input', $view),
        $loyalty_id = $('[data-loyalty-id]', $view),
        $loyalty_id_input = $('[data-loyalty-id] input', $view),
        $login_password = $('[data-login-password]', $view),
        $login_password_input = $('[data-login-password] input', $view),
        $forgot_password = $('[data-forgot-password]', $view),
        $create_account_button = $('[data-create-account]', $view),
        $register_button = $('[data-register]', $view),
        $register_password = $('[data-register-password]', $view),
        $register_password_input = $('[data-register-password] input', $view),
        $terms_and_conditions_checkbox = $('[data-terms-and-conditions-checkbox]', $view),
        $subscriber_checkbox = $('[data-subscriber-checkbox]', $view),
        $change_password = $('[data-change-password]', $view);
    new Mobi2Go.UI.View({
        name: 'customer',
        model: 'Customer',
        el: '[data-view="customer"]',
        section: new UI.OrderSection('[data-order-section="customer"]'),
        initialise: function() {
            var that = this;
            Mobi2Go.UI.helpers.placeholderText(this.el);
            Mobi2Go.onReady(function(state) {
                var email = helpers.cookie.get('MOBI2GO_USER_EMAIL');
                if (email && (!state.customer || !state.customer.email)) {
                    $email_input.val(email);
                    that.validateEmail();
                }
            });
            if (Mobi2Go.headoffice.customer_loyalty_scheme_name) {
                var scheme_name = Mobi2Go.headoffice.customer_loyalty_scheme_name;
                $loyalty_id_input.attr({
                    placeholder: scheme_name,
                    title: scheme_name
                });
                $loyalty_id.show();
            } else {
                $loyalty_id.remove();
            }
            UI.bind('customerPasswordRecoveryCancelled', function() {
                $forgot_password.show();
            });
        },
        keyup_timeouts: {
            email: null,
            name: null,
            phone: null
        },
        DOM_listeners: {
            'keyup [data-email-input] input': function() {
                this.sanitiseEmail();
                clearTimeout(this.keyup_timeouts.email);
                this.keyup_timeouts.email = setTimeout(this.validateEmail, 500);
            },
            'keyup [data-name] input': function(e) {
                e.keyCode === 13 && $phone_input.focus();
            },
            'keyup [data-phone-number] input': function(e) {
                if (e.keyCode === 13 && !this.model.isLoggedIn()) {
                    $register_password_input.focus();
                }
                this.sanitisePhone();
            },
            'change [data-email-input] input': 'validateEmail',
            'change [data-name] input': 'updateName',
            'change [data-phone-number] input': 'updatePhone',
            'change [data-loyalty-id] input': 'updateLoyaltyId',
            'keyup [data-login-password] input': function(e) {
                e.keyCode === 13 && this.submitLogIn();
            },
            'keyup [data-register-password] input': function(e) {
                e.keyCode === 13 && this.submitRegister();
            },
            'click [data-change-password]': function() {
                this.model.isLoggedIn() && UI.trigger('showCustomerPasswordUpdater');
            },
            'click [data-forgot-password] button': function() {
                this.promptPasswordReset();
            },
            'click [data-create-account] button': 'resetForm',
            'click [data-login]': 'submitLogIn',
            'click [data-register]': 'submitRegister',
            'click [data-logout]': 'submitLogOut',
            'click [data-email-input]': function() {
                if (Customer.isLoggedIn()) {
                    UI.trigger('showCustomerEmailUpdater');
                }
            },
            'change [data-terms-and-conditions-checkbox]': function() {
                if ($terms_and_conditions_checkbox.is(':checked')) {
                    $register_button.removeClass('m2g-button--disabled');
                } else {
                    $register_button.addClass('m2g-button--disabled');
                }
            },
            'click [data-terms-and-conditions-link]': function() {
                UI.trigger('showPolicy', 'termsandconditions');
            },
            'click [data-login-label]': function() {
                var email_val = $email_input.val();
                if (!email_val || !validateEmailHelper(email_val).is_valid) {
                    UI.alert({
                        title: 'Enter your email address',
                        body: 'To log in enter your email address.',
                        temp: true,
                        primary_button: null,
                        el: $email_input.parent()
                    });
                    $email_input.focus();
                } else {
                    this.submitLogIn();
                }
            },
            'click [data-signup-label]': function() {
                if (!$email_input.val()) {
                    UI.alert({
                        title: 'Enter your email address',
                        body: 'To create an account enter your email address.',
                        temp: true,
                        primary_button: null,
                        el: $email_input.parent()
                    });
                    $email_input.focus();
                } else {
                    this.submitRegister();
                }
            },
            'click [data-subscriber-label]': function() {
                $subscriber_checkbox.click();
            },
        },
        resetForm: function() {
            $email_input.val('').change().focus();
        },
        sanitisePhone: function() {
            var phone = $phone_input.val();
            var sanitised_phone = helpers.sanitiser.phoneNumber(phone);
            if (phone !== sanitised_phone) {
                $phone_input.val(sanitised_phone);
            }
        },
        updateName: function() {
            this.model.isLoggedIn() && this.updateDetails();
        },
        updatePhone: function() {
            this.model.isLoggedIn() && this.updateDetails();
        },
        updateLoyaltyId: function() {
            this.model.isLoggedIn() && this.updateDetails();
        },
        sanitiseEmail: function() {
            var email = $email_input.val();
            var sanitised_email = sanitiser.email(email);
            if (email !== sanitised_email) {
                $email_input.val(sanitised_email);
            }
        },
        validateEmail: function() {
            var that = this;
            clearTimeout(this.keyup_timeouts.email);
            var email = $email_input.val();
            this.section.clearStatus();
            this.resetView();
            if (validateEmailHelper(email).is_valid) {
                this.section.setStatus('', 'spinner');
                this.model.isEmailRegistered(email, function(is_registered) {
                    if (that.model.isLoggedIn()) return;
                    if (is_registered) {
                        that.showLoginPassword(true);
                    } else {
                        that.showRegisterPassword(true);
                    }
                });
            } else {
                this.enableEmail(true);
                if (email === '') {
                    this.section.clearStatus();
                    helpers.cookie.set('MOBI2GO_USER_EMAIL', '');
                } else {
                    this.section.setStatus('Enter email', 'mail');
                }
                $view.attr('class', 'm2g-customer m2g-customer--logged-out m2g-order-section');
            }
        },
        promptPasswordReset: function($el) {
            var email = $email_input.val(),
                that = this;
            $el = $el || $email_input.parent();
            UI.alert({
                title: 'Forgot your password?',
                body: 'Click \'Reset password\' and a password reset email will be sent to your email address.',
                primary_button: 'Reset password',
                onPrimaryButtonClick: function() {
                    that.model.sendPasswordReset(email);
                    $forgot_password.hide();
                    UI.trigger('showCustomerPasswordRecovery', email);
                },
                el: $el,
                secondary_button: 'Cancel',
                onSecondaryButtonClick: function() {
                    that.login_failures = {};
                }
            });
        },
        submitLogIn: function() {
            if ($login_password_input.val().length > 0) {
                this.section.setStatus('', 'spinner');
                this.model.logIn($email_input.val(), $login_password_input.val());
            } else {
                UI.alert({
                    title: 'Enter password',
                    body: 'To log in enter your password.',
                    temp: true,
                    primary_button: null,
                    el: $login_password
                });
            }
        },
        submitRegister: function() {
            var that = this,
                customer_data = {
                    email: $email_input.val(),
                    name: $name_input.val(),
                    phone_number: $phone_input.val(),
                    password: $register_password_input.val(),
                    is_subscriber: $subscriber_checkbox.prop('checked')
                };
            if (!this.isTermsAndConditionsChecked()) {
                UI.alert({
                    title: 'Terms and conditions',
                    body: 'You must agree to the terms and conditions to sign up',
                    temp: true,
                    primary_button: 'I Agree',
                    onPrimaryButtonClick: function() {
                        that.checkTermsAndConditions();
                    },
                    el: $terms_and_conditions_checkbox
                });
                return;
            }
            this.section.setStatus('', 'spinner');
            try {
                this.model.create(customer_data, function(response) {
                    UI.alert({
                        title: 'Account created',
                        body: 'Your account has been created.',
                        temp: true,
                        primary_button: null,
                        el: that.$el
                    });
                });
            } catch (error) {
                that.section.clearStatus();
                if (customer_data.name.length === 0) {
                    UI.alert({
                        title: 'Enter your name',
                        body: 'Please provide your full name.',
                        temp: true,
                        primary_button: null,
                        el: $name_input.parent()
                    });
                    $name_input.focus();
                } else if (error.message === 'name required to create customer') {
                    UI.alert({
                        title: 'Enter name',
                        body: 'Please provide your full name.',
                        temp: true,
                        primary_button: null,
                        el: $name_input.parent()
                    });
                    $name_input.focus();
                } else if (customer_data.phone_number.length === 0) {
                    UI.alert({
                        title: 'Enter a phone number',
                        body: 'Please enter a phone number.',
                        temp: true,
                        primary_button: null,
                        el: $phone_input.parent()
                    });
                    $phone_input.focus();
                } else if (error.message === 'valid phone number required to create customer') {
                    UI.alert({
                        title: 'Invalid phone number',
                        body: 'Please enter a valid phone number.',
                        temp: true,
                        primary_button: null,
                        el: $phone_input.parent()
                    });
                    $phone_input.focus();
                } else if (customer_data.password.length === 0) {
                    UI.alert({
                        title: 'Enter a password',
                        body: 'Please enter a password for your new account',
                        temp: true,
                        primary_button: null,
                        el: $register_password_input.parent()
                    });
                    $register_password_input.focus();
                } else if (error.message === 'valid password required to create customer') {
                    UI.alert({
                        title: 'Invalid password',
                        body: 'Password must be at least 6 characters long.',
                        temp: true,
                        primary_button: null,
                        el: $register_password_input.parent()
                    });
                    $register_password_input.focus();
                }
            }
        },
        submitLogOut: function() {
            this.section.setStatus('', 'spinner');
            this.model.logOut();
        },
        updateDetails: function() {
            var that = this,
                new_details = {
                    name: $name_input.val(),
                    phone_number: $phone_input.val(),
                    loyalty_id: $loyalty_id_input.val()
                };
            if (new_details.phone_number.length < 5) {
                UI.alert({
                    title: 'Invalid phone number',
                    body: 'Please enter a valid phone number',
                    temp: true,
                    primary_button: null,
                    el: $phone_input.parent()
                });
                $register_password_input.focus();
            }
            try {
                this.model.update(new_details, function() {
                    $name_input.val(that.model.getName());
                    $phone_input.val(that.model.getPhoneNumber());
                    $loyalty_id_input.val(that.model.getLoyaltyId());
                });
            } catch (error) {
                $name_input.val(this.model.getName());
                $phone_input.val(this.model.getPhoneNumber());
                $loyalty_id_input.val(this.model.getLoyaltyId());
            }
        },
        showLoginPassword: function(status) {
            if (status) {
                this.showRegisterPassword(false);
                this.showInputs(false);
                this.section.setStatus('Existing account', 'down');
                $view.attr('class', 'm2g-customer m2g-customer--logged-out m2g-customer--logging-in m2g-order-section');
                $login_password.show();
                $forgot_password.show();
                $create_account_button.show();
                $login_password_input.focus();
            } else {
                $login_password.hide();
                $forgot_password.hide();
                $create_account_button.hide();
            }
        },
        showRegisterPassword: function(status) {
            if (status) {
                this.showLoginPassword(false);
                this.showInputs(true);
                this.section.setStatus('New account', 'down');
                $view.attr('class', 'm2g-customer m2g-customer--logged-out m2g-customer--registering  m2g-order-section');
                $register_password.show();
            } else {
                $register_password.hide();
            }
        },
        showInputs: function(status) {
            var method = status ? 'show' : 'hide';
            $phone_input.parent()[method]();
            $name_input.parent()[method]();
            if (this.model.isLoggedIn() && status) {
                $loyalty_id_input.parent().show();
            } else {
                $loyalty_id_input.parent().hide();
            }
        },
        enableEmail: function(status) {
            if (status) {
                $email_input.removeAttr('disabled').removeClass('m2g-input--disabled');
            } else {
                $email_input.attr('disabled', 'disabled').addClass('m2g-input--disabled');
            }
        },
        resetView: function() {
            this.showLoginPassword(false);
            this.showRegisterPassword(false);
            this.showInputs(true);
            this.enableEmail(true);
        },
        model_listeners: {
            logIn: 'modelLogInSuccess',
            logInFail: 'modelLogInFail',
            logOut: 'modelLogOut',
            update: function() {
                $loyalty_id_input.val(this.model.getLoyaltyId());
            },
            updatePassword: function() {
                UI.helpers.scrollTo($view, function() {
                    UI.alert({
                        title: 'Password Updated',
                        body: 'Your password has been updated.',
                        temp: true,
                        primary_button: null,
                        el: $email_input_container
                    });
                }, false, -100);
            },
            updateEmail: function() {
                helpers.cookie.set('MOBI2GO_USER_EMAIL', Customer.getEmail(), 60 * 60 * 24 * 24);
                $email_input.val(Customer.getEmail());
                UI.helpers.scrollTo($view, function() {
                    UI.alert({
                        title: 'Email Updated',
                        body: 'Your email address has been updated.',
                        temp: true,
                        primary_button: null,
                        el: $email_input_container
                    });
                }, false, -100);
            },
        },
        modelLogInSuccess: function(customer) {
            this.showLoginPassword(false);
            this.showRegisterPassword(false);
            this.showInputs(true);
            this.enableEmail(false);
            $change_password.removeClass('m2g-hidden');
            $view.attr('class', 'm2g-customer m2g-customer--logged-in  m2g-order-section');
            $email_input.val(customer.email);
            $name_input.val(customer.name);
            $phone_input.val(customer.phone_number);
            $loyalty_id_input.val(customer.loyalty_id);
            helpers.cookie.set('MOBI2GO_USER_EMAIL', customer.email, 60 * 60 * 24 * 24);
            this.login_failures = {};
            this.section.setStatus('<span class="m2g-text--link m2g-text--offset m2g-text--touchable" data-logout>Log out</span>', '');
            UI.closeAlert();
        },
        login_failures: {},
        modelLogInFail: function() {
            var pass = $login_password_input.val();
            if (this.login_failures[pass] === undefined) {
                this.login_failures[pass] = 0;
            }
            var n_failures = this.login_failures[pass]++,
                n_passwords = _.keys(this.login_failures).length;
            if (n_failures >= 4 || n_passwords >= 3) {
                this.promptPasswordReset($login_password_input.parent());
            } else {
                UI.alert({
                    title: 'Incorrect password',
                    body: 'Password and email address do not match.',
                    el: $login_password,
                    primary_button: null
                });
            }
            this.section.setStatus('Incorrect password', 'alert');
        },
        modelLogOut: function() {
            this.resetView();
            this.section.clearStatus();
            $change_password.addClass('m2g-hidden');
            $view.attr('class', 'm2g-customer m2g-customer--logged-out  m2g-order-section');
            this.$('input').val('');
        },
        checkTermsAndConditions: function() {
            $terms_and_conditions_checkbox.prop('checked', true);
        },
        uncheckTermsAndConditions: function() {
            $terms_and_conditions_checkbox.prop('checked', false);
        },
        isTermsAndConditionsChecked: function() {
            return $terms_and_conditions_checkbox.prop('checked');
        }
    });
})(Mobi2Go, jQuery);
(function(Mobi2Go, $, _) {
    'use strict';
    var Customer = Mobi2Go.Customer,
        Order = Mobi2Go.Order;
    Mobi2Go.UI.View({
        name: 'customer_last_order',
        model: Customer,
        el: '[data-view="customer-last-order"]',
        template: $('[data-template="customer-last-order"]').html(),
        query_override: {},
        order_filter: function() {
            return true;
        },
        initialise: function() {
            var that = this;
            Customer.bind({
                logIn: this.fetchCustomersLastOrderForMenu,
                logOut: this.reset
            });
            Order.bind({
                updateMenu: function() {
                    that.render();
                    that.fetchCustomersLastOrderForMenu();
                },
                updateProductsQuantity: function(quantity) {
                    quantity ? that.hide() : that.show();
                }
            });
        },
        fetchCustomersLastOrderForMenu: function() {
            var menu = Order.getMenu();
            if (!Customer.isLoggedIn() || !menu) {
                return;
            }
            if (this.last_orders_by_menu[menu.id]) {
                this.render();
                return;
            }
            var that = this,
                query = _.extend({
                    menu: menu.id,
                    progress_phase: 'confirmed',
                    progress_status: 'fulfilled',
                    limit: 1,
                    sort_by: 'desc'
                }, this.query_override);
            this.last_orders_by_menu[menu.id] = true;
            Customer.getOrders(query, function(orders) {
                orders = _.filter(orders, that.order_filter);
                that.last_orders_by_menu[menu.id] = orders ? orders[0] : null;
                that.render();
            });
        },
        render: function() {
            var html = this.template({
                order: this.getLastOrderState()
            });
            this.$el.html(html);
        },
        last_orders_by_menu: {},
        getLastOrderState: function() {
            var menu = Order.getMenu();
            return menu ? (this.last_orders_by_menu[menu.id] || null) : null;
        },
        loadLastOrder: function() {
            Order.apply(this.getLastOrderState() || {}).save(function() {
                Order.log(400, 'customer\'s last order loaded');
            });
        },
        hide: function() {
            this.$el.addClass('m2g-hidden');
        },
        show: function() {
            this.$el.removeClass('m2g-hidden');
        },
        reset: function() {
            this.last_order = {};
            this.render();
        },
        DOM_listeners: {
            'click [data-load-last-order]': 'loadLastOrder'
        }
    });
})(Mobi2Go, jQuery, this._ || exports._);
(function(Mobi2Go, $) {
    'use strict';
    var Order = Mobi2Go.Order;
    var Customer = Mobi2Go.Customer;
    Mobi2Go.UI.View({
        name: 'customer_address',
        model: Order,
        el: '[data-view="customer-address"]',
        template: $('[data-template="customer-address"]').html(),
        initialise: function() {
            this.modal = new Mobi2Go.UI.Modal(this.$el);
            Mobi2Go.UI.bind('showCustomerAddresses', this.show);
        },
        model_listeners: {
            updateAddress: function(address) {
                !address && this.clearFormData();
            }
        },
        address_id: null,
        render: function(address_id, type) {
            var address,
                addresses = Order.getAvailableAddresses(),
                template_data,
                html;
            this.setSpinner(false);
            address_id = +address_id;
            if (address_id) {
                address = Mobi2Go.Customer.getAddressById(address_id);
                this.address_id = address_id;
            } else {
                address = this.formData();
                this.address_id = null;
                address.type = address.type || 'residential';
            }
            if (type) {
                address.type = type;
            }
            template_data = {
                address: address,
                address_id: this.address_id,
                addresses: addresses,
                delivery_areas: Order.getAvailableDeliveryAreas()
            };
            html = this.template(template_data);
            this.$('[data-form]').html(html);
            Mobi2Go.UI.trigger('customerAddressRendered', address);
            Mobi2Go.UI.helpers.placeholderText(this.el);
        },
        formData: function() {
            return {
                type: this.$('[data-type]').val(),
                name: this.$('[data-name]').val() || '',
                specific_number: this.$('[data-specific-number]').val() || '',
                street_number: this.$('[data-street-number]').val(),
                street_name: this.$('[data-street-name]').val(),
                suburb_id: +this.$('[data-suburb]').val(),
                post_code: this.$('[data-post-code]').val(),
                comment: this.$('[data-comment]').val()
            };
        },
        clearFormData: function() {
            this.$('[data-type]').val(''),
                this.$('[data-name]').val(''),
                this.$('[data-specific-number]').val(''),
                this.$('[data-street-number]').val(''),
                this.$('[data-street-name]').val(''),
                this.$('[data-suburb]').val(''),
                this.$('[data-post-code]').val(''),
                this.$('[data-comment]').val('');
        },
        DOM_listeners: {
            'change [data-addresses]': 'changeAddress',
            'change [data-type]': 'changeAddressType',
            'click [data-new-address]': 'newAddress',
            'click [data-confirm]': 'saveAddress'
        },
        changeAddress: function() {
            var address_id = this.$('[data-addresses]').val();
            this.render(address_id);
        },
        changeAddressType: function() {
            var type = this.$('[data-type]').val();
            this.render(this.address_id, type);
        },
        newAddress: function() {
            this.address_id = null;
            this.clearFormData();
            this.render();
        },
        saveAddress: function() {
            var form_data = this.formData(),
                that = this;
            this.setSpinner(true);
            try {
                if (this.address_id) {
                    Customer.updateAddressById(this.address_id, form_data, saveCallback);
                } else {
                    Customer.createAddress(form_data).save(saveCallback);
                }
                this.setSpinner(false);
            } catch (error) {
                this.setError(error.message);
                this.setSpinner(false);
            }

            function saveCallback(response) {
                Mobi2Go.Order.setAddressById(response.id, true);
                that.address_id = response.id;
                that.hide();
            }
        },
        setSpinner: function(status) {
            this.$('[data-spinner]')[status ? 'show' : 'hide']();
            this.$('[data-confirm]')[status ? 'hide' : 'show']();
        },
        setError: function(message) {
            if (message) {
                this.$('[data-error]').show().text(message);
            } else {
                this.$('[data-error]').hide();
            }
        },
        show: function() {
            if (Order.getLocation().delivery.mode !== 'suburb_list') {
                return;
            }
            if (Order.getMethod() !== 'delivery') {
                return;
            }
            if (!Customer.isLoggedIn()) {
                Mobi2Go.UI.trigger('promptProgress');
                return;
            }
            var order_address = Order.getAddress();
            this.render(order_address && order_address.id || null);
            this.modal.open();
            this.$('[data-type]').focus();
        },
        hide: function() {
            this.modal.close();
        }
    });
})(Mobi2Go, jQuery);
'use strict';
var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
            }
        }
    }
    return target;
};

function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError('Cannot call a class as a function');
    }
}

function _possibleConstructorReturn(self, call) {
    if (!self) {
        throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
    }
    return call && (typeof call === 'object' || typeof call === 'function') ? call : self;
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}(function(Mobi2Go, $, _) {
    'use strict';
    var UI = Mobi2Go.UI;
    var Order = Mobi2Go.Order;
    var Customer = Mobi2Go.Customer;
    var MapService = Mobi2Go.MapsService;
    var CustomerAddress = Mobi2Go._class.CustomerAddress;
    var PropTypes = React.PropTypes;
    var classNames = Mobi2Go.helpers.classNames;
    var AddressFormPredictions = function(_React$Component) {
        _inherits(AddressFormPredictions, _React$Component);

        function AddressFormPredictions() {
            var _Object$getPrototypeO;
            var _temp,
                _this,
                _ret;
            _classCallCheck(this, AddressFormPredictions);
            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }
            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_Object$getPrototypeO = Object.getPrototypeOf(AddressFormPredictions)).call.apply(_Object$getPrototypeO, [
                    this
                ].concat(args))), _this), _this.emphasisMatchedStrings = function(description, matched_substrings) {
                    var sections_to_replace = _.map(matched_substrings, function(match) {
                        return description.substr(match.offset, match.length);
                    });
                    _.each(sections_to_replace, function(section) {
                        description = description.replace(section, '<strong>' + section + '</strong>');
                    });
                    return React.createElement('span', {
                        dangerouslySetInnerHTML: {
                            __html: description
                        }
                    });
                }, _this.render = function() {
                    return React.createElement('div', {
                        className: 'm2g-customer-address-form-predictions-container m2g-autocomplete-container',
                        onMouseEnter: _this.props.onMouseEnter,
                        onMouseLeave: _this.props.onMouseLeave
                    }, React.createElement('div', {
                        className: 'm2g-customer-address-form-predictions m2g-autocomplete'
                    }, React.createElement('div', {
                        className: 'm2g-customer-address-form-predictions-list m2g-autocomplete-list'
                    }, _this.props.list.map(function(item, i) {
                        return React.createElement('div', {
                            key: i,
                            tabindex: '0',
                            onClick: _this.props.onSelect.bind(_this, item),
                            onFocus: _this.props.onHighlight.bind(_this, item),
                            onMouseEnter: _this.props.onHighlight.bind(_this, item),
                            onTouchStart: _this.props.onSelect.bind(_this, item),
                            className: classNames('m2g-customer-address-form-predictions-item m2g-autocomplete-item', {
                                'm2g-autocomplete-item--highlighted': item.place_id === _this.props.highlighted_item.place_id
                            })
                        }, React.createElement('span', {
                            className: classNames('m2g-icon', 'm2g-customer-address-form-predictions-item-icon', 'm2g-autocomplete-item-icon', {
                                'm2g-icon--location': !item.is_saved_address,
                                'm2g-icon--star': item.is_saved_address
                            })
                        }), React.createElement('span', {
                            className: 'm2g-autocomplete-item-text'
                        }, _this.emphasisMatchedStrings(item.description, item.matched_substrings)), item.is_saved_address && React.createElement('span', {
                            className: classNames('m2g-icon', 'm2g-icon--cross', 'm2g-customer-address-form-predictions-item-saved-icon'),
                            onClick: function onClick(e) {
                                _this.props.onDelete(item.address);
                                e.stopPropagation();
                            }
                        }));
                    }, _this)), React.createElement('div', {
                        className: 'm2g-customer-address-form-predictions-logo-container m2g-autocomplete-logo-container'
                    }, React.createElement('img', {
                        className: 'm2g-autocomplete-logo m2g-autocomplete-logo--on-light',
                        src: Mobi2Go.app.base_url + '/store/application/ui/components/img/maps/powered-by-google-on-white.png',
                        alt: 'Powered by google'
                    }), React.createElement('img', {
                        className: 'm2g-autocomplete-logo m2g-autocomplete-logo--on-dark',
                        src: Mobi2Go.app.base_url + '/store/application/ui/components/img/maps/powered-by-google-on-non-white.png',
                        alt: 'Powered by google'
                    }))));
                }, _temp),
                _possibleConstructorReturn(_this, _ret);
        }
        return AddressFormPredictions;
    }(React.Component);
    AddressFormPredictions.propTypes = {
        highlighted_item: PropTypes.any,
        list: PropTypes.arrayOf(PropTypes.shape({
            description: PropTypes.string,
            matched_substrings: PropTypes.array,
            terms: PropTypes.array
        })),
        onSelect: PropTypes.func,
        onDelete: PropTypes.func,
        onHighlight: PropTypes.func,
        onMouseEnter: PropTypes.func,
        onMouseLeave: PropTypes.func
    };
    var AddressFormComponent = function(_React$Component2) {
        _inherits(AddressFormComponent, _React$Component2);

        function AddressFormComponent() {
            var _Object$getPrototypeO2;
            var _temp2,
                _this2,
                _ret2;
            _classCallCheck(this, AddressFormComponent);
            for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                args[_key2] = arguments[_key2];
            }
            return _ret2 = (_temp2 = (_this2 = _possibleConstructorReturn(this, (_Object$getPrototypeO2 = Object.getPrototypeOf(AddressFormComponent)).call.apply(_Object$getPrototypeO2, [
                    this
                ].concat(args))), _this2), _this2.onChange = function(event) {
                    var $element = $(event.target);
                    var field = $element.attr('data-field');
                    var value = $element.val();
                    _this2.props.onChange(field, value);
                }, _this2.onFocus = function(event) {
                    var $element = $(event.target);
                    var field = $element.attr('data-field');
                    if (_this2.props.focused_field) {
                        _this2.props.onLastFocusedFieldChange(_this2.props.focused_field);
                    }
                    _this2.props.onFocusedFieldChange(field);
                    if (field === 'search_query') {
                        $element.select();
                    }
                }, _this2.onBlur = function(event) {
                    if (_this2.props.focused_field === $(event.target).attr('data-field')) {
                        if (_this2.props.focused_field) {
                            _this2.props.onLastFocusedFieldChange(_this2.props.focused_field);
                        }
                        _this2.props.onFocusedFieldChange(null);
                    }
                }, _this2.onKeyDown = function(event) {
                    var field = $(event.target).attr('data-field');
                    var key_code = event.keyCode;
                    var next = key_code === 40;
                    var prev = key_code === 38;
                    var enter = key_code === 13;
                    if (_this2.props.prediction_list_position !== null) {
                        if (enter) {
                            _this2.props.predictions.onSelect(_this2.props.predictions.highlighted_item);
                        }
                        if (next || prev) {
                            _this2.movePredictionCursor(next);
                        }
                    }
                }, _this2.movePredictionCursor = function() {
                    var next = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];
                    var list = _this2.props.predictions.list;
                    var current_item = _this2.props.predictions.highlighted_item;
                    var current_index = _.findIndex(list, {
                        place_id: current_item.place_id
                    });
                    var new_index = current_index + (next ? 1 : -1);
                    if (new_index < 0) {
                        new_index = list.length - 1;
                    } else if (new_index > list.length - 1) {
                        new_index = 0;
                    }
                    _this2.props.predictions.onHighlight(list[new_index]);
                }, _this2.input_events = {
                    onFocus: _this2.onFocus,
                    onBlur: _this2.onBlur,
                    onChange: _this2.onChange,
                    onKeyDown: _this2.onKeyDown
                }, _this2.getPredictionComponent = function() {
                    return React.createElement(AddressFormPredictions, _extends({}, _this2.props.predictions, {
                        onMouseEnter: function onMouseEnter() {
                            return _this2.props.onPredictionMouseEnterChange(true);
                        },
                        onMouseLeave: function onMouseLeave() {
                            return _this2.props.onPredictionMouseEnterChange(false);
                        }
                    }));
                }, _this2.render = function() {
                    var address = _this2.props.address;
                    var show_address_unavailable_message = address.is_saved || address.latitude && address.longitude && !_this2.props.is_address_available;
                    var show_search_prompt_message = !show_address_unavailable_message && (!address.latitude || !address.longitude);
                    var prediction_list_position = _this2.props.prediction_list_position;
                    return React.createElement('div', null, React.createElement('div', {
                        className: 'm2g-modal-header'
                    }, React.createElement('button', {
                        onClick: address_view.hide,
                        className: 'm2g-modal-close-button',
                        'data-dismiss': 'modal'
                    }, '×'), React.createElement('h2', {
                        className: 'm2g-h2 m2g-modal-title'
                    }, 'Delivery address')), React.createElement('div', {
                        'data-form': true,
                        className: 'm2g-modal-body'
                    }, React.createElement('div', {
                        'data-type': address.type,
                        className: classNames('m2g-customer-address-form', 'm2g-well', {
                            'm2g-customer-address-form--disabled': show_address_unavailable_message || show_search_prompt_message
                        })
                    }, React.createElement('div', {
                        'data-icon-before': true,
                        'data-icon-after': true,
                        className: 'm2g-customer-address-picker m2g-input-container'
                    }, React.createElement('span', {
                        className: classNames('m2g-icon', 'm2g-icon--search', 'm2g-customer-address-picker-search-icon'),
                        'data-before': true
                    }), React.createElement('input', _extends({
                        className: 'm2g-input m2g-customer-address-picker-input m2g-form-element--full-width',
                        'data-field': 'search_query',
                        placeholder: 'Find Address',
                        value: _this2.props.search_query || '',
                        type: 'text',
                        onClick: function onClick(event) {
                            event.target.select();
                        }
                    }, _this2.input_events)), _this2.props.predictions.list.length > 0 && React.createElement('span', {
                        className: 'm2g-icon m2g-icon--chevron-down m2g-customer-address-picker-chevron-icon',
                        'data-after': true
                    })), prediction_list_position === 1 && _this2.getPredictionComponent(), React.createElement('div', {
                        className: classNames('m2g-customer-address-message', 'm2g-customer-address-message--address-unavailable', {
                            'm2g-customer-address-message--hidden': !show_address_unavailable_message,
                            'm2g-customer-address-message--emphasis': _this2.props.emphasis_address_unavailable_message
                        })
                    }, React.createElement('div', {
                        className: 'm2g-customer-address-message-icon m2g-icon m2g-icon--alert'
                    }), React.createElement('div', {
                        className: 'm2g-customer-address-message-content'
                    }, React.createElement('strong', {
                        className: 'm2g-customer-address-message-content-title'
                    }, 'Delivery unavailable'), React.createElement('br', null), React.createElement('div', {
                        className: 'm2g-customer-address-message-content-message'
                    }, 'Address is outside delivery area')), React.createElement('div', {
                        className: 'm2g-customer-address-message-arrow-icon m2g-icon m2g-icon--up'
                    })), React.createElement('div', {
                        className: classNames('m2g-customer-address-message', 'm2g-customer-address-message--prompt-search', {
                            'm2g-customer-address-message--hidden': !show_search_prompt_message
                        })
                    }, React.createElement('div', {
                        className: 'm2g-customer-address-message-icon m2g-icon m2g-icon--search'
                    }), React.createElement('div', {
                        className: 'm2g-customer-address-message-content'
                    }, React.createElement('strong', {
                        className: 'm2g-customer-address-message-content-title'
                    }, 'Address search'), React.createElement('br', null), React.createElement('div', {
                        className: 'm2g-customer-address-message-content-message'
                    }, 'Enter your address above')), _this2.props.focused_field === null && React.createElement('div', {
                        className: 'm2g-customer-address-message-arrow-icon m2g-icon m2g-icon--up'
                    })), React.createElement('div', {
                        className: 'm2g-customer-address-form-animation-container'
                    }, React.createElement('div', {
                        'data-type-group': true,
                        className: 'm2g-customer-address-type m2g-customer-address-form-group'
                    }, React.createElement('div', {
                        'data-type-label': true,
                        className: 'm2g-customer-address-form-group-label'
                    }, 'Type'), React.createElement('div', {
                        className: 'm2g-input-container m2g-customer-address-form-group-controls m2g-form-element-group',
                        'data-icon-after': 'select'
                    }, React.createElement('select', _extends({
                        'data-type': true,
                        'data-field': 'type',
                        value: address.type
                    }, _this2.input_events, {
                        className: 'm2g-customer-address-type-select m2g-select m2g-form-element--full-width'
                    }), React.createElement('option', {
                        value: 'residential'
                    }, 'Residential Address'), React.createElement('option', {
                        value: 'business'
                    }, 'Business Address'), React.createElement('option', {
                        value: 'apartment'
                    }, 'Apartment'), React.createElement('option', {
                        value: 'hotel'
                    }, 'Hotel')))), React.createElement('div', {
                        'data-name-group': true,
                        className: classNames('m2g-customer-address-line-1', 'm2g-customer-address-form-group', {
                            'm2g-hidden': address.type === 'residential'
                        })
                    }, React.createElement('div', {
                        'data-name-label': true,
                        className: 'm2g-customer-address-form-group-label'
                    }, address.type === 'business' ? 'Business' : 'Building'), React.createElement('div', {
                        className: 'm2g-customer-address-form-group-controls m2g-form-element-group'
                    }, React.createElement('input', _extends({
                        'data-name': true,
                        'data-field': 'name',
                        className: 'm2g-customer-address-name-input m2g-input m2g-form-element--three-quarter-width m2g-form-element--right-join',
                        value: address.name || ''
                    }, _this2.input_events, {
                        placeholder: address.type == 'business' ? 'Business name' : address.type == 'hotel' ? 'Hotel/Lodging' : 'Building name'
                    })), React.createElement('input', _extends({
                        'data-specific-number': true,
                        'data-field': 'specific_number',
                        className: 'm2g-customer-address-specific-number-input m2g-input m2g-form-element--one-quarter-width m2g-form-element--left-join',
                        value: address.specific_number || ''
                    }, _this2.input_events, {
                        placeholder: address.type == 'business' ? 'Level' : address.type == 'hotel' ? 'Room' : 'Apt.'
                    })))), !show_address_unavailable_message && prediction_list_position === 2 && _this2.getPredictionComponent(), React.createElement('div', {
                        'data-street-group': true,
                        className: 'm2g-customer-address-line-2 m2g-customer-address-form-group'
                    }, React.createElement('div', {
                        'data-street-label': true,
                        className: 'm2g-customer-address-form-group-label'
                    }, 'Street'), address.type === 'residential' ? React.createElement('div', {
                        className: 'm2g-customer-address-form-group-controls m2g-form-element-group'
                    }, React.createElement('input', _extends({
                        'data-specific-number': true,
                        'data-field': 'specific_number',
                        className: 'm2g-customer-address-specific-number-input m2g-input m2g-form-element--one-quarter-width m2g-form-element--right-join',
                        value: address.specific_number || ''
                    }, _this2.input_events, {
                        placeholder: '(Unit)'
                    })), React.createElement('input', _extends({
                        'data-street-number': true,
                        'data-field': 'street_number',
                        readOnly: true,
                        className: 'm2g-customer-address-street-number-input m2g-input m2g-form-element--one-quarter-width m2g-form-element--center-join',
                        value: address.street_number || ''
                    }, _this2.input_events, {
                        placeholder: 'Number'
                    })), React.createElement('input', _extends({
                        'data-street-name': true,
                        'data-field': 'street_name',
                        readOnly: true,
                        className: 'm2g-customer-address-street-name-input m2g-input m2g-form-element--half-width m2g-form-element--left-join',
                        value: address.street_name || ''
                    }, _this2.input_events, {
                        placeholder: 'Street name'
                    }))) : React.createElement('div', {
                        className: 'm2g-customer-address-form-group-controls m2g-form-element-group'
                    }, React.createElement('input', _extends({
                        'data-street-number': true,
                        'data-field': 'street_number',
                        readOnly: true,
                        className: 'm2g-customer-address-street-number-input m2g-input m2g-form-element--one-quarter-width m2g-form-element--right-join',
                        value: address.street_number || ''
                    }, _this2.input_events, {
                        placeholder: 'Number'
                    })), React.createElement('input', _extends({
                        'data-street-name': true,
                        'data-field': 'street_name',
                        readOnly: true,
                        className: 'm2g-customer-address-street-name-input m2g-input m2g-form-element--three-quarter-width m2g-form-element--left-join',
                        value: address.street_name || ''
                    }, _this2.input_events, {
                        placeholder: 'Street name'
                    })))), !show_address_unavailable_message && prediction_list_position === 3 && _this2.getPredictionComponent(), React.createElement('div', {
                        'data-suburb-group': true,
                        className: 'm2g-customer-address-line-3 m2g-customer-address-form-group  m2g-customer-address-form-group--suburb'
                    }, React.createElement('div', {
                        'data-suburb-label': true,
                        className: 'm2g-customer-address-form-group-label'
                    }, 'Town/City'), React.createElement('div', {
                        className: 'm2g-input-container m2g-customer-address-suburb m2g-customer-address-form-group-controls'
                    }, React.createElement('input', _extends({
                        'data-suburb': true,
                        'data-field': 'suburb',
                        readOnly: true,
                        className: 'm2g-customer-address-suburb-input m2g-input m2g-form-element--one-quarter-width m2g-form-element--right-join',
                        value: address.suburb || '',
                        placeholder: 'Town/City'
                    }, _this2.input_events)), React.createElement('input', _extends({
                        'data-post-code': true,
                        'data-field': 'post_code',
                        className: 'm2g-customer-address-post-code-input m2g-input m2g-form-element--left-join',
                        value: address.post_code || ''
                    }, _this2.input_events, {
                        placeholder: 'Post code'
                    })))), !show_address_unavailable_message && prediction_list_position === 4 && _this2.getPredictionComponent(), React.createElement('div', {
                        'data-comment-group': true,
                        className: 'm2g-customer-address-form-group m2g-customer-address-form-group--comment'
                    }, React.createElement('div', {
                        'data-comment-label': true,
                        className: 'm2g-customer-address-form-group-label'
                    }, 'Note'), React.createElement('div', {
                        className: 'm2g-customer-address-form-group-controls m2g-form-element-group'
                    }, React.createElement('textarea', _extends({
                        'data-comment': true,
                        'data-field': 'comment',
                        className: 'm2g-customer-address-comment-textarea m2g-textarea m2g-form-element--full-width',
                        placeholder: 'Enter any special delivery instructions'
                    }, _this2.input_events, {
                        value: address.comment || ''
                    }))))))), React.createElement('div', {
                        className: 'm2g-modal-footer'
                    }, React.createElement('div', {
                        className: classNames('m2g-customer-address-wait-time', 'm2g-modal-footer-left', {
                            'm2g-customer-address-wait-time--hidden': !_this2.props.is_address_available
                        })
                    }, React.createElement('span', {
                        className: 'm2g-customer-address-wait-time-icon m2g-icon m2g-icon--large m2g-icon--clock'
                    }), React.createElement('div', {
                        className: 'm2g-customer-address-wait-time-content'
                    }, React.createElement('strong', {
                        className: 'm2g-customer-address-wait-time-content-minutes'
                    }, _this2.props.location.wait_times.delivery, ' mins'), React.createElement('div', {
                        className: 'm2g-customer-address-wait-time-content-text'
                    }, 'est. delivery time'))), React.createElement('div', {
                        className: 'm2g-modal-footer-right'
                    }, React.createElement('span', {
                        'data-spinner': true,
                        className: 'm2g-customer-address-confirm-spinner m2g-icon m2g-icon--spinner m2g-icon--medium m2g-hidden'
                    }), React.createElement('button', {
                        'data-confirm': true,
                        onClick: _this2.props.onSaveClick,
                        className: classNames('m2g-customer-address-confirm-button', 'm2g-button', 'm2g-button--primary', {
                            'm2g-button--disabled': !_this2.props.is_address_available
                        })
                    }, 'OK'))));
                }, _temp2),
                _possibleConstructorReturn(_this2, _ret2);
        }
        return AddressFormComponent;
    }(React.Component);
    AddressFormComponent.propTypes = {
        address: PropTypes.any,
        onChange: PropTypes.func,
        search_query: PropTypes.string,
        predictions: PropTypes.shape({
            force_hide: PropTypes.bool,
            highlighted_item: PropTypes.any,
            list: PropTypes.arrayOf(PropTypes.shape({
                description: PropTypes.string,
                matched_substrings: PropTypes.array,
                terms: PropTypes.array
            })),
            onSelect: PropTypes.func,
            onHighlight: PropTypes.func,
            onDelete: PropTypes.func
        }),
        is_address_available: PropTypes.bool,
        location: PropTypes.any,
        prediction_list_position: PropTypes.any,
        onFocusedFieldChange: PropTypes.func,
        onLastFocusedFieldChange: PropTypes.func,
        onPredictionMouseEnterChange: PropTypes.func,
        focused_field: PropTypes.string,
        last_focused_field: PropTypes.string,
        is_mouseover_predictions: PropTypes.bool,
        emphasis_address_unavailable_message: PropTypes.bool
    };
    var AddressForm = function(_React$Component3) {
        _inherits(AddressForm, _React$Component3);

        function AddressForm() {
            _classCallCheck(this, AddressForm);
            var _this3 = _possibleConstructorReturn(this, Object.getPrototypeOf(AddressForm).call(this));
            _this3.state = {
                address: null,
                search_query: '',
                service_prediction_list: [],
                saved_address_prediction_list: [],
                force_hide_predictions: false,
                highlighted_prediction_item: null,
                focused_field: null,
                last_focused_field: null,
                is_mouseover_predictions: false,
                emphasis_address_unavailable_message: false
            };
            _this3.canRender = function() {
                return !!(_this3.state.address && Order.getCustomer() && Order.getLocation() && Order.getLocation().delivery.mode === 'map_polygons');
            };
            _this3.getSearchQuery = function() {
                if (_this3.state.search_query && _this3.state.focused_field === 'search_query' || _this3.state.last_focused_field === 'search_query' && _this3.state.is_mouseover_predictions) {
                    return _this3.state.search_query;
                } else if (_this3.state.address) {
                    return _this3.state.address.getPredictionQueryString();
                }
            };
            _this3.onFormChange = function(field, value) {
                if (_this3.state.address) {
                    if (field === 'search_query') {
                        _this3.setState({
                            search_query: value
                        });
                    } else {
                        _this3.setState({
                            address: _this3.state.address.update(_defineProperty({}, field, value))
                        });
                    }
                    _this3.setState({
                        force_hide_predictions: false
                    }, function() {
                        _this3.updateServicePredictionList();
                        _this3.updateSavedAddressPredictionList();
                    });
                }
            };
            _this3.updateServicePredictionList = function() {
                if (!_this3.canRender()) {
                    return;
                }
                var maps_service = Order.getLocation().getMapsService();
                maps_service.getPlacePredictions(_this3.getSearchQuery(), function(service_prediction_list) {
                    service_prediction_list = service_prediction_list || [];
                    _this3.setState({
                        service_prediction_list: service_prediction_list
                    });
                    _this3.updateHighlightedPredictionItem();
                });
            };
            _this3.updateSavedAddressPredictionList = function() {
                if (!_this3.canRender()) {
                    return;
                }
                var available_addresses = Customer.getAddresses().filter(function(address) {
                    return address.latitude && address.longitude && address.isSaved() && (!_this3.state.address.id || _this3.state.address.id !== address.id);
                });
                var saved_address_prediction_list = _.map(available_addresses, function(address) {
                    var index = address.toString().toLowerCase().indexOf(_this3.state.search_query.toLowerCase());
                    var matched_substrings = [];
                    if (index !== -1) {
                        matched_substrings.push({
                            offset: index,
                            length: _this3.state.search_query.length
                        });
                    }
                    return {
                        is_saved_address: true,
                        place_id: address.id,
                        description: address.toString(),
                        matched_substrings: matched_substrings,
                        address: address
                    };
                });
                _this3.setState({
                    saved_address_prediction_list: saved_address_prediction_list
                }, _this3.updateHighlightedPredictionItem);
            };
            _this3.getPredictionList = function() {
                var list = _this3.state.service_prediction_list.concat(_this3.state.saved_address_prediction_list);
                return list.sort(function(a, b) {
                    if (a.is_saved_address && a.matched_substrings.length > 0) {
                        return -1;
                    }
                    if (b.is_saved_address && b.matched_substrings.length > 0) {
                        return 1;
                    }
                    return -1;
                });
            };
            _this3.updateHighlightedPredictionItem = function() {
                var prediction_list = _this3.getPredictionList();
                var highlighted_prediction_item = prediction_list.length ? prediction_list[0] : null;
                _this3.setState({
                    highlighted_prediction_item: highlighted_prediction_item
                });
            };
            _this3.onFocusedFieldChange = function(focused_field) {
                _this3.setState({
                    focused_field: focused_field,
                    force_hide_predictions: false
                });
                if (focused_field === 'search_query') {
                    _this3.setState({
                        search_query: ''
                    });
                }
            };
            _this3.onLastFocusedFieldChange = function(last_focused_field) {
                _this3.setState({
                    last_focused_field: last_focused_field
                });
            };
            _this3.onPredictionMouseEnterChange = function(is_mouseover_predictions) {
                _this3.setState({
                    is_mouseover_predictions: is_mouseover_predictions
                });
            };
            _this3.switchLocationIfAddressIsUnavailable = function(address) {
                if (!Order.getLocation().isAddressAvailable(address)) {
                    var locations = Mobi2Go.Locations.getAllWithDeliveryAvailableToPoint(address);
                    if (locations.length) {
                        Order.setLocation(locations[0]);
                    }
                }
            };
            _this3.onPredictionSelect = function(prediction) {
                if (prediction.is_saved_address) {
                    _this3.switchLocationIfAddressIsUnavailable(prediction.address);
                    _this3.setState({
                        address: prediction.address,
                        force_hide_predictions: true,
                        search_query: prediction.address.toString(),
                        service_prediction_list: []
                    }, _this3.updateSavedAddressPredictionList);
                } else {
                    MapService.getPlaceDetails(prediction, function(details) {
                        var address = _this3.state.address;
                        var was_address_available = !address.latitude || !address.longitude || _this3.isAddressAvailable();
                        if (address.isSaved()) {
                            address = Order.getCustomer().createAddress();
                        }
                        address.setFromGmapsPlaceDetail(details, prediction.description);
                        _this3.switchLocationIfAddressIsUnavailable(address);
                        _this3.setState({
                            address: address,
                            force_hide_predictions: true,
                            search_query: details.formatted_address
                        }, function() {
                            _this3.updateSavedAddressPredictionList();
                            if (!was_address_available && !_this3.isAddressAvailable()) {
                                setTimeout(_this3.emphasisAddressUnavailableMessage, 250);
                            }
                            Order.log(200, 'Delivery map polygon address query', {
                                address: address.get(),
                                is_address_available: _this3.isAddressAvailable()
                            });
                        });
                    });
                }
            };
            _this3.onPredictionHighlight = function(highlighted_prediction_item) {
                if (!highlighted_prediction_item.is_saved_address) {
                    MapService.getPlaceDetails(highlighted_prediction_item);
                }
                _this3.setState({
                    highlighted_prediction_item: highlighted_prediction_item
                });
            };
            _this3.onSavedAddressDelete = function(address) {
                Customer.removeAddressById(address.id);
                _this3.render();
            };
            _this3.isAddressAvailable = function() {
                return !!(_this3.state.address && _this3.state.address.isValid() && Order.getLocation() && Order.getLocation().isAddressAvailable(_this3.state.address));
            };
            _this3.onSaveClick = function() {
                if (_this3.isAddressAvailable()) {
                    _this3.state.address.save();
                    Order.setAddress(_this3.state.address);
                    address_view.hide();
                } else {
                    _this3.emphasisAddressUnavailableMessage();
                }
            };
            _this3.emphasisAddressUnavailableMessage = function() {
                _this3.setState({
                    emphasis_address_unavailable_message: true
                });
                clearTimeout(_this3.emphasisAddressUnavailableMessage.animation_timeout);
                _this3.emphasisAddressUnavailableMessage.animation_timeout = setTimeout(function() {
                    _this3.setState({
                        emphasis_address_unavailable_message: false
                    });
                }, 330);
            };
            _this3.getPredictionListPosition = function() {
                if (_this3.state.force_hide_predictions || _this3.state.service_prediction_list.length === 0 && _this3.state.saved_address_prediction_list.length === 0) {
                    return null;
                }
                if (_.include(['suburb'], _this3.state.focused_field) || _.include(['suburb'], _this3.state.last_focused_field) && _this3.state.is_mouseover_predictions && _this3.state.focused_field === null) {
                    return 4;
                }
                if (_this3.state.address.type === 'residential' && (_.include(['specific_number'], _this3.state.focused_field) || _.include(['specific_number'], _this3.state.last_focused_field) && _this3.state.is_mouseover_predictions && _this3.state.focused_field === null) || _.include(['street_name',
                        'street_number'
                    ], _this3.state.focused_field) || _.include(['street_name',
                        'street_number'
                    ], _this3.state.last_focused_field) && _this3.state.is_mouseover_predictions && _this3.state.focused_field === null) {
                    return 3;
                }
                if (_this3.state.address.type !== 'residential' && _.include(['name',
                        'specific_number'
                    ], _this3.state.focused_field) || _.include(['name',
                        'specific_number'
                    ], _this3.state.last_focused_field) && _this3.state.is_mouseover_predictions && _this3.state.focused_field === null) {
                    return 2;
                }
                if (_.include(['search_query'], _this3.state.focused_field) || _.include(['search_query'], _this3.state.last_focused_field) && _this3.state.is_mouseover_predictions && _this3.state.focused_field === null) {
                    return 1;
                }
            };
            _this3.render = function() {
                if (!_this3.canRender()) {
                    return null;
                }
                var prediction_list = _this3.getPredictionList();
                var highlighted_prediction_item = _this3.state.highlighted_prediction_item;
                if (highlighted_prediction_item === null && prediction_list.length) {
                    highlighted_prediction_item = prediction_list[0];
                }
                return React.createElement(AddressFormComponent, {
                    address: _this3.state.address,
                    location: Order.getLocation(),
                    search_query: _this3.state.search_query,
                    onChange: _this3.onFormChange,
                    onFocusedFieldChange: _this3.onFocusedFieldChange,
                    onLastFocusedFieldChange: _this3.onLastFocusedFieldChange,
                    onPredictionMouseEnterChange: _this3.onPredictionMouseEnterChange,
                    focused_field: _this3.state.focused_field,
                    last_focused_field: _this3.state.last_focused_field,
                    is_mouseover_predictions: _this3.state.is_mouseover_predictions,
                    is_address_available: _this3.isAddressAvailable(),
                    onSaveClick: _this3.onSaveClick,
                    emphasis_address_unavailable_message: _this3.state.emphasis_address_unavailable_message,
                    prediction_list_position: _this3.getPredictionListPosition(),
                    predictions: {
                        force_hide: _this3.state.force_hide_predictions,
                        list: prediction_list,
                        highlighted_item: highlighted_prediction_item,
                        onSelect: _this3.onPredictionSelect,
                        onHighlight: _this3.onPredictionHighlight,
                        onDelete: _this3.onSavedAddressDelete
                    }
                });
            };
            Customer.bind({
                updateAddresses: function updateAddresses() {
                    _this3.forceUpdate();
                    _this3.updateSavedAddressPredictionList();
                }
            });
            Order.bind({
                updateCustomer: function updateCustomer(customer) {
                    var address = Order.getAddress();
                    if (customer && address === null) {
                        address = customer.createAddress();
                    }
                    _this3.setState({
                        address: address
                    });
                    _this3.updateSavedAddressPredictionList();
                },
                updateAddress: function updateAddress(address) {
                    if (address) {
                        _this3.setState({
                            address: address
                        });
                    }
                    _this3.updateSavedAddressPredictionList();
                },
                updateLocation: function updateLocation(location) {
                    var customer = Order.getCustomer();
                    var address = Order.getAddress();
                    if (location && customer && address === null) {
                        address = customer.createAddress();
                    }
                    _this3.setState({
                        address: address
                    });
                    _this3.updateSavedAddressPredictionList();
                }
            });
            UI.bind({
                showCustomerAddresses: function showCustomerAddresses() {
                    return _this3.forceUpdate();
                }
            });
            return _this3;
        }
        return AddressForm;
    }(React.Component);
    var address_view = Mobi2Go.UI.View({
        name: 'customer_address_map_polygons',
        model: Order,
        el: '[data-view="customer-address-map-polygons"]',
        initialise: function initialise() {
            this.modal = new Mobi2Go.UI.Modal(this.$el);
            Mobi2Go.UI.bind('showCustomerAddresses', this.show);
            ReactDOM.render(React.createElement(AddressForm, null), this.$el[0]);
        },
        show: function show() {
            if (Order.getLocation().delivery.mode !== 'map_polygons') {
                return;
            }
            if (Order.getMethod() !== 'delivery') {
                return;
            }
            if (!Customer.isLoggedIn()) {
                Mobi2Go.UI.trigger('promptProgress');
                return;
            }
            this.modal.open();
        },
        hide: function hide() {
            this.modal.close();
        }
    });
})(Mobi2Go, jQuery, window._ || window.exports._);
(function(Mobi2Go, $, _) {
    'use strict';
    var UI = Mobi2Go.UI;
    var Customer = Mobi2Go.Customer;
    var validator = Mobi2Go.helpers.validator;
    Mobi2Go.UI.View({
        name: 'customer_email_updater',
        model: 'Customer',
        el: '[data-view="customer-email-updater"]',
        initialise: function() {
            this.modal = new Mobi2Go.UI.Modal(this.$el);
            UI.bind('showCustomerEmailUpdater', this.open);
            Mobi2Go.UI.helpers.placeholderText(this.el);
        },
        open: function() {
            if (this.modal.is_open) {
                return;
            }
            this.modal.open();
            this.resetWarnings();
            this.clearInputs();
        },
        submit: function() {
            var email = this.$('[data-new-email-address]').val(),
                password = this.$('[data-password]').val();
            this.resetWarnings();
            var email_validation = validator.email(email);
            if (!email_validation.is_valid) {
                this.$('[data-invalid-email-address-warning]').removeClass('m2g-hidden').find('[data-content]').text('Please enter a valid email address');
                this.$('[data-new-email-address]').addClass('m2g-form-element--invalid').focus();
                return;
            }
            var password_validation = validator.password(password);
            if (!password_validation.is_valid) {
                this.$('[data-incorrect-password-warning]').removeClass('m2g-hidden').find('[data-content]').text('Password must be at least 6 characters');
                this.$('[data-password]').addClass('m2g-form-element--invalid').focus();
                return;
            }
            UI.alert({
                title: 'Updating Email...',
                body: 'Your emaill address is being updated.',
                temp: true,
                temp_duration: 1000,
                show_progress_bar: true,
                primary_button: null,
            });
            setTimeout(function() {
                Customer.updateEmail(email, password);
            }, 400);
        },
        updateSuccess: function() {
            this.modal.close();
        },
        updateFail: function(reason) {
            UI.closeAlert();
            this.resetWarnings();
            switch (reason) {
                case 'incorrect password':
                    this.$('[data-incorrect-password-warning]').removeClass('m2g-hidden').find('[data-content]').text('Incorrect password');
                    break;
                case 'email in use':
                    this.$('[data-invalid-email-address-warning]').removeClass('m2g-hidden').find('[data-content]').text('This email address is in use');
                    break;
            }
        },
        resetWarnings: function() {
            this.hideInvalidEmailWarning();
            this.hideIncorrectPasswordWarning();
        },
        hideInvalidEmailWarning: function() {
            this.$('[data-password], [data-new-email-address]').removeClass('m2g-form-element--invalid');
        },
        hideIncorrectPasswordWarning: function() {
            this.$('[data-incorrect-password-warning], ' + '[data-invalid-email-address-warning]').addClass('m2g-hidden');
        },
        clearInputs: function() {
            this.$('[data-password], [data-new-email-address]').val('');
        },
        primeEmailInUseCheck: function() {
            var email = this.$('[data-new-email-address]').val();
            if (validator.email(email).is_valid) {
                Customer.isEmailRegistered(email);
            }
        },
        updateSubmitButtonStyle: function() {
            var password = this.$('[data-password]').val(),
                new_email = this.$('[data-new-email-address]').val(),
                is_password_valid = validator.password(password).is_valid,
                is_email_valid = validator.email(new_email).is_valid;
            if (is_email_valid) {
                this.hideInvalidEmailWarning();
            }
            if (is_password_valid) {
                this.hideIncorrectPasswordWarning();
            }
            if (is_password_valid && is_email_valid) {
                this.$('[data-submit]').addClass('m2g-button--primary');
            } else {
                this.$('[data-submit]').removeClass('m2g-button--primary');
            }
        },
        DOM_listeners: {
            'keyup [data-new-email-address]': function(e) {
                this.primeEmailInUseCheck();
                if (e.keyCode === 13) {
                    this.$('[data-password]').focus();
                } else {
                    this.updateSubmitButtonStyle();
                }
            },
            'keyup [data-password]': function(e) {
                if (e.keyCode === 13) {
                    this.submit();
                } else {
                    this.updateSubmitButtonStyle();
                }
            },
            'click [data-submit]': 'submit',
        },
        model_listeners: {
            updateEmail: 'updateSuccess',
            updateEmailFail: 'updateFail'
        }
    });
}(Mobi2Go, jQuery, this._ || exports._));
(function(Mobi2Go, $, _) {
    'use strict';
    var UI = Mobi2Go.UI,
        Customer = Mobi2Go.Customer,
        validator = Mobi2Go.helpers.validator;
    new Mobi2Go.UI.View({
        name: 'customer_password_updater',
        model: 'Customer',
        el: '[data-view="customer-password-updater"]',
        initialise: function() {
            var that = this;
            this.modal = new Mobi2Go.UI.Modal(this.$el);
            UI.bind('showCustomerPasswordUpdater', function() {
                that.open();
            });
            Mobi2Go.UI.helpers.placeholderText(this.el);
        },
        open: function() {
            if (this.modal.is_open) return;
            this.modal.open();
            this.resetWarnings();
            this.$('[data-current-password], [data-new-password]').val('');
        },
        submitNewPassword: function() {
            var current_password = this.$('[data-current-password]').val(),
                new_password = this.$('[data-new-password]').val();
            this.resetWarnings();
            var current_password_validation = validator.password(current_password);
            if (!current_password_validation.is_valid) {
                this.$('[data-incorrect-password-warning]').removeClass('m2g-hidden');
                this.$('[data-current-password]').addClass('m2g-form-element--invalid').focus();
                return;
            }
            var new_password_validation = validator.password(new_password);
            if (!new_password_validation.is_valid) {
                this.$('[data-invalid-new-password-warning]').removeClass('m2g-hidden');
                this.$('[data-new-password]').addClass('m2g-form-element--invalid').focus();
                return;
            }
            UI.alert({
                title: 'Updating Password...',
                body: 'Your password is being updated.',
                temp: true,
                temp_duration: 1000,
                show_progress_bar: true,
                primary_button: null,
            });
            setTimeout(function() {
                Customer.updatePassword(current_password, new_password);
            }, 400);
        },
        passwordUpdateSuccess: function() {
            this.modal.close();
        },
        passwordUpdateFail: function() {
            UI.closeAlert();
            this.$('[data-incorrect-password-warning]').removeClass('m2g-hidden');
            this.$('[data-current-password]').addClass('m2g-form-element--invalid').focus();
        },
        resetWarnings: function() {
            this.hideInvalidNewPasswordWarning();
            this.hideIncorrectPasswordWarning();
        },
        hideInvalidNewPasswordWarning: function() {
            this.$('[data-new-password]').removeClass('m2g-form-element--invalid');
            this.$('[data-invalid-new-password-warning]').addClass('m2g-hidden');
        },
        hideIncorrectPasswordWarning: function() {
            this.$('[data-current-password]').removeClass('m2g-form-element--invalid');
            this.$('[data-incorrect-password-warning]').addClass('m2g-hidden');
        },
        updateSubmitButtonStyle: function() {
            var current_password = this.$('[data-current-password]').val(),
                new_password = this.$('[data-new-password]').val(),
                is_current_password_valid = validator.password(current_password).is_valid,
                is_new_password_valid = validator.password(new_password).is_valid;
            if (is_current_password_valid) {
                this.hideIncorrectPasswordWarning();
            }
            if (is_new_password_valid) {
                this.hideInvalidNewPasswordWarning();
            }
            if (is_current_password_valid && is_new_password_valid) {
                this.$('[data-set-password]').addClass('m2g-button--primary');
            } else {
                this.$('[data-set-password]').removeClass('m2g-button--primary');
            }
        },
        DOM_listeners: {
            'click [data-set-password]': 'submitNewPassword',
            'keyup [data-new-password]': function(e) {
                if (e.keyCode === 13) {
                    this.submitNewPassword();
                } else {
                    this.updateSubmitButtonStyle();
                }
            },
            'keyup [data-current-password]': function(e) {
                if (e.keyCode === 13) {
                    this.$('[data-new-password]').focus();
                } else {
                    this.updateSubmitButtonStyle();
                }
            }
        },
        model_listeners: {
            logIn: function() {
                this.$('[data-email]').text(this.model.getEmail());
            },
            updatePassword: 'passwordUpdateSuccess',
            updatePasswordFail: 'passwordUpdateFail'
        }
    });
}(Mobi2Go, jQuery, this._ || exports._));
(function(Mobi2Go, $, _) {
    'use strict';
    var UI = Mobi2Go.UI,
        Customer = Mobi2Go.Customer,
        helpers = Mobi2Go.helpers;
    Mobi2Go.UI.View({
        name: 'customer_password_recovery',
        model: 'Customer',
        el: '[data-view="customer-password-recovery"]',
        initialise: function() {
            var that = this;
            this.modal = new Mobi2Go.UI.Modal(this.$el);
            this.email = '';
            Mobi2Go.UI.helpers.placeholderText(this.el);
            UI.bind('showCustomerPasswordRecovery', function(email) {
                that.email = email;
                that.open();
            });
            this.$reset_code = this.$('[data-reset-code]');
            this.$new_password = this.$('[data-new-password]');
        },
        open: function() {
            if (this.modal.is_open) {
                return;
            }
            this.modal.open();
            this.modal.freeze();
            this.resetInputs();
        },
        close: function() {
            this.modal.unfreeze();
            this.modal.close();
        },
        cancel: function() {
            var that = this;
            UI.alert({
                title: 'Cancel password reset?',
                body: 'It may take a few minutes to receive your password reset email, are you sure you want to cancel?',
                primary_button: 'Yes',
                secondary_button: 'No',
                onPrimaryButtonClick: function() {
                    UI.trigger('customerPasswordRecoveryCancelled');
                    that.close();
                },
            });
        },
        DOM_listeners: {
            'click [data-set-password]': 'loginAndSetNewPassword',
            'keyup [data-reset-code]': function(e) {
                if (e.keyCode === 13) {
                    this.$new_password.focus();
                }
            },
            'keyup [data-new-password]': function(e) {
                if (e.keyCode === 13) {
                    this.loginAndSetNewPassword();
                }
            },
            'click [data-cancel]': 'cancel'
        },
        loginAndSetNewPassword: function() {
            var that = this;
            var reset_code = this.$reset_code.val().trim();
            var new_password = this.$new_password.val();
            if (reset_code === '') {
                this.emptyResetCodeWarning();
                return;
            }
            if (!helpers.validator.password(reset_code).is_valid) {
                this.invalidResetCodeWarning();
                return;
            }
            if (new_password === '') {
                this.emptyPasswordWarning();
                return;
            }
            if (!helpers.validator.password(new_password).is_valid) {
                this.invalidPasswordWarning();
                return;
            }
            this.startLoading();
            if (Customer.isLoggedIn()) {
                Customer.updatePassword(reset_code, new_password, function(result) {
                    that.finishLoading();
                    if (result === 'success') {
                        that.resetInputs();
                        that.close();
                    } else {
                        that.invalidResetCodeWarning();
                    }
                });
            } else {
                Customer.logIn(this.email, reset_code, function(is_successful) {
                    if (is_successful) {
                        that.resetInputs();
                        that.close();
                        that.finishLoading();
                        Customer.updatePassword(reset_code, new_password);
                    } else {
                        that.finishLoading();
                        that.invalidResetCodeWarning();
                    }
                });
            }
        },
        emptyResetCodeWarning: function() {
            UI.alert({
                title: 'Enter reset code',
                body: 'Please enter the reset code sent to your email.',
                temp: true,
                primary_button: false
            });
        },
        invalidResetCodeWarning: function() {
            UI.alert({
                title: 'Invalid reset code',
                body: 'Please check the reset code sent to your email.',
                primary_button: false
            });
        },
        emptyPasswordWarning: function() {
            UI.alert({
                title: 'Enter a new password',
                body: 'Please enter a new password for your account.',
                temp: true,
                primary_button: false
            });
        },
        invalidPasswordWarning: function() {
            UI.alert({
                title: 'Invalid password',
                body: 'Please enter a password at least 7 characters long.',
                temp: true,
                primary_button: false
            });
        },
        resetInputs: function() {
            this.$reset_code.val('');
            this.$new_password.val('');
        },
        startLoading: function() {
            this.$('[data-set-password]').addClass('m2g-hidden');
            this.$('[data-loader]').removeClass('m2g-hidden');
        },
        finishLoading: function() {
            this.$('[data-set-password]').removeClass('m2g-hidden');
            this.$('[data-loader]').addClass('m2g-hidden');
        }
    });
}(Mobi2Go, jQuery, this._ || exports._));
(function(Mobi2Go, $, _) {
    Mobi2Go.UI.View({
        name: 'order',
        model: Mobi2Go.Order,
        el: '#m2g-view',
        model_listeners: {
            updateTotal: function(total) {
                if (total) {
                    this.$el.attr('data-order-total-10', Math.floor(total.toFloat() / 10));
                    this.$el.attr('data-order-total-100', Math.floor(total.toFloat() / 100));
                }
            },
            updateLocation: function(location) {
                this.$el.attr({
                    'data-order-location-name': location ? location.name : null
                });
            },
            updateMethod: function(method) {
                this.$el.attr('data-order-method', method);
            },
            updateExpectedAt: function(expected_at) {
                this.$el.attr({
                    'data-order-expected-at-day': expected_at ? expected_at.format('dddd') : null,
                    'data-order-expected-at-hour': expected_at ? expected_at.format('HH') : null,
                    'data-order-is-expected-today': Mobi2Go.Order.isExpectedToday(),
                    'data-order-is-expected-tomorrow': Mobi2Go.Order.isExpectedTomorrow()
                });
            },
            updateVoucherCode: function(code) {
                this.$el.attr('data-order-voucher-code', code);
            },
            updatePaymentMethod: function(method) {
                this.$el.attr('data-order-payment-method', method);
            }
        }
    });
})(Mobi2Go, jQuery, this._ || exports._);
(function(Mobi2Go, $) {
    'use strict';
    var UI = Mobi2Go.UI,
        Order = Mobi2Go.Order,
        Locations = Mobi2Go.Locations;
    new UI.View({
        name: 'order_location',
        model: 'Order',
        el: '[data-view="order-location"]',
        template: $('[data-template="order-location"]').html(),
        initialise: function() {
            this.model.onReady(this.render);
        },
        model_listeners: {
            updateLocation: 'render',
            locationDisabledWarning: 'locationDisabledWarning',
            locationClosedWarning: 'locationClosedWarning',
            locationOfflineWarning: 'locationOfflineWarning'
        },
        render: function() {
            var data = {
                    current_location: this.model.getLocation(),
                    locations: Locations.getAllNotHidden()
                },
                html = this.template(data);
            this.$el.html(html);
            this.highlight();
        },
        highlight: function() {
            if (Mobi2Go.app.isMobileUI() && Order.getLocation()) {
                var $element = this.$('[data-order-location]');
                setTimeout(function() {
                    UI.helpers.highlightElement($element);
                }, UI.page.currentPage() !== 'main' ? 500 : 0);
            }
        },
        locationClosedWarning: function(location) {},
        locationDisabledWarning: function(location) {
            UI.alert({
                title: 'Location unavailable',
                body: 'Sorry, ' + location.name + ' is currently unavailable.'
            });
        },
        locationOfflineWarning: function(location) {
            UI.alert({
                title: 'Store offline',
                message: '<strong>Sorry, ' +
                    location.name + ' cannot currently take online orders.</strong>' +
                    (location.offline_message ? '<br><br>' + location.offline_message : '')
            });
        },
        DOM_listeners: {
            'click [data-order-location]': function() {
                Mobi2Go.UI.trigger('showLocations', this.model.getLocation());
            },
            'click [data-show-locations]': function() {
                Mobi2Go.UI.trigger('showLocations');
            },
            'click [data-show-locations-finder]': function() {
                Mobi2Go.UI.trigger('showLocationsFinder');
            }
        }
    });
})(Mobi2Go, jQuery);
(function(Mobi2Go, $, _) {
    'use strict';
    var UI = Mobi2Go.UI,
        Order = Mobi2Go.Order;
    UI.View({
        name: 'order_method',
        model: Order,
        el: '[data-view="order-address"]',
        template: $('[data-template="order-address"]').html(),
        initialise: function() {},
        model_listeners: {
            updateCustomer: function(customer) {
                customer && this.render();
            },
            updateMethod: 'render',
            updateAddress: 'render'
        },
        render: function() {
            var that = this,
                html = this.template(Order);
            this.$el.html(html);
            _.delay(function() {
                if (!that.model.getAddress() && that.model.getMethod() === 'delivery')
                    Mobi2Go.UI.trigger('showCustomerAddresses');
            }, 500);
        },
        DOM_listeners: {
            'click [data-order-delivery-address]': function() {
                Mobi2Go.UI.trigger('showCustomerAddresses');
            }
        }
    });
})(Mobi2Go, jQuery, this._ || exports._);
(function(Mobi2Go, $) {
    'use strict';
    var UI = Mobi2Go.UI,
        Order = Mobi2Go.Order;
    UI.View({
        name: 'order_products',
        model: Order,
        el: '[data-view="basket"]',
        templates: {
            product: $('[data-template="order-product"]').html()
        },
        show: function() {
            this.$('[data-empty-basket]').addClass('m2g-hidden');
            this.$('[data-basket]').removeClass('m2g-hidden');
            Mobi2Go.UI.helpers.placeholderText(this.el);
        },
        hide: function() {
            this.$('[data-empty-basket]').removeClass('m2g-hidden');
            this.$('[data-basket]').addClass('m2g-hidden');
        },
        updateProductsQuantity: function(quantity) {
            quantity ? this.show() : this.hide();
            $('[data-basket-products]').attr('data-count', Order.getProducts().length);
        },
        ready: function() {
            this.$('[data-spinner]').hide();
        },
        outOfStockProductsRemovedWarning: function(products) {
            var options;
            if (products.length === 1) {
                options = {
                    title: 'Product unavailable',
                    body: products[0].menu_product.name + ' could not be added to your order because it' + ' has sold out'
                };
            } else {
                options = {
                    title: 'Products unavailable',
                    body: 'Products could not be added to your order' + ' because they are sold out'
                };
            }
            _.delay(function() {
                UI.alert(options);
            }, 2000);
        },
        model_listeners: {
            ready: 'ready',
            addProduct: 'createBasketProductView',
            updateProductsQuantity: 'updateProductsQuantity',
            outOfStockProductsRemovedWarning: 'outOfStockProductsRemovedWarning'
        },
        DOM_listeners: {
            'click [data-menu]': function() {
                UI.trigger('showMenu');
            }
        },
        createBasketProductView: function(product) {
            var basket_view = this;
            Mobi2Go.UI.View({
                name: 'order_product#' + product.cid,
                model: product,
                initialise: function() {
                    basket_view.show();
                    this.render();
                    if (Order.isReady() && (!UI.Modal || !UI.Modal.isOpen())) {
                        this.alertAdded();
                    }
                    UI.bind('deletingFocusedBasketProduct', this.focusIfFirst);
                },
                render: function() {
                    var $html = $(basket_view.templates.product(this.model));
                    if (this.$el) {
                        this.$el.replaceWith($html);
                    } else {
                        $html.prependTo(basket_view.$('[data-basket-products]'));
                    }
                    this.setEl($html);
                    if (Order.isReady()) {
                        var that = this;
                        setTimeout(function() {
                            that.highlight();
                        }, 50);
                    }
                },
                focusIfFirst: function() {
                    if (Order.getProducts() && _.last(Order.getProducts()).cid === this.model.cid) {
                        this.$el.focus();
                    }
                },
                DOM_listeners: {
                    'click': function() {
                        Mobi2Go.UI.trigger('editProduct', this.model);
                    },
                    'keydown': function(e) {
                        var key_code = e.keyCode;
                        switch (key_code) {
                            case 13:
                                Mobi2Go.UI.trigger('editProduct', this.model);
                                break;
                            case 46:
                            case 8:
                                UI.unbind('deletingFocusedBasketProduct', this.focusIfFirst);
                                Order.removeProduct(this.model);
                                UI.trigger('deletingFocusedBasketProduct');
                                break;
                        }
                    },
                    'click [data-remove]': function(e) {
                        Order.removeProduct(this.model);
                        e.stopPropagation();
                    }
                },
                model_listeners: {
                    updateMenuProduct: 'render',
                    updateComment: 'render',
                    updateTotal: 'updateTotal',
                    updateQuantity: 'updateQuantity',
                    updateSize: 'updateSize',
                    updateDisplayModifiers: 'render',
                    removeFromOrder: 'removeFromOrder'
                },
                updateMenuProduct: function(menu_product) {},
                updateTotal: function(total, list_total) {
                    this.$('[data-total]').html(list_total.toString());
                    this.highlight();
                },
                updateQuantity: function(new_quantity) {
                    this.$el.attr('data-quantity', new_quantity);
                    this.$('[data-quantity-display]').text(new_quantity);
                },
                updateSize: function(new_size) {
                    this.$('[data-size]').text(' (' + new_size + ')');
                },
                removeFromOrder: function() {
                    this.$el.remove();
                },
                highlight: function() {
                    var $el = this.$el;
                    setTimeout(function() {
                        UI.helpers.highlightElement($el);
                    }, UI.page && UI.page.currentPage() !== 'main' ? 500 : 0);
                },
                alertAdded: function() {
                    if (Mobi2Go.app.isMobileUI()) {
                        return;
                    }
                    var that = this,
                        $product_el = this.$el,
                        body = 'Click on item to customise.',
                        is_mobile = Mobi2Go.app.isMobileUI();
                    UI.helpers.scrollTo(basket_view.$el, function() {
                        UI.alert({
                            title: 'Item added',
                            body: body,
                            temp: true,
                            primary_button: null,
                            el: is_mobile ? basket_view.$el : $product_el,
                            onClose: UI.views.order_sections.fadeSections,
                            placement: is_mobile ? 'top' : 'left'
                        });
                    }, false, -50);
                    if (!is_mobile) {
                        UI.views.order_sections.fadeSections(true, 'basket');
                    }
                }
            });
        }
    });
})(Mobi2Go, jQuery);
(function(Mobi2Go, $) {
    'use strict';
    var UI = Mobi2Go.UI,
        Order = Mobi2Go.Order;
    UI.View({
        name: 'order_voucher',
        model: Order,
        el: '[data-view="order-voucher"]',
        model_listeners: {
            updateMethod: function(is_method_set) {
                is_method_set ? this.show() : this.hide();
            },
            updateVoucherCode: 'setVoucherCode',
            updateVoucherApplied: 'setVoucherApplied',
            updateVoucherErrorMessage: 'setVoucherErrorMessage'
        },
        show: function() {
            this.$el.removeClass('m2g-hidden');
        },
        hide: function() {
            this.$el.addClass('m2g-hidden');
        },
        setVoucherCode: function(code) {
            this.$('[data-code-input]').val(code);
            if (code === '') {
                this.$el.attr('data-state', 'empty');
            }
        },
        setVoucherApplied: function(voucher) {
            if (voucher) {
                this.$el.attr('data-state', 'valid');
                this.$('[data-message]').removeClass('m2g-hidden');
                this.$('[data-message-text]').text(voucher.name);
            } else {
                this.$('[data-message]').addClass('m2g-hidden');
                this.$('[data-message-text]').text('');
            }
        },
        setVoucherErrorMessage: function(message) {
            if (message) {
                if (!Order.getVoucherApplied()) {
                    this.$el.attr('data-state', 'invalid');
                }
                this.$('[data-error]').removeClass('m2g-hidden');
                this.$('[data-error-text]').text(message);
            } else {
                this.$('[data-error]').addClass('m2g-hidden');
                this.$('[data-error-text]').text('');
            }
        },
        DOM_listeners: {
            'keyup [data-code-input]': 'voucherKeyup',
            'change [data-code-input]': 'checkVoucherInput'
        },
        voucherKeyup: function() {
            clearTimeout(this.voucher_look_up_timeout);
            this.voucher_look_up_timeout = setTimeout(this.checkVoucherInput, 500);
        },
        voucher_look_up_timeout: null,
        checkVoucherInput: function() {
            clearTimeout(this.voucher_look_up_timeout);
            Order.setVoucherCode(this.$('[data-code-input]').val());
        }
    });
})(Mobi2Go, jQuery);
(function(Mobi2Go, $) {
    'use strict';
    var UI = Mobi2Go.UI,
        Order = Mobi2Go.Order;
    new UI.View({
        name: 'order_discounts',
        model: Order,
        el: '[data-view="order-discounts"]',
        template: $('[data-template="order-discounts"]').html(),
        initialise: function() {},
        model_listeners: {
            updateDiscounts: 'render'
        },
        render: function(discounts) {},
        DOM_listeners: {}
    });
})(Mobi2Go, jQuery);
(function(Mobi2Go, $) {
    'use strict';
    var UI = Mobi2Go.UI,
        Order = Mobi2Go.Order;
    UI.View({
        name: 'order_delivery_fee',
        model: Order,
        el: '[data-view="order-delivery-fee"]',
        model_listeners: {
            updateDeliveryFee: function(fee) {
                if (fee.toFloat()) {
                    this.$el.removeClass('m2g-hidden');
                } else {
                    this.$el.addClass('m2g-hidden');
                }
                this.$('[data-total]').html(fee.getListPrice().toString());
            }
        }
    });
})(Mobi2Go, jQuery);
(function(Mobi2Go, $) {
    'use strict';
    var UI = Mobi2Go.UI,
        Order = Mobi2Go.Order;
    UI.View({
        name: 'order_surcharge',
        model: Order,
        el: '[data-view="order-surcharge"]',
        model_listeners: {
            updateSurcharge: function(surcharge) {
                if (surcharge.toFloat()) {
                    this.$el.removeClass('m2g-hidden');
                } else {
                    this.$el.addClass('m2g-hidden');
                }
                this.$('[data-total]').html(surcharge.getListPrice().toString());
            }
        }
    });
})(Mobi2Go, jQuery);
(function(Mobi2Go, $) {
    'use strict';
    var UI = Mobi2Go.UI,
        Order = Mobi2Go.Order;
    UI.View({
        name: 'order_tax',
        model: Order,
        el: '[data-view="order-tax"]',
        model_listeners: {
            updateTotal: function(total) {
                var sales_tax = Order.getSalesTax();
                if (sales_tax && sales_tax.has_tax_exclusive_prices) {
                    var total_tax = Order.getSalesTaxTotal();
                    if (total_tax.toFloat()) {
                        this.$el.removeClass('m2g-hidden');
                        this.$('[data-name]').html(sales_tax.name);
                        this.$('[data-total]').html(total_tax.toString());
                    } else {
                        this.$el.addClass('m2g-hidden');
                    }
                } else {
                    this.$el.addClass('m2g-hidden');
                }
            }
        }
    });
})(Mobi2Go, jQuery);
(function(Mobi2Go, $) {
    'use strict';
    var UI = Mobi2Go.UI,
        Order = Mobi2Go.Order;
    UI.View({
        name: 'order_tip',
        model: Order,
        el: '[data-view="order-tip"]',
        model_listeners: {
            updateTip: function(tip) {
                if (tip.toFloat()) {
                    this.$el.removeClass('m2g-hidden');
                } else {
                    this.$el.addClass('m2g-hidden');
                }
                this.$('[data-total]').html(tip.getListPrice().toString());
            }
        }
    });
})(Mobi2Go, jQuery);
(function(Mobi2Go, $) {
    'use strict';
    var UI = Mobi2Go.UI,
        Order = Mobi2Go.Order;
    UI.View({
        name: 'order_discounts_total',
        model: Order,
        el: '[data-view="order-discounts-total"]',
        model_listeners: {
            updateDiscountsTotal: function(total) {
                if (total.toFloat()) {
                    this.$el.removeClass('m2g-hidden');
                } else {
                    this.$el.addClass('m2g-hidden');
                }
                this.$('[data-total]').html('-' + total.getListPrice().toString());
            }
        }
    });
})(Mobi2Go, jQuery);
(function(Mobi2Go, $) {
    'use strict';
    var UI = Mobi2Go.UI,
        Order = Mobi2Go.Order;
    UI.View({
        name: 'order_total',
        model: Order,
        el: '[data-view="order-total"]',
        initialise: function() {
            this.render();
        },
        model_listeners: {
            updateTotal: 'render'
        },
        render: function() {
            this.$('[data-total]').html(Order.getTotal().toString());
        }
    });
})(Mobi2Go, jQuery);
(function(Mobi2Go, $, _) {
    'use strict';
    var UI = Mobi2Go.UI;
    new UI.View({
        name: 'order_method',
        model: 'Order',
        el: '[data-view="order-method"]',
        template: $('[data-template="order-method"]').html(),
        initialise: function() {
            this.method_titles = {
                pickup: 'Pick up',
                eatin: 'Eat in',
                delivery: 'Delivery'
            };
        },
        model_listeners: {
            updateAvailableMethods: 'render',
            updateMethod: 'render',
            updateAddress: 'render',
            updateCustomer: 'render'
        },
        render: function() {
            var data = {
                    order_method: this.model.getMethod(),
                    address: this.model.getAddress(),
                    available_methods: this.model.getAvailableMethods(),
                    method_titles: this.method_titles,
                    methods_string: this.orderMethodsString(),
                    order: this.model
                },
                html = this.template(data);
            this.$el.html(html);
        },
        orderMethodsString: function() {
            var question = '',
                order_methods = this.model.getAvailableMethods();
            _.each(order_methods, function(method, i) {
                question += this.method_titles[method] + (++i === order_methods.length ? '' : ' or ');
            }, this);
            return question;
        },
        DOM_listeners: {
            'change [data-order-method]': function() {
                var order_method = this.$('[data-order-method]').val();
                this.model.setMethod(order_method, true);
            },
            'click [data-order-delivery-address]': function() {
                UI.trigger('showCustomerAddresses');
            }
        }
    });
})(Mobi2Go, jQuery, this._ || exports._);
(function(Mobi2Go, $, _) {
    'use strict';
    var Order = Mobi2Go.Order;
    Mobi2Go.UI.View({
        name: 'order_datetime',
        model: 'Order',
        el: '[data-view="order-datetime"]',
        templates: {
            dates: $('[data-template="order-dates"]').html(),
            times: $('[data-template="order-times"]').html()
        },
        initialise: function() {},
        model_listeners: {
            updateAvailableDates: 'renderAvailableDates',
            updateExpectedAt: 'updateExpectedAt',
            updateExpectedInString: 'updateExpectedInString'
        },
        updateExpectedAt: function(datetime) {
            this.$('[data-order-dates]').val(datetime ? datetime.date_value : null);
            this.renderAvailableTimes(datetime);
            this.updateAlternateDateDisplay(datetime);
        },
        updateAlternateDateDisplay: function() {
            var $date_display = this.$('[data-order-date-alternate-display]'),
                date_display = '';
            if (Order.isExpectedToday() || Order.isExpectedTomorrow()) {
                date_display = Order.getExpectedAt().format('ddd, Do MMM');
                $date_display.text(date_display).removeClass('m2g-hidden');
            } else {
                $date_display.addClass('m2g-hidden');
            }
        },
        updateExpectedInString: function(expected_in_string) {
            var $expected_in_string = this.$('[data-expected-in-string]');
            if (expected_in_string) {
                $expected_in_string.text(expected_in_string).removeClass('m2g-hidden');
            } else {
                $expected_in_string.addClass('m2g-hidden');
            }
        },
        renderAvailableDates: function() {
            var data = {
                    available_dates: Order.getAvailableDates(),
                    order_datetime: Order.getExpectedAt()
                },
                html = this.templates.dates(data);
            this.$('[data-view="order-dates"]').html(html);
            this.renderAvailableTimes(Order.getExpectedAt() || data.available_dates[0]);
            var method = data.available_dates.length ? 'removeClass' : 'addClass';
            this.$el[method]('m2g-hidden');
        },
        renderAvailableTimes: function(datetime) {
            var data = {
                    available_times: Order.getAvailableTimes(datetime),
                    order_datetime: Order.getExpectedAt()
                },
                html = this.templates.times(data);
            this.$('[data-view="order-times"]').html(html);
        },
        setExpectedAt: function() {
            Order.setExpectedAt(this.$('[data-order-times]').val(), true);
        },
        DOM_listeners: {
            'change [data-order-dates]': function(e) {
                var date = $(e.currentTarget).val();
                this.renderAvailableTimes(date);
                this.setExpectedAt();
            },
            'change [data-order-times]': 'setExpectedAt'
        }
    });
})(Mobi2Go, jQuery, this._ || exports._);
(function(Mobi2Go, $, _) {
    'use strict';
    Mobi2Go.UI.View({
        name: 'order_closing_soon_warning',
        model: Mobi2Go.Order,
        el: '[data-view="order-minutes-to-closing"]',
        template: $('[data-template="order-minutes-to-closing"]').html(),
        model_listeners: {
            updateMinutesToClosing: 'render'
        },
        render: function(minutes_to_closing) {
            var html = this.template({
                minutes_to_closing: minutes_to_closing,
                Order: Mobi2Go.Order,
            });
            this.$el.html(html);
        }
    });
})(Mobi2Go, jQuery, this._ || exports._);
(function(Mobi2Go, $, _) {
    'use strict';
    var UI = Mobi2Go.UI,
        Order = Mobi2Go.Order;
    UI.View({
        name: 'order_checkout_button',
        model: Order,
        el: '[data-view="order-sections"]',
        initialise: function() {},
        DOM_listeners: {
            'click [data-checkout]': 'checkoutButtonClickHandler'
        },
        checkoutButtonClickHandler: function() {
            if (!Order.isConfirmable()) {
                UI.trigger('promptProgress');
                return;
            }
            UI.trigger('showConfirmation');
        },
        model_listeners: {
            updateProgressStatus: 'updateCheckoutButton'
        },
        updateCheckoutButton: function() {
            var method = Order.isConfirmable() ? 'removeClass' : 'addClass';
            this.$('[data-checkout]')[method]('m2g-button--disabled');
        }
    });
})(Mobi2Go, jQuery, this._ || exports._);
(function(Mobi2Go, $, _) {
    'use strict';
    var UI = Mobi2Go.UI,
        Order = Mobi2Go.Order;
    new UI.View({
        name: 'order_sections',
        model: 'Order',
        el: '[data-view="order-sections"]',
        initialise: function() {
            UI.bind('promptProgress', this.warning);
        },
        sections: {
            customer: new UI.OrderSection('[data-order-section="customer"]'),
            location: new UI.OrderSection('[data-order-section="location"]'),
            method: new UI.OrderSection('[data-order-section="method"]'),
            address: new UI.OrderSection('[data-order-section="address"]'),
            expected_at: new UI.OrderSection('[data-order-section="expected-at"]'),
            basket: new UI.OrderSection('[data-order-section="basket"]')
        },
        fadeSections: function(fade, except_section) {
            _.each(this.sections, function(section, section_name) {
                if (section_name === except_section) {
                    section.unfade();
                } else {
                    section.fade(fade);
                }
            });
        },
        model_listeners: {
            updateCustomer: function(customer) {
                if (!customer || Order.getMethod() === 'delivery' && !Order.getAddress()) {
                    return;
                }
                this.sections.customer.complete(true);
            },
            updateMethod: function(order_method) {
                this.sections.location.complete(!!order_method);
                if (order_method === 'delivery' && !Order.getAddress()) {
                    this.sections.customer.complete(false);
                } else if (Order.getCustomer()) {
                    this.sections.customer.complete(true);
                }
            },
            updateAddress: function(address) {
                if (Order.getMethod() === 'delivery') {
                    this.sections.customer.complete(!!address);
                }
            },
            updateProductsQuantity: function(count) {
                this.sections.basket.complete(!!count);
            }
        },
        warning: function(message) {
            var that = this;
            message = message || Order.getProgressMessage();
            if (UI.Modal.isOpen()) {
                return;
            }
            switch (message) {
                case 'customer required':
                    UI.helpers.scrollTo(this.sections.customer.$element, function() {
                        UI.alert({
                            title: 'Log in or Sign up',
                            body: 'Please log in or sign up before continuing.',
                            temp: true,
                            primary_button: null,
                            el: that.sections.customer.$element,
                            onClose: that.fadeSections
                        });
                        that.fadeSections(true, 'customer');
                        that.sections.customer.animateTitle();
                    }, false, -20);
                    break;
                case 'location required':
                    UI.helpers.scrollTo(this.sections.location.$element, function() {
                        UI.alert({
                            title: 'Choose a Store',
                            body: 'Please select a store before continuing.',
                            temp: true,
                            primary_button: false,
                            onClose: function() {
                                Mobi2Go.UI.trigger('showLocationsFinder');
                                that.fadeSections();
                            },
                            el: that.sections.location.$element.find('.m2g-order-location-button')
                        });
                        that.fadeSections(true, 'location');
                        that.sections.location.animateTitle();
                    }, false, -36);
                    break;
                case 'method required':
                    var order_methods_string = UI.views.order_method.orderMethodsString();
                    UI.helpers.scrollTo(this.sections.location.$element, function() {
                        UI.alert({
                            title: order_methods_string + '?',
                            body: 'Please choose between ' + order_methods_string + ' before continuing.',
                            temp: true,
                            primary_button: null,
                            el: '[data-view="order-method"]',
                            onClose: that.fadeSections
                        });
                        that.fadeSections(true, 'method');
                    });
                    break;
                case 'address required':
                    UI.helpers.scrollTo(this.sections.address.$element, function() {
                        UI.alert({
                            title: 'Delivery address',
                            body: 'Please provide a delivery address before continuing.',
                            temp: true,
                            primary_button: 'Choose address',
                            onPrimaryButtonClick: function() {
                                Mobi2Go.UI.trigger('showCustomerAddresses');
                            },
                            el: '[data-order-delivery-address]',
                            onClose: that.fadeSections
                        });
                        that.fadeSections(true, 'address');
                        that.sections.customer.animateTitle();
                    }, false, -56);
                    break;
                case 'product required':
                    UI.helpers.scrollTo(this.sections.basket.$element, function() {
                        UI.alert({
                            title: 'Order empty',
                            body: 'Please add something to your basket before continuing.',
                            temp: true,
                            primary_button: null,
                            el: that.sections.basket.$element,
                            onClose: that.fadeSections
                        });
                        that.fadeSections(true, 'basket');
                        that.sections.basket.animateTitle();
                    }, false, -15);
                    break;
                case 'delivery minimum not met':
                    UI.helpers.scrollTo(this.sections.basket.$element, function() {
                        UI.alert({
                            title: Order.getDeliveryMinimumTotal() + ' minimum',
                            body: 'Delivery orders have a minium order total requirement, ' + ' please add more items to continue.',
                            temp: true,
                            primary_button: null,
                            el: that.sections.basket.$element.find('[data-view="order-total"]'),
                            onClose: that.fadeSections
                        });
                        that.fadeSections(true, 'basket');
                        that.sections.basket.animateTitle();
                    }, false, -15);
                    break;
            }
        }
    });
})(Mobi2Go, jQuery, this._ || exports._);
(function(Mobi2Go, $, _) {
    'use strict';
    var UI = Mobi2Go.UI,
        Order = Mobi2Go.Order;
    UI.View({
        name: 'progress_errors',
        model: Order,
        model_listeners: {
            updateProgressError: 'alertProgressError',
            updatePaymentProcessorError: 'alertPaymentError',
        },
        alertPaymentError: function(error) {
            var alert = {};
            if (!Mobi2Go.Order.isReady()) {
                return;
            }
            switch (error.toLowerCase()) {
                case 'insufficient funds':
                    alert = {
                        title: 'Insufficient funds',
                        body: 'The card provided appears to have insufficient funds, please try again.'
                    };
                    break;
                case 'invalid card number':
                    alert = {
                        title: 'Invalid card number',
                        body: 'The card number provided appears to be invalid, please try again.'
                    };
                    break;
                case 'invalid expiry':
                    alert = {
                        title: 'Invalid expiry',
                        body: 'The card\'s expiry date provided appears to be invalid, please try again.'
                    };
                    break;
                case 'card expired':
                    alert = {
                        title: 'Card expired',
                        body: 'The card provided appears to be expired, please try again.'
                    };
                    break;
                case 'payment error':
                    alert = {
                        title: 'Payment error',
                        body: 'Sorry, it appears there was a payment error, please try again.'
                    };
                    break;
                case 'user rejected the payment':
                    alert = {
                        title: 'Payment cancelled',
                        body: 'Payment cancelled by customer, please try again.'
                    };
                    break;
                default:
                    alert = {
                        title: 'Payment Error',
                        body: 'Sorry, it appears there was a payment error, please try again.'
                    };
            }
            UI.alert(alert);
        },
        alertProgressError: function(error) {
            var alert = {};
            if (!Mobi2Go.Order.isReady()) {
                return;
            }
            var location_number = Order.getLocation().address.phone_number;
            switch (error.toLowerCase()) {
                case 'dispatcher offline':
                    alert = {
                        title: 'Store unavailable',
                        body: 'Sorry, it appears the store is offline and' + ' temporarily cannot accept online orders.' + ' Please call ' + location_number + ' to confirm your order.',
                        onPrimaryButtonClick: function() {
                            if (UI.page !== undefined) {
                                UI.page.back();
                            }
                        }
                    };
                    break;
                case 'insufficient funds':
                    alert = {
                        title: 'Insufficient funds',
                        body: 'The card provided appears to have insufficient funds, please try again.'
                    };
                    break;
                case 'invalid card number':
                    alert = {
                        title: 'Invalid card number',
                        body: 'The card number provided appears to be invalid, please try again.'
                    };
                    break;
                case 'invalid expiry':
                    alert = {
                        title: 'Invalid expiry',
                        body: 'The card\'s expiry date provided appears to be invalid, please try again.'
                    };
                    break;
                case 'card expired':
                    alert = {
                        title: 'Card expired',
                        body: 'The card provided appears to be expired, please try again.'
                    };
                    break;
                case 'payment error':
                    alert = {
                        title: 'Payment error',
                        body: 'Sorry, it appears there was a payment error, please try again.'
                    };
                    break;
                case 'user rejected the payment':
                    alert = {
                        title: 'Payment cancelled',
                        body: 'Payment cancelled by customer, please try again.'
                    };
                    break;
                case 'customer\'s password is required for tokenised payment':
                    alert = {
                        title: 'Password required',
                        body: 'To use a saved card, please provide your password.'
                    };
                    break;
                default:
                    alert = {
                        title: 'Error',
                        body: 'Sorry, there was a problem sending the order to the store.'
                    };
            }
            UI.alert(alert);
        }
    });
})(Mobi2Go, jQuery, this._ || exports._);
(function(Mobi2Go, $, _) {
    'use strict';
    var UI = Mobi2Go.UI,
        Order = Mobi2Go.Order;
    UI.View({
        name: 'confirmation',
        model: Order,
        el: '[data-view="confirmation"]',
        template: $('[data-template="confirmation"]').html(),
        has_rendered: false,
        initialise: function() {
            this.modal = new Mobi2Go.UI.Modal(this.$el);
            UI.bind('showConfirmation', this.open);
        },
        open: function() {
            var that = this;
            if (Order.isConfirmable()) {
                this.render();
                _.delay(function() {
                    that.modal.open();
                    that.$('[data-confirm]').focus();
                }, 50);
            } else {
                return;
            }
            Order.save(function() {
                if (!Order.isConfirmable()) {
                    that.modal.close();
                    UI.trigger('progressPrompt');
                }
            });
        },
        render: function() {
            var html,
                data = _.extend({}, Mobi2Go, {
                    order_method_titles: {
                        pickup: 'Pick Up',
                        eatin: 'Eat In',
                        delivery: 'Delivery'
                    }
                }),
                processor = Order.getPaymentProcessor();
            if (processor) {
                this.$el.attr('data-payment-processor', processor.getName());
                this.$el.attr('data-payment-form-type', processor.getFormType());
            }
            html = this.template(data);
            this.$el.html(html);
            this.$confirm_button = this.$('[data-confirm]');
            this.$confirm_button_icon = this.$('[data-confirm-icon]');
            this.has_rendered = true;
            this.setPaymentMethod(Order.getPaymentMethod());
            this.setProgressPhase(Order.getProgressPhase());
            UI.trigger('confirmationViewRendered');
            this.modal.updatePosition();
        },
        model_listeners: {
            updateExpectedAt: 'setExpectedAt',
            updateExpectedInString: 'setExpectedInString',
            updateMinutesToClosing: 'setMinutesToClosing',
            updateTotal: function() {
                if (Order.isConfirmable()) {
                    this.render();
                }
            },
            updatePaymentMethod: 'setPaymentMethod',
            updateProgressPhase: 'setProgressPhase',
            updateProgressStatus: 'setProgressStatus',
            startedPaymentCancellationCooldown: 'showPaymentCancellationCooldownAlert',
            finishedPaymentCancellationCooldown: 'hidePaymentCancellationCooldownAlert'
        },
        setExpectedAt: function() {
            var expected_at = Order.getExpectedAt();
            if (expected_at) {
                this.$('[data-time]').text(expected_at.format('h:mma'));
                this.$('[data-date]').text(expected_at.format('dddd, Do MMMM'));
            }
        },
        setExpectedInString: function(expected_in) {
            expected_in = expected_in ? '(' + expected_in + ')' : '';
            this.$('[data-in-string]').text(expected_in);
        },
        setMinutesToClosing: function(minutes_to_closing) {
            if (minutes_to_closing > 10) {
                this.$('[data-minutes-to-closing-container]').addClass('m2g-hidden');
            } else {
                this.$('[data-minutes-to-closing-container]').removeClass('m2g-hidden');
                if (minutes_to_closing === 1) {
                    minutes_to_closing = 'less than 1 minute';
                } else {
                    minutes_to_closing += ' minutes';
                }
                this.$('[data-minutes-to-closing]').text(minutes_to_closing);
            }
        },
        setPaymentMethod: function(method) {
            this.$el.attr('data-payment-method', method);
        },
        setProgressPhase: function(phase) {
            if (!this.has_rendered) {
                if (phase === 'unconfirmed') {
                    return;
                } else {
                    this.render();
                    return;
                }
            }
            this.$el.attr('data-phase', phase);
            this.updateModalFreezeMode(phase);
            this.updateConfirmButtonMode(phase);
            this.showPaymentProcessingWarning(phase);
            var that = this;
            this.modal.updatePosition({
                force_animation: true
            });
            _.delay(function() {
                that.showBottomIfPaymentIframe();
            }, 100);
            if (phase === 'confirmed') {
                _.delay(function() {
                    UI.alert({
                        title: 'Order confirmed!',
                        body: 'You will receive a confirmation email shortly.'
                    });
                }, 500);
            }
            if (phase !== 'confirming') {
                this.is_cancelling_confirmation = false;
            }
        },
        updateModalFreezeMode: function(phase) {
            switch (phase) {
                case 'unconfirmed':
                    this.modal.unfreeze();
                    break;
                case 'confirming':
                case 'confirmed':
                    this.modal.freeze();
                    this.forceOpenUntilUnconfirmed();
                    break;
            }
        },
        updateConfirmButtonMode: function(phase) {
            switch (phase) {
                case 'confirming':
                    this.$confirm_button.addClass('m2g-button--disabled');
                    break;
                case 'unconfirmed':
                case 'confirmed':
                    this.$confirm_button.removeClass('m2g-button--disabled');
                    break;
            }
        },
        setProgressStatus: function(status) {
            if (!this.has_rendered) {
                return;
            }
            this.$el.attr('data-status', status);
            if (status === 'incomplete') {
                this.modal.close();
            }
        },
        showBottomIfPaymentIframe: function() {
            if (Order.getProgressPhase() === 'confirming' && Order.getPaymentMethod() === 'online' && Order.getPaymentProcessor().getFormType() === 'iframe') {
                this.modal.showBottom();
            }
        },
        showPaymentProcessingWarning: function(phase) {
            var show_delay = 30000;
            var $warning = this.$('[data-payment-processing-warning]');
            clearTimeout(this.showPaymentProcessingWarning.timeout);
            if (phase === 'confirming') {
                this.showPaymentProcessingWarning.timeout = setTimeout(function() {
                    $warning.attr('data-showing', 'showing');
                }, show_delay);
            } else {
                $warning.removeAttr('data-showing');
            }
        },
        forceOpenUntilUnconfirmed: (function() {
            var interval = null,
                that;
            return function() {
                clearTimeout(interval);
                that = this;
                interval = setInterval(forceOpen, 100);

                function forceOpen() {
                    if (Order.getProgressPhase() === 'unconfirmed') {
                        clearInterval(interval);
                        if (Order.getProgressStatus() === 'incomplete') {
                            that.modal.close();
                        }
                    } else if (!that.modal.isOpen()) {
                        that.open();
                    }
                }
            };
        }()),
        DOM_listeners: {
            'click [data-confirm]': 'confirmClickHandler',
            'click [data-cancel]': 'cancelClickHandler',
            'click [data-close]': 'closeClickHandler',
            'click [data-done]': 'doneClickHandler',
            'click [data-subscriber]': 'setSubscriber'
        },
        confirmClickHandler: function() {
            if (Order.getProgressPhase() === 'confirmed') {
                return;
            }
            if (Order.getPaymentMethod() === 'online' && Order.getPaymentProcessor().getFormType() === 'direct' && !Order.getPaymentProcessor().isCreditCardValid()) {
                UI.trigger('invalidCreditCardDetailsWarning');
                return;
            }
            if (Order.getMinutesToClosing() <= 1) {
                var today_or_tonight = Order.getExpectedAt().format('H') >= 17 ? 'tonight' : 'today';
                UI.alert({
                    title: 'Store is closed',
                    body: 'Sorry, this store is closed and is no longer accepting ' + today_or_tonight,
                    primary_button: 'OK'
                });
                return;
            }
            if (Order.getPaymentCardToken() && Order.isPasswordRequiredForPaymentToken() && !Order.isPasswordProvided()) {
                if (this.isPasswordEntered()) {
                    this.validatePassword();
                    return;
                } else {
                    this.promptToEnterPassword();
                    return;
                }
            }
            if (!Order.isExpectedToday()) {
                var expected_date = Order.getExpectedAt();
                var display_date = '';
                if (Order.isExpectedTomorrow()) {
                    display_date = ' tomorrow ' + expected_date.display_value;
                } else {
                    display_date = expected_date.format('dddd') + ' ' + expected_date.display_value;
                }
                UI.alert({
                    title: 'Scheduled Order',
                    body: 'You order will be scheduled for ' + display_date + '. <br> Do you want to continue?',
                    primary_button: 'Confirm',
                    onPrimaryButtonClick: Order.confirm,
                    secondary_button: 'Cancel',
                });
                return;
            }
            if (Order.getPaymentMethod() === 'online' && !Order.getPaymentCardToken() && Order.isPaymentCardTokenisationAvailable()) {
                UI.alert({
                    title: 'Save card for next time?',
                    body: 'Skip entering your card details for your next order.',
                    primary_button: 'Yes, Save Card',
                    secondary_button: 'No Thanks',
                    onPrimaryButtonClick: function() {
                        Order.setPaymentCardTokenSavingEnabled(true);
                        Order.confirm();
                    },
                    onSecondaryButtonClick: function() {
                        Order.setPaymentCardTokenSavingEnabled(false);
                        Order.confirm();
                    }
                });
                return;
            }
            Order.confirm();
        },
        is_cancelling_confirmation: false,
        cancelClickHandler: function() {
            var phase = Order.getProgressPhase(),
                that = this;
            if (phase === 'confirming') {
                if (this.is_cancelling_confirmation) {
                    return;
                }
                this.is_cancelling_confirmation = true;
                if (Order.getPaymentMethod() === 'online' && Order.getPaymentProcessor() && Order.getPaymentProcessor().getFormType() === 'iframe') {
                    UI.alert({
                        title: 'Cancelling Payment...',
                        body: 'Preparing to cancel payment, please wait.',
                        footer: true,
                        primary_button: null,
                        temp: true,
                        temp_duration: Order.getPaymentCancellationCooldownDuration(),
                        show_progress_bar: true,
                        close_button: false,
                        onClose: function() {
                            UI.alert({
                                title: 'Cancel Payment?',
                                body: 'Processing your payment may take up to a few minutes to complete. <br>' + ' Are you sure you want to cancel the payment?',
                                primary_button: 'No, Continue',
                                secondary_button: 'Yes, Cancel Payment',
                                onClose: function() {
                                    that.is_cancelling_confirmation = false;
                                },
                                onSecondaryButtonClick: function() {
                                    that.is_cancelling_confirmation = true;
                                    Order.cancelConfirmation();
                                }
                            });
                        }
                    });
                } else {
                    UI.alert({
                        title: 'Cancelling...',
                        body: 'Attempting to cancel order confirmation.',
                        footer: true,
                        primary_button: null,
                        temp: true,
                        temp_duration: 14000,
                        show_progress_bar: true,
                        close_button: false,
                        onClose: function() {
                            that.is_cancelling_confirmation = false;
                            Order.cancelConfirmation();
                        }
                    });
                }
            } else if (phase === 'unconfirmed') {
                this.modal.close();
            }
        },
        showPaymentCancellationCooldownAlert: function() {
            UI.alert({
                title: 'Cancelling Payment...',
                body: 'Attempting to cancel payment, please wait.',
                footer: true,
                primary_button: null,
                temp: true,
                temp_duration: Order.getPaymentCancellationCooldownDuration(),
                show_progress_bar: true,
                close_button: false
            });
        },
        hidePaymentCancellationCooldownAlert: function() {
            if (Mobi2Go.Order.getProgressPhase() !== 'confirmed') {
                Mobi2Go.UI.closeAlert();
            }
            this.is_cancelling_confirmation = false;
        },
        closeClickHandler: function() {
            var phase = Order.getProgressPhase();
            if (phase === 'confirming' || phase === 'confirmed') {
                return;
            }
            this.modal.close();
            this.is_open = false;
        },
        doneClickHandler: function() {
            if (Order.getProgressPhase() === 'confirmed') {
                Order.finish();
                this.modal.unfreeze().close();
            }
        },
        setSubscriber: function(e) {
            Mobi2Go.Customer.update({
                is_subscriber: !!e.target.checked
            });
        },
        isPasswordEntered: function() {
            return !!UI.views.confirmation_payment.getTokenPassword();
        },
        forceIntoLoadingState: function() {
            if (Order.getProgressPhase() !== 'unconfirmed') {
                return;
            }
            this.$el.attr('data-phase', 'confirming');
            this.modal.updatePosition({
                force_animation: true
            });
        },
        resetLoadingStateIfForced: function() {
            if (Order.getProgressPhase() !== 'unconfirmed') {
                return;
            }
            this.$el.attr('data-phase', 'unconfirmed');
            this.modal.updatePosition({
                force_animation: true
            });
        },
        validatePassword: function() {
            var that = this;
            var password = UI.views.confirmation_payment.getTokenPassword();
            if (password.length < 5) {
                this.promptToEnterPassword();
                return;
            }
            this.forceIntoLoadingState();
            Order.providePassword(password, function(is_valid) {
                that.resetLoadingStateIfForced();
                if (is_valid) {
                    that.confirmClickHandler();
                    Order.log(200, 'valid password provided to use card token');
                } else {
                    UI.alert({
                        title: 'Incorrect password',
                        body: 'Please try again'
                    });
                    Order.log(200, 'invalid password provided to use card token');
                }
            });
        },
        promptToEnterPassword: function() {
            UI.alert({
                title: 'Password required',
                body: 'Please enter your password to use a saved card.'
            });
        },
    });
})(Mobi2Go, jQuery, this._ || exports._);
(function(Mobi2Go, $, _, window) {
    'use strict';
    var UI = Mobi2Go.UI,
        Order = Mobi2Go.Order;
    UI.View({
        name: 'confirmation_payment',
        model: Order,
        template: $('[data-template="confirmation-payment"]').html(),
        initialise: function() {
            UI.bind('confirmationViewRendered', this.render);
        },
        render: function() {
            this.setEl($('[data-view="confirmation-payment"]')[0]);
            var html = this.template(Order);
            this.$el.html(html);
            var payment_processor = Order.getPaymentProcessor();
            if (payment_processor) {
                switch (payment_processor.getFormType()) {
                    case 'direct':
                        UI.trigger('renderDirectCreditCardPaymentForm');
                        break;
                    case 'iframe':
                        UI.trigger('renderIframePaymentForm');
                        break;
                }
            }
        },
        model_listeners: {
            updatePaymentMethod: 'updatePaymentMethodSelection',
            updatePaymentCardToken: 'updatePaymentMethodSelection',
            updateAvailablePaymentCardTokens: 'render'
        },
        updatePaymentMethodSelection: function() {
            if (!this.$el) {
                return;
            }
            var $method_elements = this.$('[data-method]');
            var $method_element_to_check;
            var method = Order.getPaymentMethod();
            var card_token = Order.getPaymentCardToken();
            $method_elements.removeAttr('checked');
            if (!method) {
                return;
            }
            if (method === 'online') {
                if (card_token) {
                    var query = '[data-token-id="' + card_token.id + '"]';
                    $method_element_to_check = $method_elements.filter(query);
                } else {
                    var query = '[data-method="online"][data-non-tokenised]';
                    $method_element_to_check = $method_elements.filter(query);
                }
            } else if (method === 'offline') {
                var query = '[data-method="offline"]';
                $method_element_to_check = $method_elements.filter(query);
            }
            $method_element_to_check.attr('checked', '');
        },
        DOM_listeners: {
            'click [data-method]': 'handleMethodClick',
            'change [data-method]': 'handleMethodClick',
            'click [data-remove-token]': 'handleTokenRemoveClick',
            'click [data-forgot-password]': 'resetPasswordAlert',
            'keydown [type="checkbox"][data-method]': 'setMethodWithKeyboard',
            'keydown [data-password-input]': function(e) {
                var ENTER_KEY = 13;
                if (e.keyCode === ENTER_KEY && UI.views.confirmation) {
                    UI.views.confirmation.confirmClickHandler();
                }
            }
        },
        setMethodWithKeyboard: function(e) {
            if (e.keyCode && e.keyCode === 13 || e.keyCode === 32) {
                var $el = $(e.currentTarget);
                var method = $el.attr('data-method');
                if (Order.getPaymentMethod() === method) {
                    $el.attr('checked');
                }
                Order.setPaymentMethod(method);
            }
        },
        handleMethodClick: function(e) {
            var $el = $(e.currentTarget);
            var method = $el.attr('data-method');
            var token_id = $el.attr('data-token-id');
            if (token_id && Order.isPaymentCardTokenisationAvailable()) {
                Order.setPaymentCardTokenById(token_id);
            } else {
                Order.setPaymentCardToken(null);
            }
            Order.setPaymentMethod(method);
        },
        handleTokenRemoveClick: function(e) {
            var $el = $(e.currentTarget);
            var token_id = $el.attr('data-token-id');
            UI.alert({
                title: 'Remove Saved Card?',
                body: 'Are you sure you want to delete this card?',
                primary_button: 'Yes, Remove Card',
                secondary_button: 'Cancel',
                onPrimaryButtonClick: function() {
                    UI.alert({
                        title: 'Removing Saved Card',
                        body: 'Deleting saved card...',
                        temp: true,
                        temp_duration: 1200,
                        show_progress_bar: true,
                        primary_button: null
                    });
                    Mobi2Go.Customer.removePaymentCardToken({
                        id: token_id
                    }, function() {
                        Order.load(UI.closeAlert);
                    });
                }
            });
        },
        resetPasswordAlert: function() {
            var email = Mobi2Go.Customer.getEmail();
            UI.alert({
                title: 'Reset your password?',
                body: 'Would you like password reset instructions sent to your email?',
                primary_button: 'Send reset instructions',
                secondary_button: 'Cancel',
                onPrimaryButtonClick: function() {
                    Mobi2Go.Customer.sendPasswordReset(email);
                    UI.views.confirmation.modal.close();
                    UI.trigger('showCustomerPasswordRecovery', email);
                    Order.log(200, 'password recovery started from payment method view');
                },
            });
        },
        getTokenPassword: function() {
            var token = Order.getPaymentCardToken();
            var token_id = token ? token.id : null;
            if (!token_id) {
                return '';
            }
            return this.$('[data-token][data-token-id="' + token_id + '"] [data-password-input]').val();
        },
    });
})(Mobi2Go, jQuery, this._ || exports._, this);
(function(Mobi2Go, $, _) {
    var UI = Mobi2Go.UI;
    new UI.View({
        name: 'order_footer',
        el: '[data-view="order-footer"]',
        template: $('script[data-template="order-footer"]').html(),
        initialise: function() {
            var html;
            html = this.template(Mobi2Go);
            this.$el.html(html);
        },
        DOM_listeners: {
            'click [data-ui-switch]': function() {
                Mobi2Go.app.switchUI();
            },
            'click [data-refund]': function() {
                Mobi2Go.UI.trigger('showPolicy', 'refund');
            },
            'click [data-cancellation]': function() {
                Mobi2Go.UI.trigger('showPolicy', 'cancellation');
            },
            'click [data-delivery]': function() {
                Mobi2Go.UI.trigger('showPolicy', 'delivery');
            },
            'click [data-termsandconditions]': function() {
                Mobi2Go.UI.trigger('showPolicy', 'termsandconditions');
            }
        }
    });
})(Mobi2Go, jQuery, this._ || exports._);
(function(Mobi2Go, $, _, window) {
    'use strict';
    var UI = Mobi2Go.UI,
        Order = Mobi2Go.Order;
    UI.View({
        name: 'order_online_payment_direct_form',
        model: Order,
        template: $('[data-template="direct-credit-card-form"]').html(),
        has_rendered: false,
        initialise: function() {
            UI.bind('renderDirectCreditCardPaymentForm', this.render);
            UI.bind('invalidCreditCardDetailsWarning', this.invalidDetailsWarning);
        },
        model_listeners: {
            updatePaymentProcessor: 'updatePaymentProcessor',
            updateProgressPhase: 'updateProgressPhase',
            updateTotal: 'updateTotal'
        },
        render: function() {
            this.setEl($('[data-view="order-online-payment-direct-form"]')[0]);
            var html = this.template(Order);
            this.$el.html(html);
            this.$number = this.$('[data-credit-card-number]');
            this.$expiry = this.$('[data-credit-card-expiry]');
            this.$cvc = this.$('[data-credit-card-cvc]');
            this.$number.payment('formatCardNumber');
            this.$expiry.payment('formatCardExpiry');
            this.$cvc.payment('formatCardCVC');
            var processor = Order.getPaymentProcessor();
            if (processor.shouldShowBillingDetails()) {
                this.$billing = {
                    first_name: this.$('[data-credit-card-billing-first-name]'),
                    last_name: this.$('[data-credit-card-billing-last-name]'),
                    address_1: this.$('[data-credit-card-billing-address-1]'),
                    address_2: this.$('[data-credit-card-billing-address-2]'),
                    country: this.$('[data-credit-card-billing-country]'),
                    city: this.$('[data-credit-card-billing-city]'),
                    region: this.$('[data-credit-card-billing-region]'),
                    post_code: this.$('[data-credit-card-billing-postcode]')
                };
            }
            this.has_rendered = true;
        },
        updatePaymentProcessor: function(processor) {
            if (processor && processor.getFormType() === 'direct') {
                _.defer(_.bind(this.render, this));
            }
        },
        updateProgressPhase: function(phase) {
            if (!this.has_rendered) {
                return;
            }
            var $loader = this.$('[data-loader]');
            var $submit = this.$('[data-submit]');
            switch (phase) {
                case 'confirming':
                    $loader.removeClass('m2g-hidden');
                    $submit.addClass('m2g-hidden');
                    break;
                case 'unconfirmed':
                    $loader.addClass('m2g-hidden');
                    $submit.removeClass('m2g-hidden');
                    break;
            }
        },
        invalidDetailsWarning: function() {
            var processor = Order.getPaymentProcessor(),
                title = 'Invalid credit card details',
                body = 'Please check the credit card details provided';
            if (!processor.isCreditCardNumberValid()) {
                title = 'Invalid number';
                body = 'Please enter a valid credit card number';
            } else if (!processor.isCreditCardExpiryValid()) {
                title = 'Invalid expiry';
                body = 'Please enter a valid MM/YY expiry date';
            } else if (!processor.isBillingDetailsValid()) {
                title = 'Invalid billing details';
                body = 'Please enter all required billing details';
            }
            UI.alert({
                title: title,
                body: body,
                temp: true
            });
        },
        updateTotal: function() {
            if (this.has_rendered) {
                this.$('[data-total]').text(Order.getTotal().toInternational());
            }
        },
        DOM_listeners: {
            'change input': 'updateCreditCard',
            'focus input': 'updateCreditCard',
            'click input': 'updateCreditCard',
            'click [data-submit]': 'submit'
        },
        updateCreditCard: function() {
            var expiry = this.$expiry.payment('cardExpiryVal'),
                processor = Order.getPaymentProcessor();
            var credit_card = {
                number: this.$number.val(),
                expiry_month: expiry.month || null,
                expiry_year: expiry.year || null,
                cvc: this.$cvc.val()
            };
            if (processor.shouldShowBillingDetails()) {
                credit_card['billing_details'] = {
                    first_name: this.$billing.first_name.val(),
                    last_name: this.$billing.last_name.val(),
                    address_1: this.$billing.address_1.val(),
                    address_2: this.$billing.address_2.val(),
                    country: this.$billing.country.val(),
                    city: this.$billing.city.val(),
                    region: this.$billing.region.val(),
                    post_code: this.$billing.post_code.val()
                };
            }
            Order.getPaymentProcessor().setCreditCard(credit_card);
        },
        submit: function() {
            if (Order.getPaymentMethod() === 'online' && Order.getPaymentProcessor().getFormType() === 'direct') {
                if (Order.getPaymentProcessor().isBillingDetailsValid() && Order.getPaymentProcessor().isCreditCardValid()) {
                    Order.confirm();
                } else {
                    UI.trigger('invalidCreditCardDetailsWarning');
                }
            }
        }
    });
})(Mobi2Go, jQuery, this._ || exports._, this);
(function(Mobi2Go, $, _, window) {
    'use strict';
    var UI = Mobi2Go.UI,
        Order = Mobi2Go.Order;
    UI.View({
        name: 'order_online_payment_iframe_form',
        model: Order,
        initialise: function() {
            UI.bind('renderIframePaymentForm', this.render);
        },
        model_listeners: {
            updatePaymentProcessorIframe: 'render'
        },
        render: function() {
            var payment_processor = Order.getPaymentProcessor(),
                $iframe_view = $('[data-view="order-online-payment-iframe"] [data-container]');
            if (payment_processor.getFormType() === 'iframe') {
                $iframe_view.html(payment_processor.getIframe() || '').removeClass('m2g-hidden');
            } else {
                $iframe_view.html('').addClass('m2g-hidden');
            }
        }
    });
})(Mobi2Go, jQuery, this._ || exports._, this);
(function(Mobi2Go, $, _, window) {
    'use strict';
    var UI = Mobi2Go.UI,
        Order = Mobi2Go.Order;
    UI.View({
        name: 'order_online_payment_redirect_form',
        model: Order,
        model_listeners: {
            updatePaymentProcessorRedirectUrl: function(url) {
                url && UI.alert({
                    title: 'Complete Payment',
                    body: 'You will now be redirected to another page to complete payment.',
                    primary_button: 'Proceed to payment',
                    secondary_button: 'Cancel',
                    onPrimaryButtonClick: function() {
                        window.location = url;
                    },
                    onSecondaryButtonClick: function() {
                        Order.cancelConfirmation();
                    }
                });
            }
        }
    });
})(Mobi2Go, jQuery, this._ || exports._, this);
(function(Mobi2Go, $, _) {
    'use strict';
    var UI = Mobi2Go.UI,
        Order = Mobi2Go.Order;
    Mobi2Go.UI.View({
        name: 'product_editor',
        model: null,
        el: '[data-view="product-editor"]',
        template: $('script[data-template="product-editor"]').html(),
        initialise: function() {
            this.modal = new UI.Modal(this.$el);
            UI.bind('editProduct', this.load);
            if ($('#m2g-view').hasClass('m2g-view--ie')) {
                this.is_ie = true;
            }
        },
        is_ie: false,
        load: function(order_product) {
            var html = this.template(order_product);
            this.setModel(order_product);
            this.$el.html(html).attr('data-product', order_product.cid).attr('data-tags', order_product.menu_product.tags.join(' ')).attr('data-product-name', order_product.menu_product.backend_name);
            this.modal.open();
            this.$('[data-save]').focus();
            Mobi2Go.UI.helpers.placeholderText(this.el);
            if (this.model.modifier_groups.length) {
                var that = this;
                _.delay(function() {
                    that.scrollspy = new UI.ScrollSpy(that.$('[data-modifier-groups]'));
                    that.scrollspy.bind('updateTarget', that.setActiveModifierGroupListItem);
                }, 300);
            }
        },
        model_listeners: {
            updateTotal: 'setTotal',
            updateModifierSelection: 'setModifierSelection',
            updateModifierQuantity: 'setModifierQuantity',
            updateModifierPrice: 'updateModifierPrice',
            updateGroupSelectionCount: 'setGroupSelectionCount',
            updateGroupSelectionRequirementMet: 'setGroupSelectionRequirementMet',
            updateGroupSelectionLimitMet: 'setGroupSelectionLimitMet',
            selectionLimitWarning: 'selectionLimitWarning',
            groupSelectionLimitWarning: 'groupSelectionLimitWarning',
            groupSelectionRequirementWarning: 'groupSelectionRequirementWarning'
        },
        setTotal: function(total, list_total) {
            this.$('[data-price]').html(list_total.toString());
        },
        setError: function(error) {
            if (error) {
                this.$('[data-error]').text(error).show();
            } else {
                this.$('[data-error]').text('').hide();
            }
        },
        setModifierSelection: function(modifier) {
            var id = modifier.menu_modifier.id,
                $modifier = this.$('[data-modifier="' + id + '"]');
            $modifier.attr('data-selection-state', modifier.selection_state);
            if (modifier.selection_state !== 'off') {
                $modifier.attr('data-checked', '');
            } else {
                $modifier.removeAttr('data-checked');
            }
        },
        setModifierQuantity: function(modifier) {
            var id = modifier.menu_modifier.id;
            this.$('select[data-modifier="' + id + '"]').val(modifier.quantity);
            this.$('input[data-modifier="' + id + '"]').val(modifier.quantity);
        },
        updateModifierPrice: function(modifier) {
            var price = modifier.price.isEqual(0) ? '' : modifier.price.toString();
            this.$('[data-modifier="' + modifier.menu_modifier.id + '"]' + ' [data-modifier-price]').html(price);
        },
        setGroupSelectionCount: function(group) {
            this.$('[data-modifier-group="' + group.menu_modifier_group.id + '"]' + ' [data-modifier-group-selection-count]').text(group.selection_count);
        },
        setGroupSelectionRequirementMet: function(group) {
            var $modifier_group = this.$('[data-modifier-group="' + group.menu_modifier_group.id + '"]');
            if (group.selection_requirement_met) {
                $modifier_group.removeClass('m2g-product-editor-modifier-group--selection-requirement-unmet');
                if (this.model.saved_to_server) {
                    this.modal.allow_close = true;
                }
            } else {
                $modifier_group.addClass('m2g-product-editor-modifier-group--selection-requirement-unmet');
                if (this.model.saved_to_server) {
                    this.modal.allow_close = false;
                }
            }
        },
        setGroupSelectionLimitMet: function(group) {
            var id = group.menu_modifier_group.id,
                $modifier_group = this.$('[data-modifier-group="' + id + '"]');
            if (group.selection_limit_met) {
                $modifier_group.addClass('m2g-product-editor-modifier-group--selection-limit-met');
            } else {
                $modifier_group.removeClass('m2g-product-editor-modifier-group--selection-limit-met');
            }
        },
        group_selection_limit_warning_count: {},
        groupSelectionLimitWarning: function(group) {
            var id = group.menu_modifier_group.id,
                limit_badge = this.$('[data-modifier-group="' + id + '"]').find('[data-limit-badge]')[0],
                warning_alert_threshold = 5,
                group = group.menu_modifier_group;
            if (this.is_ie) {
                warning_alert_threshold = 0;
            }
            if (this.group_selection_limit_warning_count[id] === undefined) {
                this.group_selection_limit_warning_count[id] = 0;
            }
            this.group_selection_limit_warning_count[id]++;
            if (this.group_selection_limit_warning_count[id] >= warning_alert_threshold) {
                UI.alert({
                    title: 'Too many selections',
                    body: 'Sorry, you can\'t select more than ' +
                        group.selection_limit + ' from ' + group.name + '.',
                    temp: true
                });
                this.group_selection_limit_warning_count[id] -= warning_alert_threshold;
            }
            if (limit_badge) {
                UI.helpers.setAnimation(limit_badge, 'modifier-group-selection-warning');
            }
        },
        group_selection_requirement_warning_count: {},
        groupSelectionRequirementWarning: function(group) {
            var id = group.menu_modifier_group.id,
                error_message = '',
                requirement_badge = this.$('[data-modifier-group="' + id + '"]').find('[data-requirement-badge]')[0],
                warning_alert_threshold = 3,
                group = group.menu_modifier_group;
            if (this.is_ie) {
                warning_alert_threshold = 0;
            }
            if (this.group_selection_requirement_warning_count[id] === undefined) {
                this.group_selection_requirement_warning_count[id] = 0;
            }
            this.group_selection_requirement_warning_count[id]++;
            if (this.group_selection_requirement_warning_count[id] >= warning_alert_threshold) {
                error_message = 'You need to make at least ' +
                    group.selection_requirement + (group.selection_requirement === 1 ? ' selection' : ' selections') + ' from ' + group.name;
                UI.alert({
                    title: 'Selection required',
                    body: error_message,
                    temp: true
                });
                this.group_selection_requirement_warning_count[id] -= warning_alert_threshold;
            }
            this.scrollspy.scrollTo(id, function() {
                if (requirement_badge) {
                    UI.helpers.setAnimation(requirement_badge, 'modifier-group-selection-warning');
                }
            });
        },
        selectionLimitWarning: function() {
            UI.alert({
                title: 'Cannot add',
                body: 'Sorry, there is a limit of ' +
                    this.model.menu_product.modifier_selection_limit + ' choices.',
                temp: true
            });
        },
        modifierGroupListItemClickHandler: function(e) {
            var group_id = $(e.currentTarget).data('modifier-group');
            this.scrollspy.scrollTo(group_id);
        },
        setActiveModifierGroupListItem: function(group_id) {
            this.$('[data-modifier-group-nav] [data-modifier-group]').removeClass('m2g-nav-list-item--active').filter('[data-modifier-group=' + group_id + ']').addClass('m2g-nav-list-item--active');
        },
        DOM_listeners: {
            'change [data-size]': 'updateSize',
            'change [data-quantity]': 'updateQuantity',
            'change [data-quantity-text]': 'updateTextQuantity',
            'change [data-for-name]': 'updateForName',
            'change [data-comment]': 'updateComment',
            'click [data-modifier][data-type="boolean"]': 'modifierClickHandler',
            'click [data-modifier][data-type="fractional"]': 'modifierClickHandler',
            'keydown [data-modifier][data-type="boolean"]': 'modifierKeydownHandler',
            'keydown [data-modifier][data-type="fractional"]': 'modifierKeydownHandler',
            'selectstart [data-modifier]': function() {
                return false;
            },
            'change select[data-modifier]': 'modifierChangeHandler',
            'change input[data-modifier]': 'modifierChangeHandler',
            'click [data-save]': 'save',
            'click [data-close]': 'close',
            'click [data-remove]': 'remove',
            'click [data-modifier-group-nav] [data-modifier-group]': 'modifierGroupListItemClickHandler'
        },
        updateSize: function() {
            var id = this.$('[data-size]').val();
            this.model.setSizeById(id);
        },
        updateQuantity: function() {
            var quantity = +this.$('[data-quantity]').val();
            this.model.setQuantity(quantity);
        },
        updateTextQuantity: function() {
            var $input = this.$('[data-quantity-text]');
            var quantity = +$input.val();
            if (!quantity || _.isNaN(quantity)) {
                quantity = 1;
            }
            if (quantity > 2500) {
                quantity = 2500;
            }
            $input.val(quantity);
            this.model.setQuantity(quantity);
        },
        updateForName: function() {
            this.model.setForName(this.$('[data-for-name]').val());
        },
        updateComment: function() {
            this.model.setComment(this.$('[data-comment]').val());
        },
        modifierClickHandler: function(e) {
            var $el = $(e.currentTarget),
                modifier_id = $el.data('modifier');
            this.model.toggleModifierById(modifier_id);
        },
        modifierChangeHandler: function(e) {
            var $el = $(e.currentTarget),
                modifier_id = $el.data('modifier'),
                quantity = +$el.val();
            if (_.isNaN(quantity)) {
                quantity = 0;
            }
            if (quantity > 2500) {
                quantity = 2500;
            }
            this.model.setModifierQuantityById(modifier_id, quantity);
            quantity = this.model.getModifierByMenuId(modifier_id).quantity;
            $el.val(quantity);
        },
        modifierKeydownHandler: function(e) {
            if (e.keyCode !== 13) {
                return;
            }
            var $el = $(e.currentTarget),
                modifier_id = $el.data('modifier');
            this.model.toggleModifierById(modifier_id);
        },
        remove: function() {
            this.modal.close();
            this.model.removeFromOrder();
        },
        save: function() {
            var unmet_selection_requirement = this.model.getUnmetSelectionRequirementModifierGroup();
            if (unmet_selection_requirement) {
                this.groupSelectionRequirementWarning(unmet_selection_requirement);
                return;
            }
            this.modal.close();
            if (!this.model.isInOrder()) {
                this.model.addToOrder();
            }
        },
        close: function() {
            if (this.model.isInOrder()) {
                var unmet_selection_requirement = this.model.getUnmetSelectionRequirementModifierGroup();
                if (unmet_selection_requirement) {
                    this.groupSelectionRequirementWarning(unmet_selection_requirement);
                    return;
                }
            }
            this.modal.close();
        }
    });
})(Mobi2Go, jQuery, this._ || exports._);
(function(Mobi2Go, $) {
    'use strict';
    var UI = Mobi2Go.UI,
        policies = new Mobi2Go.UI.View({
            name: 'policies',
            model: UI,
            el: '[data-view="policies"]',
            template: $('[data-template="policies"]').html(),
            initialise: function() {
                this.modal = new Mobi2Go.UI.Modal(this.$el);
            },
            render: function(type) {
                var data = {
                        name: type.charAt(0).toUpperCase() + type.slice(1),
                        text: null
                    },
                    that = this;
                this.$el.html(this.template(data)).attr('data-type', type);
                this.modal.open();
                Mobi2Go.app.serverRequest({
                    api_version: 1,
                    endpoint: 'policy/' + type,
                    success: function(response) {
                        data.text = response;
                        that.$el.html(that.template(data));
                    }
                });
            },
            DOM_listeners: {
                'click [data-close]': function() {
                    this.modal.close();
                }
            },
            model_listeners: {
                showPolicy: function(policy_type) {
                    switch (policy_type) {
                        case 'cancellation':
                            break;
                        case 'refund':
                            break;
                        case 'delivery':
                            break;
                        case 'termsandconditions':
                            break;
                        default:
                            return;
                    }
                    this.render(policy_type);
                }
            }
        });
}(Mobi2Go, jQuery));
(function(Mobi2Go) {
    'use strict';
    Mobi2Go.onReady(function() {
        var UI = Mobi2Go.UI;
        if (Mobi2Go.headoffice.message) {
            UI.alert({
                title: Mobi2Go.headoffice.name,
                body: Mobi2Go.headoffice.message
            });
        }
    });
}(Mobi2Go));
(function() {
    var wait = setInterval(function() {
        if (window.Mobi2Go) {
            if (Mobi2Go.app.platform === 'web' || Mobi2Go.app.platform === 'mobile') {
                Mobi2Go.onReady(injectCountrySelector);
            }
            clearTimeout(wait);
        }
    }, 150);

    function injectCountrySelector() {
        Mobi2Go.Locations.onReady(function() {
            var domain_name = Mobi2Go.headoffice.domain_name;
            var options_html;
            if (domain_name === 'burgerfuel') {
                options_html = '<option selected>New Zealand</option>' + '<option value="https://www.burgerfuel.com/au/order?locations">Australia</option>' + '<option value="https://www.burgerfuel.com/uae/order?locations">UAE</option>';
            } else if (domain_name === 'burgerfuelaustralia') {
                options_html = '<option selected>Australia</option>' + '<option value="https://www.burgerfuel.com/nz/order?locations">New Zealand</option>' + '<option value="https://www.burgerfuel.com/uae/order?locations">UAE</option>';
            } else if (domain_name === 'burgerfueluae') {
                options_html = '<option selected>UAE</option>' + '<option value="https://www.burgerfuel.com/nz/order?locations">New Zealand</option>' + '<option value="https://www.burgerfuel.com/au/order?locations">Australia</option>';
            }
            if (Mobi2Go.app.isMobileUI()) {
                var $country_select = jQuery('<li class="m2g-country-select m2g-list-cell m2g-list-cell--title m2g-touchable">' + '<select class="m2g-list-cell__select">' +
                    options_html + '</select>' + '<span class="m2g-list-cell__icon m2g-icon m2g-icon--chevron-down m2g-list-cell__right"></span>' + '</li>');
                jQuery('[data-view="locations-regions"] ul, [data-view="locations-all"] ul').prepend($country_select);
            } else {
                var $country_select = jQuery('<div class="m2g-country-select m2g-input-container" data-icon-after="select">' + '<select class="m2g-select">' +
                    options_html + '</select>' + '</div>');
                jQuery('[data-view="locations-browser"] .m2g-modal-body').prepend($country_select);
            }
            $country_select.find('select').bind('change', function() {
                var url = jQuery(this).val();
                if (url) {
                    window.location = url;
                }
            });
        });
    }
    Mobi2Go.UI.views.customer_last_order.query_override = {
        expected_at: '05-02-2016,05-02-3005'
    };
    Mobi2Go.UI.locations_finder_disabled = true;
    Mobi2Go.UI.global_page_scroll_offset = 50;
}());
Mobi2Go.Order.bind('updateVoucherCode', function() {
    setTimeout(function() {
        Mobi2Go.UI.alert({
            title: 'Notification',
            body: 'To redeem your deal: Add all your items first, then enter your online code at the checkout.'
        });
    }, 200);
});
